{"version":3,"sources":["views/users/UsersData.js","components/goaml-core/types.js","components/form-inputs/form-actions.component.jsx","components/form-inputs/form-date.component.jsx","components/form-inputs/form-input.component.jsx","components/form-inputs/form-textarea-component.jsx","components/form-inputs/form-react-select.component.jsx","components/goaml-enums/report-code-enum/report-code-enum.component.jsx","redux/goaml-utils/goaml-utils.js","redux/report/report.actions.js","redux/report/report.selectors.js","components/goaml-sections/report-type/report-type.component.jsx","components/goaml-tables/combined-table.component.jsx","components/goaml-sections/report-person/report-person.component.jsx","components/goaml-sections/report-location/report-location.component.jsx","components/goaml-sections/report-indicator/report-indicator.component.jsx","components/goaml-tables/table-transaction.component.jsx","components/form-inputs/form-amount.component.jsx","components/form-inputs/form-radio-text.component.jsx","components/form-inputs/form-dynamic-select.component.jsx","components/goaml-enums/client-type-enum/client-type-enum.component.jsx","components/goaml-enums/conduction-type-enum/conduction-type-enum.component.jsx","redux/transaction/transaction.format.js","components/goaml-sections/transaction-info/transaction-info.components.jsx","components/goaml-enums/currencies-enum/currencies-enum.component.jsx","components/goaml-enums/transaction-item-status-enum/transaction-item-status-enum.component.jsx","components/goaml-enums/transaction-item-type-enum/transaction-item-type-enum.component.jsx","components/goaml-sections/transaction-item/transaction-item.components.jsx","components/goaml-enums/country-code-enum/country-code-enum.component.jsx","components/goaml-enums/funds-type-enum/funds-type-enum.component.jsx","components/goaml-tables/table-person.component.jsx","components/goaml-enums/party-type-enum/party-type-enum.components.jsx","components/form-inputs/form-email.component.jsx","components/form-inputs/form-gender-select.component.jsx","components/goaml-tables/table-address.component.jsx","components/goaml-enums/contact-type-enum/contact-type-enum.component.jsx","components/goaml-sections/template-address/template-address.components.jsx","components/goaml-sections/report-addresses/report-addresses.component.jsx","components/goaml-tables/table-identity.component.jsx","components/goaml-enums/identifier-type-enum/identifier-type-enum.component.jsx","components/goaml-sections/template-identification/template-identification.components.jsx","components/goaml-sections/report-identifications/report-identifications.component.jsx","components/goaml-tables/table-phone.component.jsx","components/goaml-enums/communication-type-enum/communication-type-enum.component.jsx","components/goaml-sections/template-phone/template-phone.components.jsx","components/goaml-sections/report-phones/report-phones.components.jsx","components/goaml-sections/template-person/template-person.component.jsx","components/goaml-sections/transaction-person/transaction-person.component.jsx","components/goaml-enums/account-type-enum/account-type-enum.component.jsx","components/goaml-enums/entity-legal-form-enum/entity-legal-form-enum.component.jsx","components/goaml-tables/table-director.component.jsx","components/goaml-enums/entity-person-role-enum/entity-person-role-enum.component.jsx","components/goaml-sections/template-director/template-director.components.jsx","components/goaml-sections/transaction-director/transaction-director.component.jsx","components/goaml-sections/transaction-entity/transaction-entity.components.jsx","components/goaml-tables/table-signatory.component.jsx","components/goaml-enums/account-person-role-enum/account-person-role-enum.component.jsx","components/goaml-sections/template-signatory/template-signatory.components.jsx","components/goaml-sections/transaction-signatory/transaction-signatory.component.jsx","components/goaml-sections/transaction-account/transaction-account.components.jsx","components/goaml-sections/transaction-party/transaction-party.types.js","redux/transaction-party/from.format.js","components/goaml-sections/transaction-party/party-from.component.jsx","redux/transaction-party/from-my-client.format.js","components/goaml-sections/transaction-party/party-from-my-client.component.jsx","redux/transaction-party/to.format.js","components/goaml-sections/transaction-party/party-to.component.jsx","components/goaml-sections/transaction-party/party-to-my-client.component.jsx","components/goaml-sections/transaction-party/transaction-party.component.jsx","components/goaml-sections/template-transaction/template-transaction.component.jsx","components/goaml-sections/report-transactions/report-transactions.component.jsx","components/goaml-core/converter-json-xml.js","components/goaml-core/report-generator.component.jsx","components/goaml-core/report-downloader.js","components/goaml-core/MakeColumns.js","components/goaml-excel-reader/goaml-excel-upload.components.jsx","components/goaml-excel-reader/goaml-excel-reader.components.jsx","pages/goaml-page/goaml-page.component.jsx"],"names":["usersData","id","name","registered","role","status","map","x","join","FormActions","saveText","handleCancelClick","handleSaveClick","className","color","onClick","FormDate","label","handleChange","placeholder","otherProps","htmlFor","type","onChange","FormInput","required","FormTextArea","rows","FormReactSelect","this","props","options","animatedComponents","makeAnimated","length","closeMenuOnSelect","components","defaultValue","isMulti","React","Component","ReportCodeEnum","state","reportIndicators","value","RetrieveTransactionFromReport","fullReport","internal_ref_number","transaction","find","reportTransaction","setReport","item","ReportTypes","SET_REPORT","payload","selectReport","createSelector","goamlReport","report","selectAllTransactions","connect","console","log","dispatch","error","useState","collapsed","setCollapsed","showElements","reportState","setComponentState","touched","setTouched","onFocus","onBlur","isEmpty","setShowError","checkInputs","e","inputState","val","myValidation","Object","entries","key","target","event","xs","timeout","in","unmountOnExit","show","row","onKeyUp","entity_id","rentity_id","rentity_branch","entity_reference","report_code","fiu_ref_number","submission_date","action","reason","alert","getBadge","CombinedTable","fields","tableData","items","hover","striped","bordered","size","itemsPerPage","pagination","scopedSlots","ReportPerson","Id","FirstName","LastName","IdNumber","Passport","closed","ReportLocation","Address","City","State","Postal","Country","report_indicators","TransactionTable","transactionData","FormAmount","FormRadioText","checked","width","disabled","FormDynamicSelect","custom","option","description","ClientTypeEnum","ConductionTypeEnum","TransactionFormat","transRef","handleSaveInfoClick","setCheck","showError","detail","transactionFormat","txn_from","txn_to","setTransactionState","method","transactionnumber","transmode_comment","amount_local","transmode_code","date_transaction","date_posting","teller","authorized","transaction_location","late_deposit","transaction_description","class","existingTxn","reportTxns","push","CurrenciesEnum","TransactionItemStatusEnum","TransactionItemTypeEnum","reportType","setReportType","checkData","item_type","previous_register_to","presently_register_to","status_code","registration_number","item_make","disposed_value","size_UOM","identification_number","comments","estimate_value","currency_code","registration_date","status_commets","CountryCodeEnum","FundsTypeEnum","PersonTable","FormEmail","FormGenderSelect","index","AddressTable","ContactTypeEnum","TemplateAddress","handleAddressSave","templateAddress","address_type","city","country_code","address","town","zip","ReportAddresses","tab1Title","tab2Title","activeTab","variant","data-tab","IdentificationTable","IdentifierTypeEnum","IdentificationTemplate","handleIdentificationSave","templateIdentification","issued_by","number","issue_country","issue_date","expiry_date","ReportIdentifications","PhoneTable","CommunicationTypeEnum","PhoneTemplate","handlePhoneSave","templatePhone","tph_contact_type","tph_number","tph_communication_type","tph_extension","tph_country_prefix","ReportPhones","PersonTemplate","alias","OnSave","partyType","templatePerson","first_name","title","mothers_name","nationality1","passport_number","source_of_wealth","middle_name","gender","birthdate","residence","nationality2","occupation","employer_name","last_name","prefix","birth_place","email","ssn","tax_number","tax_reg_number","phone","phones","addresses","identification","date_deceased","TransactionPersons","AccountTypeEnum","EntityLegalFormEnum","DirectorTable","EntityPersonRoleEnum","DirectorTemplate","entityDirectorInfo","setEntityDirectorInfo","txnRef","person","t_person","director","TransactionDirectors","TransactionEntity","templateEntity","business","incorporation_state","url","commercial_name","incorporation_number","incorporation_country_code","incorporation_legal_form","incorporation_date","business_closed","director_id","SignatoryTable","AccountPersonRoleEnum","SignatoryTemplate","componentState","onChecked","is_primary","TransactionSignatories","TransactionAccount","stateAccount","setStateAccount","account","iban","non_banking_institution","opened","account_name","institution_name","swift","balance","closedt","personal_account_type","branch","date_balance","client_number","beneficiary","beneficiary_comment","transaction_entity","signatory","TransactionsPartyTypes","FROM","TO","MY_CLIENT","PERSON_CLIENT","ACCOUNT_CLIENT","ENTITY_CLIENT","NOT_MY_CLIENT","PERSON_NOT_CLIENT","ACCOUNT_NOT_CLIENT","ENTITY_NOT_CLIENT","t_from","clientType","handleSavePartyInfo","collapseMulti","setCollapseMulti","transpartyInfo","setTranspartyInfo","toggleMulti","newCollapse","slice","from_foreign_currency","from_funds_code","from_funds_comment","from_country","foreign_currency_code","foreign_exchange_rate","foreign_amount","conductor","t_conductor","from_person","from_account","entity","from_entity","t_from_my_client","t_to","to_foreign_currency","to_funds_code","to_funds_comment","to_country","foreign_currency","to_person","to_account","to_entity","t_to_my_client","addTFrom","T_FROM","addTTo","T_TO","addTFromMyClient","T_FROM_MY_CLIENT","addTToMyClient","T_TO_MY_CLIENT","from","to","displayPartyType","transparty","addReportTransaction","ADD_REPORT_TRANSACTION","transitState","setTransitState","ReportTransactions","obj2xml","OBJtoXML","obj","xml","prop","Array","array","replace","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsXml","make_cols","refstr","o","C","XLSX","utils","decode_range","c","i","encode_col","GoAmlExcelUpload","accept","handleFile","fileName","GoamlExcelFileReader","files","setState","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","bookVBA","wsname","SheetNames","ws","Sheets","data","sheet_to_json","cols","JSON","stringify","readAsArrayBuffer","GoAmlPage"],"mappings":"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","file":"static/js/7.36e85550.chunk.js","sourcesContent":["const usersData = [\r\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\r\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\r\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\r\n]\r\n\r\nexport default usersData\r\n","const SheetJSFT = [\r\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function(x) { return \".\" + x; }).join(\",\");","import React from 'react'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst FormActions = ({saveText, handleCancelClick, handleSaveClick}) => {\r\n\r\n    return (\r\n        <div className=\"form-actions\">\r\n            <CButton color=\"primary\" onClick={handleSaveClick}>{ !saveText ? \"Save changes\": saveText }</CButton>\r\n            <CButton color=\"secondary\" className=\"btn-cancel-form-actions\" onClick={handleCancelClick}>Cancel</CButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormActions;","import {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\n\r\nconst FormDate = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput type=\"datetime\" id={name} name={name} onChange={handleChange} {...otherProps} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDate;\r\n","import {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\n\r\nconst FormInput = ({ label, name, placeholder, type, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput id={name} name={name} type={type} onChange={handleChange} {...otherProps} placeholder={placeholder} required=\"required\" />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CTextarea,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormTextArea = ({ label, name, rows, placeholder, handleChange }) => (\r\n    <CFormGroup>\r\n        {label ? (\r\n            <CLabel htmlFor={name}>{label}</CLabel>\r\n        ) : null}\r\n        <CTextarea \r\n            name={name} \r\n            id={name} \r\n            rows={rows}\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    </CFormGroup>\r\n  );\r\n\r\nexport default FormTextArea;\r\n","import {\r\n    CFormGroup,\r\n    CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n\r\nclass FormReactSelect extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n    \r\n    render() {\r\n        const { options, label, name, handleChange } = this.props;\r\n        const animatedComponents = makeAnimated();\r\n  \r\n        return (\r\n          <CFormGroup>\r\n              {label ? (\r\n                  <CLabel htmlFor={name}>{label}</CLabel>\r\n                  ) : null}\r\n              {options && options.length > 0 && (\r\n                  <div className=\"col-xs-12\">\r\n                      <Select\r\n                          name={name} \r\n                          id={name} \r\n                          onChange={handleChange}\r\n                          closeMenuOnSelect={false}\r\n                          components={animatedComponents}\r\n                          defaultValue={name}\r\n                          isMulti\r\n                          options={options}\r\n                      />\r\n                  </div>\r\n              )}\r\n          </CFormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormReactSelect;\r\n","import React from 'react';\r\nimport FormReactSelect from '../../form-inputs/form-react-select.component';\r\n\r\nclass ReportCodeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reportIndicators : [\r\n                {value: 'CTR', label:'Cash Transaction Report'},\r\n                {value: 'STR', label:'Suspicious Transaction Report'},\r\n                {value: 'EFT', label:'Electronic Funds Transfer'},\r\n                {value: 'IFT', label:'International Funds Transfer'},\r\n                {value: 'TFR', label:'Terror Financing Report'},\r\n                {value: 'BCR', label:'Border Cash Report'},\r\n                {value: 'UTR', label:'Unusual Transaction Report'},\r\n                {value: 'AIF', label:'Additional Information File'},\r\n                {value: 'IRI', label:'Incoming Request for Information – International'},\r\n                {value: 'ORI', label:'Outgoing Request for Information – International'},\r\n                {value: 'IRD', label:'Incoming Request for Information – Domestic'},\r\n                {value: 'ORD', label:'Outgoing Request for Information – Domestic'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { reportIndicators } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormReactSelect label={label} name={name} handleChange={handleChange} options={reportIndicators} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ReportCodeEnum;","import ReportPersonTypes from '../transaction-person/report-person.types';\r\n\r\n\r\nexport const RetrieveTransactionFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn;\r\n}\r\n\r\nexport const RetrieveTFromMyClientFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.t_from_my_client;\r\n}\r\n\r\nexport const RetrieveTFromNotMyClientFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.t_from;\r\n}\r\n\r\nexport const RetrieveTToMyClientFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.t_to_my_client;\r\n}\r\n\r\nexport const RetrieveTToNotMyClientFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.t_to;\r\n}\r\n\r\nexport const RetrieveInvolvedPartiesFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.involved_parties;\r\n}\r\n\r\nexport const RetrieveGoodsServicesFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn.goods_services;\r\n}\r\n\r\nexport const AddTransactionToGoAmlReport = (reportType, templateTxn) => {\r\n    if(templateTxn == null)\r\n        return;\r\n    if(templateTxn.internal_ref_number == null)\r\n        return;\r\n\r\n    const existingTxn = reportType.Items.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === templateTxn.internal_ref_number\r\n    );\r\n    \r\n    if (existingTxn) {\r\n        const reportTxns = reportType.Items.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === templateTxn.internal_ref_number\r\n                ? { ...reportTransaction, ...templateTxn }\r\n                : reportTransaction\r\n        );\r\n        return reportTxns;\r\n    }\r\n}; \r\n\r\nexport const AddPersonToGoAmlReport = (reportType, templatePerson, personType, reportTypeFieldReference) => {\r\n\r\n    console.log(\"Awa: \", reportType, templatePerson, personType, reportTypeFieldReference);\r\n\r\n    switch (personType.trim()) {\r\n        case ReportPersonTypes.t_from_my_client_t_conductor:\r\n        case ReportPersonTypes.t_from_my_client_t_from_person:\r\n            let reportTxn = null;\r\n            const existingReportTransaction = reportType.Items.find(\r\n                reportTransaction => reportTransaction.internal_ref_number === reportTypeFieldReference\r\n            );\r\n            switch (personType) {\r\n                case ReportPersonTypes.t_from_my_client_t_conductor:\r\n                    if (existingReportTransaction) {\r\n                        reportTxn = reportType.Items.map(reportTransaction =>\r\n                            reportTransaction.internal_ref_number === reportTypeFieldReference\r\n                                ? { ...reportTransaction, t_conductor: templatePerson }\r\n                                : reportTransaction\r\n                        );\r\n                        console.log(\"Awa111A: \", reportTxn);\r\n                        return reportTxn;\r\n                    }\r\n                    console.log(\"Awa111B: \", reportTxn);\r\n                    break;\r\n                case ReportPersonTypes.t_from_my_client_t_from_person:  \r\n                    if (existingReportTransaction) {\r\n                        reportTxn = reportType.Items.map(reportTransaction =>\r\n                            reportTransaction.internal_ref_number === reportTypeFieldReference\r\n                                //? {...reportTransaction, Items: {...Items, templatePerson}} \r\n                                ? reportTransaction.Items.push(templatePerson) \r\n                                : reportTransaction\r\n                        );\r\n\r\n                        console.log(\"Awa112A: \", reportTxn);\r\n                        return reportTxn;\r\n                    }\r\n                    console.log(\"Awa112B: \", reportTxn);  \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            console.log(\"Awa222: \", reportType, templatePerson, personType, reportTypeFieldReference);\r\n            \r\n            //return {...reportType, Items: reportTxn};\r\n            break;\r\n        case \"t_from_my_client.from_person22\":\r\n            console.log(reportType);\r\n            //return [...reportType, { ...reportTransactionToAdd, quantity: 1 }];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};","import ReportTypes from './report.types';\r\nimport { RetrieveTransactionFromReport } from '../goaml-utils/goaml-utils';\r\n\r\nexport const setReport = item => ({\r\n    type: ReportTypes.SET_REPORT,\r\n    payload: item\r\n});\r\n\r\nexport const addTransactionToReport = item => {\r\n    return ({\r\n        type: ReportTypes.ADD_REPORT_TRANSACTION,\r\n        payload: item\r\n    })\r\n};\r\n\r\nexport const addTFrom = (report, internal_ref_number, item) => {\r\n    const existingTxn = RetrieveTransactionFromReport(report, internal_ref_number);\r\n    if (existingTxn) {\r\n        existingTxn.t_from = item;\r\n        let reportTxns = report.transaction.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === internal_ref_number\r\n                ? existingTxn\r\n                : reportTransaction\r\n        );\r\n        return ({\r\n            type: ReportTypes.T_FROM,\r\n            payload: reportTxns\r\n        })\r\n    };\r\n};\r\n\r\nexport const addTFromMyClient = (report, internal_ref_number, item) => {\r\n    const existingTxn = RetrieveTransactionFromReport(report, internal_ref_number);\r\n    if (existingTxn) {\r\n        existingTxn.t_from_my_client = item;\r\n        let reportTxns = report.transaction.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === internal_ref_number\r\n                ? existingTxn\r\n                : reportTransaction\r\n        );\r\n        return ({\r\n            type: ReportTypes.T_FROM_MY_CLIENT,\r\n            payload: reportTxns\r\n        })\r\n    };\r\n};\r\n\r\nexport const addTTo = (report, internal_ref_number, item) => {\r\n    const existingTxn = RetrieveTransactionFromReport(report, internal_ref_number);\r\n    if (existingTxn) {\r\n        existingTxn.t_to = item;\r\n        let reportTxns = report.transaction.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === internal_ref_number\r\n                ? existingTxn\r\n                : reportTransaction\r\n        );\r\n        return ({\r\n            type: ReportTypes.T_TO,\r\n            payload: reportTxns\r\n        })\r\n    };\r\n};\r\n\r\nexport const addTToMyClient = (report, internal_ref_number, item) => {\r\n    const existingTxn = RetrieveTransactionFromReport(report, internal_ref_number);\r\n    if (existingTxn) {\r\n        existingTxn.t_to_my_client = item;\r\n        let reportTxns = report.transaction.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === internal_ref_number\r\n                ? existingTxn\r\n                : reportTransaction\r\n        );\r\n        return ({\r\n            type: ReportTypes.T_TO_MY_CLIENT,\r\n            payload: reportTxns\r\n        })\r\n    };\r\n};\r\n\r\nexport const addInvolvedParties = (report, internal_ref_number, item) => {\r\n    const existingTxn = RetrieveTransactionFromReport(report, internal_ref_number);\r\n    if (existingTxn) {\r\n        existingTxn.involved_parties = item;\r\n        let reportTxns = report.transaction.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === internal_ref_number\r\n                ? existingTxn\r\n                : reportTransaction\r\n        );\r\n        return ({\r\n            type: ReportTypes.INVOLVED_PARTIES,\r\n            payload: reportTxns\r\n        })\r\n    };\r\n};\r\n\r\nexport const addGoodsAndServices = item => ({\r\n    type: ReportTypes.GOODS_SERVICES,\r\n    payload: item\r\n});\r\n\r\n/* export const addInvolvedParties = () => ({\r\n    type: ReportTypes.INVOLVED_PARTIES\r\n});\r\n\r\nexport const addTFrom = item => ({\r\n    type: ReportTypes.T_FROM,\r\n    payload: item\r\n});\r\n\r\nexport const addTFromMyClient = item => ({\r\n    type: ReportTypes.T_FROM_MY_CLIENT,\r\n    payload: item\r\n});\r\n\r\nexport const addTTo = item => ({\r\n    type: ReportTypes.T_TO,\r\n    payload: item\r\n});\r\n\r\nexport const addTToMyClient = () => ({\r\n    type: ReportTypes.T_TO_MY_CLIENT\r\n}); */\r\n","import { createSelector } from 'reselect';\r\n\r\nconst GoAmlReport = state => state.goamlReport;\r\n\r\nexport const selectReport = createSelector(\r\n    [GoAmlReport],\r\n    goamlReport => goamlReport.report\r\n);\r\n\r\nexport const selectAllTransactions = createSelector(\r\n    [selectReport],\r\n    report => report.transaction\r\n);\r\n\r\nexport const selectSingleTransaction = createSelector(\r\n    [selectAllTransactions],\r\n    (transaction, props) => {\r\n        console.log(\"transaction: \", transaction);\r\n        console.log(\"props: \", props) \r\n    }\r\n    //transaction.map(x => x.internal_ref_number == props.transRef)\r\n);\r\n\r\nexport const makeGetSingleTransaction = () => {\r\n    return createSelector(\r\n        [selectAllTransactions],\r\n        (transaction, props) => {\r\n            return transaction.map(x => x.internal_ref_number == props.transRef)\r\n        }\r\n    )\r\n}","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ReportCodeEnum from '../../goaml-enums/report-code-enum/report-code-enum.component';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\n\r\nconst ReportType = ({ name, error, report, setReport }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [showElements] = React.useState(true)\r\n    const [reportState, setComponentState] = React.useState({\r\n        \"rentity_id\": 0,\r\n        \"rentity_branch\": \"\",\r\n        \"submission_code\": \"\",\r\n        \"report_code\": 0,\r\n        \"entity_reference\": null,\r\n        \"fiu_ref_number\": null,\r\n        \"submission_date\": \"0001-01-01T00:00:00\",\r\n        \"currency_code_local\": 0,\r\n        \"reporting_person\": null,\r\n        \"location\": null,\r\n        \"reason\": \"\",\r\n        \"action\": \"\",\r\n        \"transaction\": [],\r\n        \"activity\": null,\r\n        \"report_indicators\": []\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation = reportState;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    console.log(\"MyValidation: \", myValidation);\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...reportState, [name]: value });\r\n    };\r\n\r\n    const handleReactSelectTyeChange = event => {\r\n        let type = event.map((item) => {\r\n            return item.value\r\n        })\r\n        setComponentState({ ...reportState, report_code: type });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (!reportState.rentity_id || !reportState.rentity_branch || !reportState.entity_reference || !reportState.report_code\r\n            || !reportState.fiu_ref_number || !reportState.submission_date || !reportState.reason || !reportState.action) {\r\n            alert('please complete this field');\r\n        }\r\n\r\n        console.log(\"reportState: \", reportState);\r\n        return setReport({ ...report, ...reportState });\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Entity\"\r\n                                                type=\"number\"\r\n                                                name=\"rentity_id\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.entity_id}\r\n                                                className={`form-control ${!reportState.rentity_id && touched && 'is-invalid'}${reportState.rentity_id && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Reporting Entity Branch\"\r\n                                                name=\"rentity_branch\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.rentity_branch}\r\n                                                className={`form-control ${!reportState.rentity_branch && touched && 'is-invalid'} ${reportState.rentity_branch && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Reporting Entity Reference\"\r\n                                                name=\"entity_reference\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.entity_reference}\r\n                                                className={`form-control ${!reportState.entity_reference && touched && 'is-invalid'} ${reportState.entity_reference && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportCodeEnum\r\n                                                label=\"Type*\"\r\n                                                name=\"report_code\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleReactSelectTyeChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.report_code}\r\n                                                className={`form-select ${!reportState.report_code && touched && 'is-invalid'} ${reportState.report_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"FIU Ref Number\"\r\n                                                name=\"fiu_ref_number\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.fiu_ref_number}\r\n                                                className={`form-control ${!reportState.fiu_ref_number && touched && 'is-invalid'} ${reportState.fiu_ref_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        {/* <CCol xs=\"4\">\r\n                                        <FormInput \r\n                                                label=\"Entity Reference\" \r\n                                                name=\"entity_reference\" \r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus} \r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.entity_reference}  \r\n                                                className={`form-control ${!reportState.entity_reference && touched && 'is-invalid'} ${reportState.entity_reference && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol> */}\r\n                                        <CCol xs=\"4\">\r\n                                            <FormDate\r\n                                                type=\"date\"\r\n                                                label=\"Submission Date*\"\r\n                                                name=\"submission_date\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.submission_date}\r\n                                                className={`form-select ${!reportState.submission_date && touched && 'is-invalid'} ${reportState.submission_date && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Action\"\r\n                                                name=\"action\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.action}\r\n                                                className={`form-control ${!reportState.action && touched && 'is-invalid'} ${reportState.action && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea\r\n                                                label=\"Reason for Reporting\"\r\n                                                name=\"reason\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)}\r\n                                                value={reportState.reason}\r\n                                                className={`form-select ${!reportState.reason && touched && 'is-invalid'} ${reportState.reason && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions\r\n                                        saveText=\"Save Report Type\"\r\n                                        handleSaveClick={handleSaveClick}\r\n                                        handleCancelClick={handleCancelClick}\r\n                                    >\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReport: report => dispatch(setReport(report))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportType);\r\n","import CIcon from '@coreui/icons-react'\r\nimport {\r\n  CBadge, CButton,\r\n\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CCollapse,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport React from 'react'\r\n// import { bool } from 'prop-types'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst CombinedTable = ({name, fields, tableData, ...otherProps}) => {\r\n\r\n  let [collapsed, setCollapsed] = React.useState(false);\r\n  // let [showElements, setShowElements] = React.useState(true);\r\n\r\n  return (\r\n    <>\r\n        <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  {name}\r\n                  <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                </CCardHeader>\r\n                <CCollapse show={collapsed} timeout={1000}>\r\n                  <CCardBody>\r\n                    <CDataTable\r\n                    items={tableData}\r\n                    fields={fields}\r\n                    hover\r\n                    striped\r\n                    bordered\r\n                    size=\"sm\"\r\n                    itemsPerPage={10}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                        'status':\r\n                        (item)=>(\r\n                            <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                                {item.status}\r\n                            </CBadge>\r\n                            </td>\r\n                        )\r\n                    }}\r\n                    />\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CombinedTable\r\n","import React from 'react';\r\nimport CombinedTable from '../../goaml-tables/combined-table.component'\r\n\r\nconst fields = ['Id','FirstName', 'LastName', 'Date of Birth', 'IdNumber', 'Passport', 'status']\r\n\r\nclass ReportPerson extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usersData : [\r\n                {\r\n                Id: 1,\r\n                FirstName: \"John\",\r\n                LastName: \"Doe\",\r\n                \"Date of Birth\": \"18/03/1992\",\r\n                IdNumber: \"A25529928\",\r\n                Passport: \"\",\r\n                status: 'Active'\r\n            }]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { usersData } = this.state;\r\n        const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Reporting Person\" closed={\"true\"} fields={fields} tableData={usersData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportPerson;","import React from 'react';\r\nimport CombinedTable from '../../goaml-tables/combined-table.component'\r\n\r\nconst fields = ['Id','Address', 'City', 'State', 'Postal', 'Country']\r\n\r\nclass ReportLocation extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usersData : [\r\n            {\r\n                Id: 1,\r\n                Address: \"Building 21\",\r\n                City: \"Victoria Island\",\r\n                State: \"Lagos\",\r\n                Postal: \"01104\",\r\n                Country: \"Nigeria\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { usersData } = this.state;\r\n        const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Reporting Location\" fields={fields} tableData={usersData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportLocation;","import React from 'react';\r\nimport ReportCodeEnum from '../../goaml-enums/report-code-enum/report-code-enum.component';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n  } from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { connect } from 'react-redux';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\n\r\n\r\nconst ReportIndicator = ({ name, report, setReport, ...otherProps }) => {\r\n\r\n    let [collapsed, setCollapsed] = React.useState(true)\r\n    let [showElements, setShowElements] = React.useState(true)\r\n\r\n    const handleReactSelectTyeChange = event => {\r\n        let type = event.map((item) => {\r\n            return item.value\r\n        })\r\n        report.report_indicators = type;\r\n    };\r\n    \r\n    const handleSaveClick = () => {\r\n        setReport(report);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        {name}\r\n                        <div className=\"card-header-actions\">\r\n                            <CButton \r\n                            color=\"link\" \r\n                            className=\"card-header-action btn-minimize\" \r\n                            onClick={() => setCollapsed(!collapsed)}\r\n                            >\r\n                            <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                            </CButton>\r\n                        </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\">\r\n                                    <ReportCodeEnum name=\"report_indicators\" handleChange={handleReactSelectTyeChange} />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReport: report => dispatch(setReport(report))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportIndicator);\r\n","import React from 'react';\r\nimport usersData from '../../views/users/UsersData';\r\nimport CombinedTable from './combined-table.component';\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass TransactionTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Transactions Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransactionTable;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormAmount = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput id={name} name={name} onChange={handleChange} {...otherProps} placeholder={placeholder} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormAmount;\r\n","import {\r\n    CCol, CInput,\r\n\r\n    CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport './form-radio-text.style.css';\r\n\r\nconst FormRadioText = ({ label, name, value, checked, placeholder, width, items, handleChange }) => (\r\n    <div className=\"form-group\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    {items ? \r\n                    items.map((item) => {\r\n                        return(\r\n                            <CCol xs={width}>\r\n                                <div className=\"input-group\">\r\n                                    <span className=\"input-group-addon\">\r\n                                        <input type=\"radio\" onChange={handleChange} name={name} checked={checked} />\r\n                                    </span>\r\n                                    <CInput name={name} defaultValue={item} disabled />\r\n                                </div>\r\n                            </CCol>\r\n                        )\r\n                    }) : null}\r\n                </div>\r\n            </div>\r\n  );\r\n\r\nexport default FormRadioText;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect  } from '@coreui/react'\r\n\r\nconst FormDynamicSelect = ({ options, label, name, handleChange }) => (\r\n  <CFormGroup>\r\n      {label ? (\r\n          <CLabel htmlFor={name}>{label}</CLabel>\r\n          ) : null}\r\n      {options && options.length > 0 && (\r\n          <CSelect custom name={name} id={name} onChange={handleChange}>\r\n              {options.map((option) => {\r\n                  return <option value={option.value}>{option.description}</option>;\r\n              })}\r\n          </CSelect>\r\n      )}\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDynamicSelect;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ClientTypeEnum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: [\r\n                { value: 'ACCOUNT_CLIENT', description: 'My Client (Account)' },\r\n                { value: 'PERSON_CLIENT', description: 'My Client (Person)' },\r\n                { value: 'ENTITY_CLIENT', description: 'My Client (Entity)' },\r\n                { value: 'ACCOUNT_NOT_CLIENT', description: 'Not My Client (Account)' },\r\n                { value: 'PERSON_NOT_CLIENT', description: 'Not My Client (Person)' },\r\n                { value: 'ENTITY_NOT_CLIENT', description: 'Not My Client (Entity)' }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n\r\n        return (\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ClientTypeEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ConductionTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'In-branch/Office'},\r\n                {value: 'B', description:'ATM'},\r\n                {value: 'C', description:'Electronic transaction'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ConductionTypeEnum;"," var TransactionFormat = {\r\n    \"transactionnumber\": \"\",\r\n    \"internal_ref_number\": \"\",\r\n    \"transaction_location\": \"\",\r\n    \"transaction_description\": \"\",\r\n    \"date_transaction\": \"0001-01-01T00:00:00\",\r\n    \"teller\": \"\",\r\n    \"authorized\": \"\",\r\n    \"late_deposit\": false,\r\n    \"date_posting\": \"0001-01-01T00:00:00\",\r\n    \"value_date\": \"0001-01-01T00:00:00\",\r\n    \"transmode_code\": \"\",\r\n    \"transmode_comment\": \"\",\r\n    \"amount_local\": 0.0,\r\n    \"involved_parties\": null,\r\n    \"t_from_my_client\": null,\r\n    \"t_from\": null,\r\n    \"t_to_my_client\": null,\r\n    \"t_to\": null,\r\n    \"goods_services\": [],\r\n    \"comments\": \"\",\r\n    \"txn_from\": \"\",\r\n    \"txn_to\": \"\"\r\n}\r\n\r\nexport default TransactionFormat;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormAmount from '../../form-inputs/form-amount.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ClientTypeEnum from '../../goaml-enums/client-type-enum/client-type-enum.component';\r\nimport ConductionTypeEnum from '../../goaml-enums/conduction-type-enum/conduction-type-enum.component';\r\nimport transactionFormat from 'src/redux/transaction/transaction.format';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setReport, addTransactionToReport } from '../../../redux/report/report.actions';\r\nimport { selectReport, selectAllTransactions, makeGetSingleTransaction } from '../../../redux/report/report.selectors';\r\nimport { RetrieveTransactionFromReport } from '../../../redux/goaml-utils/goaml-utils';\r\n\r\nconst TransactionInfo = ({ label, name, transRef, report, reportTransaction, setReport, handleSaveInfoClick, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [check, setCheck] = React.useState(false);\r\n    const onChecked = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log({ name, value })\r\n        setCheck({ [name]: value })\r\n    }\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n    const [transaction, setTransactionState] = React.useState({\r\n        detail: transactionFormat,\r\n        txn_from: \"\",\r\n        txn_to: \"\"\r\n    })\r\n\r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        \r\n        //setTransactionState({ ...transaction, [name]: value });\r\n\r\n        if (name == \"txn_from\" || name == \"txn_to\")\r\n            setTransactionState({ ...transaction, [name]: value });\r\n        else\r\n            setTransactionState({ ...transaction, detail: { ...transaction.detail, [name]: value } });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n\r\n        console.log(\"transaction: \", transaction);\r\n\r\n        if (!transaction.txn_from || !transaction.txn_to) {\r\n            alert('please complete the sender and/or receiver field');\r\n        }\r\n        else if (!transaction.detail.transactionnumber || !transaction.detail.transmode_code || !transaction.detail.internal_ref_number \r\n            || !transaction.detail.date_transaction || !transaction.detail.transaction_description \r\n            || !transaction.detail.transaction_location || !transaction.detail.teller \r\n            || !transaction.detail.authorized || !transaction.detail.date_posting || !transaction.detail.amount_local) {\r\n            alert('please complete this field');\r\n        }\r\n        const existingTxn = RetrieveTransactionFromReport(report, transaction.internal_ref_number);\r\n\r\n        if (existingTxn) {\r\n            setTransactionState({ ...transaction.detail, ...existingTxn });\r\n            let reportTxns = report.transaction.map(reportTransaction =>\r\n                reportTransaction.internal_ref_number === transaction.detail.internal_ref_number\r\n                    ? transaction.detail\r\n                    : reportTransaction\r\n            );\r\n            handleSaveInfoClick(reportTxns, transaction);\r\n        }\r\n        else {\r\n            let reportTxns = report.transaction;\r\n            reportTxns.push(transaction.detail)\r\n            handleSaveInfoClick(reportTxns, transaction);\r\n        }\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm method=\"post\" className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                type=\"number\"\r\n                                                label=\"Number*\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                name=\"transactionnumber\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                handleChange={handleChange}\r\n                                                value={transaction.detail.transactionnumber}\r\n                                                className={`form-control ${!transaction.detail.transactionnumber && touched && 'is-invalid'} ${transaction.detail.transactionnumber && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput\r\n                                                type=\"number\"\r\n                                                label=\"TransMode Comment\"\r\n                                                name=\"transmode_comment\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                value={transaction.detail.transmode_comment}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.transmode_comment && touched && 'is-invalid'} ${transaction.detail.transmode_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Internal Reference Number\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                name=\"internal_ref_number\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                value={transaction.detail.internal_ref_number}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.internal_ref_number && touched && 'is-invalid'} ${transaction.detail.internal_ref_number && 'is-valid'}`}\r\n                                            />\r\n                                            <FormAmount\r\n                                                label=\"Local Amount*\"\r\n                                                name=\"amount_local\"\r\n                                                placeholder=\"0.00\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                value={transaction.detail.amount_local}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.amount_local && touched && 'is-invalid'} ${transaction.detail.amount_local && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <ConductionTypeEnum\r\n                                                label=\"TransMode Code*\"\r\n                                                name=\"transmode_code\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                handleChange={handleChange}\r\n                                                value={transaction.detail.transmode_code}\r\n                                                className={`form-control ${!transaction.detail.transmode_code && touched && 'is-invalid'} ${transaction.detail.transmode_code && 'is-valid'}`}\r\n                                            />\r\n                                            <FormDate\r\n                                                type=\"date\"\r\n                                                label=\"Trans Date*\"\r\n                                                name=\"date_transaction\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                value={transaction.detail.date_transaction}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.date_transaction && touched && 'is-invalid'} ${transaction.detail.date_transaction && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormDate\r\n                                                type=\"date\"\r\n                                                label=\"Post Date*\"\r\n                                                name=\"date_posting\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                value={transaction.detail.date_posting}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.date_posting && touched && 'is-invalid'} ${transaction.detail.date_posting && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Teller\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                name=\"teller\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                value={transaction.detail.teller}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.teller && touched && 'is-invalid'} ${transaction.detail.teller && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput\r\n                                                label=\"Authorised\"\r\n                                                name=\"authorized\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                value={transaction.detail.authorized}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                handleChange={handleChange}\r\n                                                className={`form-control ${!transaction.detail.authorized && touched && 'is-invalid'} ${transaction.detail.authorized && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormInput\r\n                                                        label=\"Location*\"\r\n                                                        name=\"transaction_location\"\r\n                                                        placeholder=\"Enter ...\"\r\n                                                        onBlur={onBlur}\r\n                                                        onFocus={onFocus}\r\n                                                        onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                        value={transaction.detail.transaction_location}\r\n                                                        handleChange={handleChange}\r\n                                                        className={`form-control ${!transaction.detail.transaction_location && touched && 'is-invalid'} ${transaction.detail.transaction_location && 'is-valid'}`}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText\r\n                                                        label=\"Late Deposit?\"\r\n                                                        name=\"late_deposit\"\r\n                                                        width=\"6\"\r\n                                                        items={[\"Yes\", \"No\"]}\r\n                                                        handleChange={onChecked}\r\n                                                        defaultValue={transaction.late_deposit}\r\n                                                    />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <ClientTypeEnum\r\n                                                        handleChange={handleChange}\r\n                                                        label=\"From Party?*\"\r\n                                                        name=\"txn_from\"\r\n                                                        value={transaction.txn_from}\r\n                                                        onFocus={onFocus}\r\n                                                        onBlur={onBlur}\r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        className={`form-control ${!transaction.txn_from && touched && 'is-invalid'} ${transaction.txn_from && 'is-valid'}`}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <ClientTypeEnum\r\n                                                        handleChange={handleChange}\r\n                                                        label=\"To Party?*\"\r\n                                                        name=\"txn_to\"\r\n                                                        value={transaction.txn_to}\r\n                                                        onFocus={onFocus}\r\n                                                        onBlur={onBlur}\r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        className={`form-control ${!transaction.txn_to && touched && 'is-invalid'} ${transaction.txn_to && 'is-valid'}`}\r\n                                                    />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea\r\n                                                label=\"Description\"\r\n                                                name=\"transaction_description\"\r\n                                                value={transaction.detail.transaction_description}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction.detail)}\r\n                                                handleChange={handleChange}\r\n                                                placeholder=\"Enter ...\"\r\n                                                className={`form-control ${!transaction.detail.transaction_description && touched && 'is-invalid'} ${transaction.detail.transaction_description && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions\r\n                                        type=\"submit\" class=\"btn btn-primary\"\r\n                                        saveText=\"Save Overview\"\r\n                                        handleSaveClick={handleSaveClick}\r\n                                        handleCancelClick={handleCancelClick}>\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\n\r\nconst makeMapStateToProps = () => {\r\n    //const getSingleTransaction = makeGetSingleTransaction()\r\n    const mapStateToProps = (state, props) => {\r\n        return {\r\n            //reportTransaction: getSingleTransaction(state, props),\r\n            report: selectReport(state)\r\n        }\r\n    }\r\n    return mapStateToProps\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReport: report => dispatch(setReport(report))\r\n});\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(TransactionInfo);","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CurrenciesEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'ADP', description:'Andorran Peseta (no longer in use)'},\r\n                {value: 'AED', description:'United Arab Emirates Dirham'},\r\n                {value: 'AFA', description:'Afghani'},\r\n                {value: 'ALL', description:'Leek'},\r\n                {value: 'AMD', description:'Dram'},\r\n                {value: 'ANG', description:'Netherlands Antilles Guilder'},\r\n                {value: 'AOK', description:'Kwanza'},\r\n                {value: 'AON', description:'New Kwanza'},\r\n                {value: 'ARA', description:'Austral'},\r\n                {value: 'ARP', description:'Argentinean Peso'},\r\n                {value: 'ARS', description:'Argentinean Nuevo Peso'},\r\n                {value: 'ATS', description:'Schilling (no longer in use)'},\r\n                {value: 'AUD', description:'Australian Dollar'},\r\n                {value: 'AWG', description:'Aruban Guilder'},\r\n                {value: 'AZM', description:'Azerbaijani Manat'},\r\n                {value: 'BAM', description:'Convertible Mark'},\r\n                {value: 'BBD', description:'Barbados Dollar'},\r\n                {value: 'BDT', description:'Taka'},\r\n                {value: 'BEC', description:'Convertible Belgian Franc (no longer in use)'},\r\n                {value: 'BEF', description:'Belgian Franc (also known as Frank - no longer in use)'},\r\n                {value: 'BEL', description:'Financial Belgian Franc (no longer in use)'},\r\n                {value: 'BGL', description:'Lev'},\r\n                {value: 'BHD', description:'Bahraini Dinar'},\r\n                {value: 'BIF', description:'Burundi Franc'},\r\n                {value: 'BMD', description:'Bermudian Dollar'},\r\n                {value: 'BND', description:'Brunei Dollar'},\r\n                {value: 'BOB', description:'Boliviano'},\r\n                {value: 'BOP', description:'Bolivian Peso'},\r\n                {value: 'BRC', description:'Cruzeiro'},\r\n                {value: 'BRL', description:'Real'},\r\n                {value: 'BRR', description:'Cruzeiro Real'},\r\n                {value: 'BSD', description:'Bahamian Dollar'},\r\n                {value: 'BTN', description:'Ngultrum'},\r\n                {value: 'BUK', description:'Replaced by MMK'},\r\n                {value: 'BWP', description:'Pula'},\r\n                {value: 'BYR', description:'Belarussian Rouble'},\r\n                {value: 'BZD', description:'Belize Dollar'},\r\n                {value: 'CAD', description:'Canadian Dollar'},\r\n                {value: 'CDF', description:'Congolese Franc'},\r\n                {value: 'CDZ', description:'New Zaïre'},\r\n                {value: 'CHF', description:'Swiss Franc'},\r\n                {value: 'CLF', description:'Unidades de Fomento'},\r\n                {value: 'CLP', description:'Chilean Peso'},\r\n                {value: 'CNY', description:'Yuan Renminbi'},\r\n                {value: 'COP', description:'Colombian Peso'},\r\n                {value: 'CRC', description:'Costa Rican Colón'},\r\n                {value: 'CSK', description:'Koruna of former Czechoslovakia. Now replaced by CZK (Czech Koruna) and '},\r\n                {value: 'SKK', description:'Slovak Koruna)'},\r\n                {value: 'CUP', description:'Cuban Peso'},\r\n                {value: 'CVE', description:'Escudo Caboverdiano'},\r\n                {value: 'CYP', description:'Cypriot Pound'},\r\n                {value: 'CZK', description:'Czech Koruna'},\r\n                {value: 'DDM', description:'Former East German Mark, DEM subsequently in use'},\r\n                {value: 'DEM', description:'Deutsche Mark (no longer in use)'},\r\n                {value: 'DJF', description:'Djibouti Franc'},\r\n                {value: 'DKK', description:'Danish Krone'},\r\n                {value: 'DOP', description:'Dominican Republic Peso'},\r\n                {value: 'DZD', description:'Algerian Dinar'},\r\n                {value: 'ECS', description:'Sucre (no longer in use)'},\r\n                {value: 'EEK', description:'Kroon'},\r\n                {value: 'EGP', description:'Egyptian Pound'},\r\n                {value: 'ERN', description:'Eritrean Nakfa'},\r\n                {value: 'ESA', description:'Spanish Peseta, Account A (no longer in use)'},\r\n                {value: 'ESB', description:'Spanish Peseta, Account B (no longer in use)'},\r\n                {value: 'ESP', description:'Spanish Peseta (no longer in use)'},\r\n                {value: 'ETB', description:'Ethiopian Birr'},\r\n                {value: 'EUR', description:'Euro '},\r\n                {value: 'FIM', description:'Markka (no longer in use)'},\r\n                {value: 'FJD', description:'Fiji Dollar'},\r\n                {value: 'FKP', description:'Falkland Pound'},\r\n                {value: 'FRF', description:'French Franc (no longer in use)'},\r\n                {value: 'GBP', description:'Pound Sterling (United Kingdom Pound)'},\r\n                {value: 'GEL', description:'Lari'},\r\n                {value: 'GHC', description:'Cedi'},\r\n                {value: 'GIP', description:'Gibraltar Pound'},\r\n                {value: 'GMD', description:'Dalasi'},\r\n                {value: 'GNS', description:'Syli (also known as Guinea Franc)'},\r\n                {value: 'GQE', description:'Ekwele'},\r\n                {value: 'GRD', description:'Greek Drachma (no longer in use)'},\r\n                {value: 'GTQ', description:'Quetzal'},\r\n                {value: 'GWP', description:'Guinea-Bissau Peso'},\r\n                {value: 'GYD', description:'Guyana Dollar'},\r\n                {value: 'HKD', description:'Hong Kong Dollar'},\r\n                {value: 'HNL', description:'Lempira'},\r\n                {value: 'HRD', description:'Croatian Dinar'},\r\n                {value: 'HRK', description:'Croatian Kuna'},\r\n                {value: 'HTG', description:'Gourde'},\r\n                {value: 'HUF', description:'Forint'},\r\n                {value: 'IDR', description:'Rupiah'},\r\n                {value: 'IEP', description:'Punt (no longer in use)'},\r\n                {value: 'ILS', description:'Shekel'},\r\n                {value: 'INR', description:'Indian Rupee'},\r\n                {value: 'IQD', description:'Iraqi Dinar'},\r\n                {value: 'IRR', description:'Iranian Rial'},\r\n                {value: 'ISK', description:'Icelandic Króna'},\r\n                {value: 'ITL', description:'Italian Lira (no longer in use)'},\r\n                {value: 'JMD', description:'Jamaican Dollar'},\r\n                {value: 'JOD', description:'Jordanian Dinar'},\r\n                {value: 'JPY', description:'Yen'},\r\n                {value: 'KES', description:'Kenyan Shilling'},\r\n                {value: 'KGS', description:'Kyrgyzstani Som'},\r\n                {value: 'KHR', description:'Riel'},\r\n                {value: 'KMF', description:'Comorian Franc'},\r\n                {value: 'KPW', description:'Democratic Peoples Republic of Korean Won'},\r\n                {value: 'KRW', description:'Republic of Korean Won'},\r\n                {value: 'KWD', description:'Kuwaiti Dinar'},\r\n                {value: 'KYD', description:'Cayman Islands Dollar'},\r\n                {value: 'KZT', description:'Tenge'},\r\n                {value: 'LAK', description:'Kip'},\r\n                {value: 'LBP', description:'Lebanese Pound'},\r\n                {value: 'LKR', description:'Sri Lankan Rupee'},\r\n                {value: 'LRD', description:'Liberian Dollar'},\r\n                {value: 'LSL', description:'Loti'},\r\n                {value: 'LSM', description:'Maloti'},\r\n                {value: 'LTL', description:'Litas'},\r\n                {value: 'LUF', description:'Luxembourg Franc (no longer in use)'},\r\n                {value: 'LVL', description:'Lats'},\r\n                {value: 'LYD', description:'Libyan Dinar'},\r\n                {value: 'MAD', description:'Moroccan Dirham'},\r\n                {value: 'MDL', description:'Moldavian Leu'},\r\n                {value: 'MGF', description:'Malagasy Franc'},\r\n                {value: 'MKD', description:'Macedonian Dinar'},\r\n                {value: 'MLF', description:'Malian Franc'},\r\n                {value: 'MMK', description:'Kyat'},\r\n                {value: 'MNT', description:'Tugrik'},\r\n                {value: 'MOP', description:'Pataca'},\r\n                {value: 'MRO', description:'Ouguiya'},\r\n                {value: 'MTL', description:'Maltese Lira'},\r\n                {value: 'MTP', description:'Maltese Pound, replaced by Maltese Lira'},\r\n                {value: 'MUR', description:'Mauritius Rupee'},\r\n                {value: 'MVR', description:'Rufiyaa'},\r\n                {value: 'MWK', description:'Malawian Kwacha'},\r\n                {value: 'MXN', description:'Mexican New Peso (replacement for Mexican Peso)'},\r\n                {value: 'MXP', description:'Mexican Peso, replaced by Mexican New Peso'},\r\n                {value: 'MYR', description:'Ringgit (also known as Malaysian Dollar)'},\r\n                {value: 'MZM', description:'Metical'},\r\n                {value: 'NAD', description:'Namibian Dollar'},\r\n                {value: 'NGN', description:'Naira'},\r\n                {value: 'NIC', description:'Córdoba'},\r\n                {value: 'NLG', description:'Dutch Guilder (no longer in use)'},\r\n                {value: 'NOK', description:'Norwegian Krone'},\r\n                {value: 'NPR', description:'Nepalese Rupee'},\r\n                {value: 'NZD', description:'New Zealand Dollar'},\r\n                {value: 'OMR', description:'Omani Rial'},\r\n                {value: 'PAB', description:'Balboa'},\r\n                {value: 'PEI', description:'Inti'},\r\n                {value: 'PEN', description:'New Sol'},\r\n                {value: 'PES', description:'Sol (replaced by New Sol [PEN])'},\r\n                {value: 'PGK', description:'Kina'},\r\n                {value: 'PHP', description:'Philippines Peso'},\r\n                {value: 'PKR', description:'Pakistani Rupee'},\r\n                {value: 'PLN', description:'New Zloty'},\r\n                {value: 'PLZ', description:'Zloty (replaced by New Zloty [PLN])'},\r\n                {value: 'PTE', description:'Portuguese Escudo (no longer in use)'},\r\n                {value: 'PYG', description:'Guarani'},\r\n                {value: 'QAR', description:'Qatari Riyal'},\r\n                {value: 'ROL', description:'Romanian Leu'},\r\n                {value: 'RSD', description:'Serbian Dinar'},\r\n                {value: 'RUB', description:' Russian Federation Rouble (formerly RUR)'},\r\n                {value: 'RWF', description:'Rwandan Franc'},\r\n                {value: 'SAR', description:'Saudi Riyal'},\r\n                {value: 'SBD', description:'Solomon Islands Dollar'},\r\n                {value: 'SCR', description:'Seychelles Rupee'},\r\n                {value: 'SDD', description:'Sudanese Dinar'},\r\n                {value: 'SDP', description:'Sudanese Pound'},\r\n                {value: 'SEK', description:'Swedish Krona'},\r\n                {value: 'SGD', description:'Singapore Dollar'},\r\n                {value: 'SHP', description:'St Helena Pound'},\r\n                {value: 'SIT', description:'Tolar'},\r\n                {value: 'SKK', description:'Slovak Koruna'},\r\n                {value: 'SLL', description:'Leone'},\r\n                {value: 'SOS', description:'Somali Shilling'},\r\n                {value: 'SRG', description:'Surinam Guilder'},\r\n                {value: 'STD', description:'Dobra'},\r\n                {value: 'SUR', description:'Union of Soviet Socialist Republics Rouble'},\r\n                {value: 'SVC', description:'El Salvadorian Colón'},\r\n                {value: 'SYP', description:'Syrian Pound'},\r\n                {value: 'SZL', description:'Lilangeni'},\r\n                {value: 'THB', description:'Baht'},\r\n                {value: 'TJR', description:'Tajik Rouble'},\r\n                {value: 'TMM', description:'Turkmenistani Manat'},\r\n                {value: 'TND', description:'Tunisian Dinar'},\r\n                {value: 'TOP', description:'Paanga'},\r\n                {value: 'TPE', description:'Timorian Escudo'},\r\n                {value: 'TRL', description:'Turkish Lira'},\r\n                {value: 'TTD', description:'Trinidad and Tobago Dollar'},\r\n                {value: 'TWD', description:'Taiwan Dollar'},\r\n                {value: 'TZS', description:'Tanzanian Shilling'},\r\n                {value: 'UAH', description:'Hryvna'},\r\n                {value: 'UAK', description:'Karbovanet'},\r\n                {value: 'UGS', description:'Ugandan Shilling'},\r\n                {value: 'UKP', description:'Incorrectly used for GBP'},\r\n                {value: 'USD', description:'United States Dollar'},\r\n                {value: 'USN', description:'United States Dollar (Next day)'},\r\n                {value: 'USS', description:'United States Dollar (Same day)'},\r\n                {value: 'UYP', description:'Uruguayan Peso, replaced by Uruguayan New Peso (UYU)'},\r\n                {value: 'UYU', description:'Uruguayan New Peso'},\r\n                {value: 'UZS', description:'Uzbekistani Som'},\r\n                {value: 'VEB', description:'Bolivar'},\r\n                {value: 'VND', description:'Viet Nam Dông'},\r\n                {value: 'VUV', description:'Vatu'},\r\n                {value: 'WST', description:'Tala'},\r\n                {value: 'XAF', description:'Franc de la Communauté financière africaine'},\r\n                {value: 'XAU', description:'Gold'},\r\n                {value: 'XBA', description:'European Composite Unit'},\r\n                {value: 'XBB', description:'European Monetary Unit'},\r\n                {value: 'XBC', description:'European Unit of Account 9'},\r\n                {value: 'XBD', description:'European Unit of Account 17'},\r\n                {value: 'XCD', description:'East Caribbean Dollar'},\r\n                {value: 'XDR', description:'International Monetary Fund Special Drawing Rights'},\r\n                {value: 'XEU', description:'ECU (not an official currency, replaced by the Euro)'},\r\n                {value: 'XOF', description:'West African Franc'},\r\n                {value: 'XPF', description:'Franc des Comptoirs français du Pacifique'},\r\n                {value: 'YDD', description:'South Yemeni Dinar'},\r\n                {value: 'YER', description:'Yemeni Riyal'},\r\n                {value: 'YUD', description:'Yugoslavian New Dinar (no longer in use)'},\r\n                {value: 'ZAL', description:'Rand (financial)'},\r\n                {value: 'ZAR', description:'Rand'},\r\n                {value: 'ZMK', description:'Zambian Kwacha'},\r\n                {value: 'ZRZ', description:'Replaced by CDZ'},\r\n                {value: 'ZWD', description:'Zimbabwe Dollar'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CurrenciesEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass TransactionItemStatusEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Bought'},\r\n                {value: 'B', description:'Sold'},\r\n                {value: 'C', description:'Rent'},\r\n                {value: 'D', description:'Leased'},\r\n                {value: 'E', description:'Mortgaged'},\r\n                {value: 'F', description:'Donated'},\r\n                {value: 'G', description:'Destroyed'},\r\n                {value: 'H', description:'Other'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default TransactionItemStatusEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass TransactionItemTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'CH', description:'Chemical'},\r\n                {value: 'C', description:'Commodity'},\r\n                {value: 'E', description:'Equipment'},\r\n                {value: 'F', description:'Furniture'},\r\n                {value: 'G', description:'Goods'},\r\n                {value: 'J', description:'Jewellery'},\r\n                {value: 'M', description:'Machines'},\r\n                {value: 'PM', description:'Precious Metal'},\r\n                {value: 'P', description:'Property'},\r\n                {value: 'S', description:'Services'},\r\n                {value: 'V', description:'Vehicle'},\r\n                {value: 'W', description:'Weapon'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default TransactionItemTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport TransactionItemStatusEnum from '../../goaml-enums/transaction-item-status-enum/transaction-item-status-enum.component';\r\nimport TransactionItemTypeEnum from '../../goaml-enums/transaction-item-type-enum/transaction-item-type-enum.component';\r\n\r\nconst TransactionItem = ({ reportType, label, name, setReportType, handleSaveInfoClick, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [transaction, setTransactionState] = React.useState({\r\n        \"item_type\": '',\r\n        \"previous_register_to\": '',\r\n        \"status_code\": '',\r\n        \"size\": '',\r\n        \"registration_number\": '',\r\n        \"item_make\": \"\",\r\n        \"presently_register_to\": '',\r\n        \"disposed_value\": '',\r\n        \"size_UOM\": '',\r\n        \"identification_number\": '',\r\n        \"description\": '',\r\n        \"estimate_value\": 0,\r\n        \"currency_code\": '',\r\n        \"registration_date\": '',\r\n        \"comments\": [],\r\n        \"status_commets\": ''\r\n    });\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkData = (e, inputState) => {\r\n        let error = true;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n\r\n    console.log('error', showError)\r\n    \r\n    const handleChange = event => {\r\n        // console.log({event.target});\r\n        const { name, value } = event.target;\r\n        setTransactionState({ ...transaction, [name]: value });\r\n    };\r\n\r\n\r\n    const handleSaveClick = () => {\r\n        if (!transaction.item_type || !transaction.previous_register_to || !transaction.status_code || !transaction.size || !transaction.registration_number ||\r\n            !transaction.item_make || !transaction.disposed_value || !transaction.size_UOM || !transaction.identification_number || !transaction.description ||\r\n            !transaction.estimate_value || !transaction.currency_code || !transaction.registration_date || !transaction.status_commets) {\r\n            alert('please fill this field');\r\n        }\r\n        return setReportType({...reportType, ...transaction});\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {label}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm  method=\"post\" className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <TransactionItemTypeEnum \r\n                                        label=\"Item Type*\" \r\n                                        name=\"item_Type\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        className={`form-control ${!transaction.item_type && touched && 'is-invalid'} ${transaction.item_type && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Previously Registered To\" \r\n                                        name=\"previous_register_to\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.previous_register_to}\r\n                                        className={`form-control ${!transaction.previous_register_to && touched && 'is-invalid'} ${transaction.presently_register_to && 'is-valid'}`}\r\n                                     />\r\n                                    <TransactionItemStatusEnum \r\n                                        label=\"Status Code\" \r\n                                        name=\"status_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)}\r\n                                        value={transaction.status_code}\r\n                                        className={`form-control ${!transaction.status_code && touched && 'is-invalid'} ${transaction.status_code && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Size\" \r\n                                        name=\"size\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)}\r\n                                        value={transaction.size}\r\n                                        className={`form-control ${!transaction.size && touched && 'is-invalid'} ${transaction.size && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus} \r\n                                        label=\"Registration Number\" \r\n                                        name=\"registration_number\"\r\n                                        placeholder=\"Enter ...\" \r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.registration_number}\r\n                                        className={`form-control ${!transaction.registration_number && touched && 'is-invalid'} ${transaction.registration_number && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Item Make*\" \r\n                                        name=\"item_make\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.item_make}\r\n                                        className={`form-control ${!transaction.item_make && touched && 'is-invalid'} ${transaction.item_make && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Disposed Value\"\r\n                                        name=\"disposed_value\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.disposed_value}\r\n                                        className={`form-control ${!transaction.disposed_value && touched && 'is-invalid'} ${transaction.disposed_value && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Size UOM\" \r\n                                        name=\"size_UOM\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.size_UOM}\r\n                                        className={`form-control ${!transaction.size_UOM && touched && 'is-invalid'} ${transaction.size_UOM && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Identification Number\" \r\n                                        name=\"identification_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.identification_number}\r\n                                        className={`form-control ${!transaction.identification_number && touched && 'is-invalid'} ${transaction.identification_number && 'is-valid'}`}\r\n                                    />\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.comments} \r\n                                        className={`form-control ${!transaction.comments && touched && 'is-invalid'} ${transaction.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Description*\" \r\n                                        name=\"description\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.description}\r\n                                        className={`form-control ${!transaction.description && touched && 'is-invalid'} ${transaction.description && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Estimated Value\" \r\n                                        name=\"estimate_value\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.estimate_value}\r\n                                        className={`form-control ${!transaction.estimate_value && touched && 'is-invalid'} ${transaction.estimate_value && 'is-valid'}`}\r\n                                    />\r\n                                    <CurrenciesEnum \r\n                                        label=\"Currency Code*\" \r\n                                        name=\"currency_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.currency_code} \r\n                                        className={`form-control ${!transaction.currency_code && touched && 'is-invalid'} ${transaction.currency_code && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Registration Date*\" \r\n                                        name=\"registration_date\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.registration_date} \r\n                                        className={`form-control ${!transaction.registration_date && touched && 'is-invalid'} ${transaction.registration_date && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Status Comments\" \r\n                                        name=\"status_comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.status_commets} \r\n                                        className={`form-control ${!transaction.status_commets && touched && 'is-invalid'} ${transaction.status_commets && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                type=\"submit\" class=\"btn btn-primary\"\r\n                                saveText=\"Save Item\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}>\r\n                            </FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReport(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: reportType => dispatch(setReport(reportType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionItem);\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CountryCodeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'AD', description:'ANDORRA '},\r\n                {value: 'AE', description:'UNITED ARAB EMIRATES'},\r\n                {value: 'AF', description:'AFGHANISTAN '},\r\n                {value: 'AG', description:'ANTIGUA AND BARBUDA '},\r\n                {value: 'AI', description:'ANGUILLA '},\r\n                {value: 'AL', description:' ALBANIA '},\r\n                {value: 'AM', description:'ARMENIA '},\r\n                {value: 'AN', description:'NETHERLANDS ANTILLES '},\r\n                {value: 'AO', description:'ANGOLA '},\r\n                {value: 'AQ', description:'ANTARCTICA '},\r\n                {value: 'AR', description:'ARGENTINA '},\r\n                {value: 'AS', description:'AMERICAN SAMOA '},\r\n                {value: 'AT', description:'AUSTRIA '},\r\n                {value: 'AU', description:'AUSTRALIA '},\r\n                {value: 'AW', description:'ARUBA '},\r\n                {value: 'AX', description:'ÅLAND ISLANDS '},\r\n                {value: 'AZ', description:'AZERBAIJAN '},\r\n                {value: 'BA', description:'BOSNIA AND HERZEGOVINA '},\r\n                {value: 'BB', description:'BARBADOS '},\r\n                {value: 'BD', description:'BANGLADESH '},\r\n                {value: 'BE', description:'BELGIUM '},\r\n                {value: 'BF', description:'BURKINA FASO '},\r\n                {value: 'BG', description:'BULGARIA '},\r\n                {value: 'BH', description:'BAHRAIN '},\r\n                {value: 'BI', description:'BURUNDI '},\r\n                {value: 'BJ', description:'BENIN '},\r\n                {value: 'BM', description:'BERMUDA '},\r\n                {value: 'BN', description:'BRUNEI DARUSSALAM'},\r\n                {value: 'BO', description:'BOLIVIA '},\r\n                {value: 'BR', description:'BRAZIL '},\r\n                {value: 'BS', description:'BAHAMAS '},\r\n                {value: 'BT', description:'BHUTAN '},\r\n                {value: 'BU', description:'BURMA'},\r\n                {value: 'BV', description:'BOUVET ISLAND '},\r\n                {value: 'BW', description:'BOTSWANA '},\r\n                {value: 'BY', description:'BELARUS'},\r\n                {value: 'BZ', description:'BELIZE '},\r\n                {value: 'CA', description:'CANADA '},\r\n                {value: 'CC', description:'COCOS (KEELING) ISLANDS'},\r\n                {value: 'CD', description:'CONGO, THE DEMOCRATIC REPUBLIC OF THE'},\r\n                {value: 'CF', description:'CENTRAL AFRICAN REPUBLIC '},\r\n                {value: 'CG', description:'CONGO '},\r\n                {value: 'CH', description:'SWITZERLAND '},\r\n                {value: 'CI', description:'COTE DIVOIRE'},\r\n                {value: 'CK', description:'COOK ISLANDS '},\r\n                {value: 'CL', description:'CHILE '},\r\n                {value: 'CM', description:'CAMEROON '},\r\n                {value: 'CN', description:'CHINA '},\r\n                {value: 'CO', description:'COLOMBIA '},\r\n                {value: 'CR', description:'COSTA RICA '},\r\n                {value: 'CS', description:'SERBIA AND MONTENEGRO'},\r\n                {value: 'CU', description:'CUBA '},\r\n                {value: 'CV', description:'CAPE VERDE '},\r\n                {value: 'CX', description:'CHRISTMAS ISLAND '},\r\n                {value: 'CY', description:'CYPRUS '},\r\n                {value: 'CZ', description:'CZECH REPUBLIC '},\r\n                {value: 'DE', description:'GERMANY '},\r\n                {value: 'DJ', description:'DJIBOUTI '},\r\n                {value: 'DK', description:'DENMARK '},\r\n                {value: 'DM', description:'DOMINICA '},\r\n                {value: 'DO', description:'DOMINICAN REPUBLIC '},\r\n                {value: 'DZ', description:'ALGERIA '},\r\n                {value: 'EC', description:'ECUADOR '},\r\n                {value: 'EE', description:'ESTONIA '},\r\n                {value: 'EG', description:'EGYPT '},\r\n                {value: 'EH', description:'WESTERN SAHARA '},\r\n                {value: 'ER', description:'ERITREA '},\r\n                {value: 'ES', description:'SPAIN '},\r\n                {value: 'ET', description:'ETHIOPIA '},\r\n                {value: 'FI', description:'FINLAND '},\r\n                {value: 'FJ', description:'FIJI '},\r\n                {value: 'FK', description:'FALKLAND ISLANDS (MALVINAS)'},\r\n                {value: 'FM', description:'MICRONESIA, FEDERATED STATES OF'},\r\n                {value: 'FO', description:'FAROE ISLANDS '},\r\n                {value: 'FR', description:'FRANCE '},\r\n                {value: 'GA', description:'GABON '},\r\n                {value: 'GB', description:'UNITED KINGDOM '},\r\n                {value: 'GD', description:'GRENADA '},\r\n                {value: 'GE', description:'GEORGIA '},\r\n                {value: 'GF', description:'FRENCH GUIANA '},\r\n                {value: 'GG', description:'GUERNSEY '},\r\n                {value: 'GH', description:'GHANA '},\r\n                {value: 'GI', description:'GIBRALTAR '},\r\n                {value: 'GL', description:'GREENLAND '},\r\n                {value: 'GM', description:'GAMBIA '},\r\n                {value: 'GN', description:'GUINEA '},\r\n                {value: 'GP', description:'GUADELOUPE'},\r\n                {value: 'GQ', description:'EQUATORIAL GUINEA'},\r\n                {value: 'GR', description:'GREECE '},\r\n                {value: 'GS', description:'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS'},\r\n                {value: 'GT', description:'GUATEMALA '},\r\n                {value: 'GU', description:'GUAM '},\r\n                {value: 'GW', description:'GUINEA-BISSAU '},\r\n                {value: 'GY', description:'GUYANA '},\r\n                {value: 'HK', description:'HONG KONG '},\r\n                {value: 'HM', description:'HEARD ISLAND AND MCDONALD ISLANDS'},\r\n                {value: 'HN', description:'HONDURAS '},\r\n                {value: 'HR', description:'CROATIA '},\r\n                {value: 'HT', description:'HAITI '},\r\n                {value: 'HU', description:'HUNGARY '},\r\n                {value: 'ID', description:'INDONESIA '},\r\n                {value: 'IE', description:'IRELAND '},\r\n                {value: 'IL', description:'ISRAEL '},\r\n                {value: 'IM', description:'ISLE OF MAN'},\r\n                {value: 'IN', description:'INDIA '},\r\n                {value: 'IO', description:'BRITISH INDIAN OCEAN TERRITORY '},\r\n                {value: 'IQ', description:'IRAQ '},\r\n                {value: 'IR', description:'IRAN, ISLAMIC REPUBLIC OF'},\r\n                {value: 'IS', description:'ICELAND '},\r\n                {value: 'IT', description:'ITALY '},\r\n                {value: 'JE', description:'JERSEY '},\r\n                {value: 'JM', description:'JAMAICA '},\r\n                {value: 'JO', description:'JORDAN '},\r\n                {value: 'JP', description:'JAPAN '},\r\n                {value: 'KE', description:'KENYA '},\r\n                {value: 'KG', description:'KYRGYZSTAN '},\r\n                {value: 'KH', description:'CAMBODIA '},\r\n                {value: 'KI', description:'KIRIBATI '},\r\n                {value: 'KM', description:'COMOROS '},\r\n                {value: 'KN', description:'SAINT KITTS AND NEVIS '},\r\n                {value: 'KP', description:'KOREA, DEMOCRATIC PEOPLES REPUBLIC OF'},\r\n                {value: 'KR', description:'KOREA, REPUBLIC OF'},\r\n                {value: 'KS', description:'KOSOVO'},\r\n                {value: 'KW', description:'KUWAIT '},\r\n                {value: 'KY', description:'CAYMAN ISLANDS '},\r\n                {value: 'KZ', description:'KAZAKHSTAN '},\r\n                {value: 'LA', description:'LAO PEOPLES DEMOCRATIC REPUBLIC'},\r\n                {value: 'LB', description:'LEBANON '},\r\n                {value: 'LC', description:'SAINT LUCIA '},\r\n                {value: 'LI', description:'LIECHTENSTEIN '},\r\n                {value: 'LK', description:'SRI LANKA '},\r\n                {value: 'LR', description:'LIBERIA '},\r\n                {value: 'LS', description:'LESOTHO '},\r\n                {value: 'LT', description:'LITHUANIA '},\r\n                {value: 'LU', description:'LUXEMBOURG '},\r\n                {value: 'LV', description:' LATVIA '},\r\n                {value: 'LY', description:'LIBYAN ARAB JAMAHIRIYA'},\r\n                {value: 'MA', description:'MOROCCO'},\r\n                {value: 'MC', description:'MONACO '},\r\n                {value: 'MD', description:'MOLDOVA, REPUBLIC OF'},\r\n                {value: 'ME', description:'MONTENEGRO '},\r\n                {value: 'MG', description:'MADAGASCAR '},\r\n                {value: 'MH', description:'MARSHALL ISLANDS '},\r\n                {value: 'MK', description:'MACEDONIA '},\r\n                {value: 'ML', description:'MALI '},\r\n                {value: 'MM', description:'MYANMAR '},\r\n                {value: 'MN', description:'MONGOLIA '},\r\n                {value: 'MO', description:'MACAO '},\r\n                {value: 'MP', description:'NORTHERN MARIANA ISLANDS '},\r\n                {value: 'MQ', description:'MARTINIQUE '},\r\n                {value: 'MR', description:'MAURITANIA '},\r\n                {value: 'MS', description:'MONTSERRAT '},\r\n                {value: 'MT', description:'MALTA '},\r\n                {value: 'MU', description:'MAURITIUS '},\r\n                {value: 'MV', description:'MALDIVES '},\r\n                {value: 'MW', description:'MALAWI '},\r\n                {value: 'MX', description:'MEXICO '},\r\n                {value: 'MY', description:'MALAYSIA '},\r\n                {value: 'MZ', description:'MOZAMBIQUE '},\r\n                {value: 'NA', description:'NAMIBIA '},\r\n                {value: 'NC', description:'NEW CALEDONIA '},\r\n                {value: 'NE', description:'NIGER '},\r\n                {value: 'NF', description:'NORFOLK ISLAND '},\r\n                {value: 'NG', description:'NIGERIA '},\r\n                {value: 'NI', description:'NICARAGUA '},\r\n                {value: 'NL', description:'NETHERLANDS '},\r\n                {value: 'NO', description:'NORWAY '},\r\n                {value: 'NP', description:'NEPAL '},\r\n                {value: 'NR', description:'NAURU '},\r\n                {value: 'NU', description:'NIUE '},\r\n                {value: 'NZ', description:'NEW ZEALAND '},\r\n                {value: 'OM', description:' OMAN '},\r\n                {value: 'PA', description:'PANAMA '},\r\n                {value: 'PE', description:'PERU '},\r\n                {value: 'PF', description:'FRENCH POLYNESIA '},\r\n                {value: 'PG', description:'PAPUA NEW GUINEA'},\r\n                {value: 'PH', description:'PHILIPPINES '},\r\n                {value: 'PK', description:'PAKISTAN '},\r\n                {value: 'PL', description:'POLAND '},\r\n                {value: 'PM', description:'SAINT PIERRE AND MIQUELON '},\r\n                {value: 'PN', description:'PITCAIRN'},\r\n                {value: 'PR', description:'PUERTO RICO '},\r\n                {value: 'PS', description:'PALESTINIAN TERRITORY, OCCUPIED'},\r\n                {value: 'PT', description:'PORTUGAL '},\r\n                {value: 'PW', description:'PALAU '},\r\n                {value: 'PY', description:'PARAGUAY '},\r\n                {value: 'QA', description:'QATAR '},\r\n                {value: 'RE', description:'REUNION '},\r\n                {value: 'RO', description:'ROMANIA'},\r\n                {value: 'RS', description:'SERBIA '},\r\n                {value: 'RU', description:'RUSSIAN FEDERATION '},\r\n                {value: 'RW', description:'RWANDA '},\r\n                {value: 'SA', description:'SAUDI ARABIA '},\r\n                {value: 'SB', description:'SOLOMON ISLANDS '},\r\n                {value: 'SC', description:'SEYCHELLES '},\r\n                {value: 'SD', description:'SUDAN '},\r\n                {value: 'SE', description:'SWEDEN '},\r\n                {value: 'SG', description:'SINGAPORE '},\r\n                {value: 'SH', description:'SAINT HELENA '},\r\n                {value: 'SI', description:'SLOVENIA '},\r\n                {value: 'SJ', description:'SVALBARD AND JAN MAYEN'},\r\n                {value: 'SK', description:'SLOVAKIA '},\r\n                {value: 'SL', description:'SIERRA LEONE'},\r\n                {value: 'SM', description:'SAN MARINO '},\r\n                {value: 'SN', description:'SENEGAL '},\r\n                {value: 'SO', description:'SOMALIA '},\r\n                {value: 'SR', description:'SURINAME '},\r\n                {value: 'ST', description:'SAO TOME AND PRINCIPE '},\r\n                {value: 'SV', description:'EL SALVADOR '},\r\n                {value: 'SY', description:'SYRIAN ARAB REPUBLIC '},\r\n                {value: 'SZ', description:'SWAZILAND '},\r\n                {value: 'TC', description:'TURKS AND CAICOS ISLANDS '},\r\n                {value: 'TD', description:'CHAD '},\r\n                {value: 'TF', description:'FRENCH SOUTHERN TERRITORIES'},\r\n                {value: 'TG', description:'TOGO '},\r\n                {value: 'TH', description:'THAILAND '},\r\n                {value: 'TJ', description:'TAJIKISTAN '},\r\n                {value: 'TK', description:'TOKELAU'},\r\n                {value: 'TL', description:'TIMOR-LESTE'},\r\n                {value: 'TM', description:'TURKMENISTAN '},\r\n                {value: 'TN', description:'TUNISIA '},\r\n                {value: 'TO', description:'TONGA '},\r\n                {value: 'TP', description:'EAST TIMOR'},\r\n                {value: 'TR', description:'TURKEY '},\r\n                {value: 'TT', description:'TRINIDAD AND TOBAGO '},\r\n                {value: 'TV', description:'TUVALU '},\r\n                {value: 'TW', description:'TAIWAN, PROVINCE OF CHINA'},\r\n                {value: 'TZ', description:'TANZANIA, UNITED REPUBLIC OF'},\r\n                {value: 'UA', description:'UKRAINE '},\r\n                {value: 'UG', description:'UGANDA '},\r\n                {value: 'UM', description:'UNITED STATES MINOR OUTLYING ISLANDS'},\r\n                {value: 'US', description:'UNITED STATES'},\r\n                {value: 'UY', description:'URUGUAY '},\r\n                {value: 'UZ', description:'UZBEKISTAN '},\r\n                {value: 'VA', description:'HOLY SEE (VATICAN CITY STATE)'},\r\n                {value: 'VC', description:'SAINT VINCENT AND THE GRENADINES'},\r\n                {value: 'VE', description:'VENEZUELA '},\r\n                {value: 'VG', description:'VIRGIN ISLANDS, BRITISH'},\r\n                {value: 'VI', description:'VIRGIN ISLANDS, U.S. '},\r\n                {value: 'VN', description:'VIET NAM'},\r\n                {value: 'VU', description:'VANUATU '},\r\n                {value: 'WF', description:'WALLIS AND FUTUNA'},\r\n                {value: 'WS', description:'SAMOA '},\r\n                {value: 'YE', description:'YEMEN '},\r\n                {value: 'YT', description:'MAYOTTE '},\r\n                {value: 'YU', description:'YUGOSLAVIA'},\r\n                {value: 'ZA', description:'SOUTH AFRICA '},\r\n                {value: 'ZM', description:'ZAMBIA '},\r\n                {value: 'ZR', description:'ZAIRE'},\r\n                {value: 'ZW', description:'ZIMBABWE'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CountryCodeEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass FundsTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Deposit'},\r\n                {value: 'B', description:'Electronic Funds Transfer'},\r\n                {value: 'E', description:'Bank Draft'},\r\n                {value: 'F', description:'Managers Cheque'},\r\n                {value: 'G', description:'Travelers cheque'},\r\n                {value: 'H', description:'Life insurance policy'},\r\n                {value: 'K', description:'Cash'},\r\n                {value: 'L', description:'From Account'},\r\n                {value: 'O', description:'Other'},\r\n                {value: 'P', description:'Cheque'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default FundsTypeEnum;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass PersonTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Persons Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass PartyTypeEnum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: [\r\n                { value: 'Person', description: 'Person' },\r\n                { value: 'Account', description: 'Account' },\r\n                { value: 'Entity', description: 'Entity' }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n\r\n        return (\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default PartyTypeEnum;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupText,\r\n    CLabel  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst FormEmail = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n          {label ? (\r\n            <CLabel htmlFor={name}>{label}</CLabel>\r\n          ) : null}\r\n            <CInputGroup>\r\n                <CInput type=\"email\" id={name} name={name} onChange={handleChange} {...otherProps} placeholder={placeholder} />\r\n                <CInputGroupAppend>\r\n                <CInputGroupText>\r\n                    <CIcon name=\"cil-envelope-closed\" />\r\n                </CInputGroupText>\r\n                </CInputGroupAppend>\r\n            </CInputGroup>\r\n        </CFormGroup>\r\n);\r\n\r\nexport default FormEmail;\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect\r\n  } from '@coreui/react'\r\n  \r\nclass FormGenderSelect extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n  \r\n    render() {\r\n      const { label, name, handleChange, ...otherProps } = this.props;\r\n      const options = [\r\n        {value:\"0\", description: \"--select--\"},\r\n        {value:\"M\", description: \"Male\"},\r\n        {value:\"F\", description: \"Female\"}\r\n      ];\r\n\r\n      return (\r\n        <CFormGroup>\r\n            {label ? (\r\n                <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n            {options && options.length > 0 && (\r\n                <CSelect custom name={name} id={name} onChange={handleChange}>\r\n                    {options.map((option, index) => {\r\n                        return <option value={option.value}>{option.description}</option>;\r\n                    })}\r\n                </CSelect>\r\n            )}\r\n        </CFormGroup>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FormGenderSelect;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass AddressTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Addresses Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddressTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ContactTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'B', description:'Business'},\r\n                {value: 'P', description:'Private'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\n\r\nconst TemplateAddress = ({ name, handleAddressSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateAddress, setComponentState] = React.useState({\r\n        \"address_type\": '',\r\n        \"address\": '',\r\n        \"town\": '',\r\n        \"city\": null,\r\n        \"zip\": 0,\r\n        \"country_code\": 0,\r\n        \"state\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n      const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation = templateAddress;\r\n        if (typeof myValidation === 'string'|| 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                } \r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templateAddress.address_type || templateAddress.city || !templateAddress.country_code || !templateAddress.address || !templateAddress.state ||\r\n            !templateAddress.town || !templateAddress.zip) {\r\n            alert('please fill this field')\r\n        }\r\n        console.log({templateAddress});\r\n        handleAddressSave(templateAddress);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateAddress, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateAddress);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"address_type\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address_type} \r\n                                        onKeyUp={(e) => checkInputs(e, templateAddress)} \r\n                                        className={`form-control ${!templateAddress.address_type && touched && 'is-invalid'} ${templateAddress.address_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"City*\" \r\n                                        name=\"city\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.city}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        className={`form-control ${!templateAddress.city && touched && 'is-invalid'} ${templateAddress.city && 'is-valid'}`}\r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Nationality1\"\r\n                                        name=\"country_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.country_code}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        className={`form-control ${!templateAddress.country_code && touched && 'is-invalid'} ${templateAddress.country_code && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Address*\" \r\n                                        name=\"address\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress \r\n                                        className={`form-control ${!templateAddress.address && touched && 'is-invalid'} ${templateAddress.address && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Province/State\" \r\n                                        name=\"state\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.state} \r\n                                        className={`form-control ${!templateAddress.state && touched && 'is-invalid'} ${templateAddress.state && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Town\" \r\n                                        name=\"town\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.town} \r\n                                        className={`form-control ${!templateAddress.town && touched && 'is-invalid'} ${templateAddress.town && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Postal/Zip\" \r\n                                        name=\"zip\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.zip} \r\n                                        className={`form-control ${!templateAddress.zip && touched && 'is-invalid'} ${templateAddress.zip && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.comments} \r\n                                        className={`form-control ${!templateAddress.comments && touched && 'is-invalid'} ${templateAddress.comments && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Address\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TemplateAddress;","import React from 'react';\r\nimport AddressTable from '../../goaml-tables/table-address.component'\r\nimport AddressTemplate from '../template-address/template-address.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n} from '@coreui/react'\r\n\r\nconst ReportAddresses = ({ name, label, handleAddressSave, ...otherProps }) => {\r\n\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab1\">\r\n                                        {tab1Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab2\">\r\n                                        {tab2Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTemplate name=\"Add an Address\" handleAddressSave={handleAddressSave}></AddressTemplate>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTable name={name} />\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportAddresses;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass IdentificationTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Identification Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default IdentificationTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass IdentifierTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Drivers license'},\r\n                {value: 'B', description:'National Identity Card'},\r\n                {value: 'C', description:'Passport'},\r\n                {value: 'E', description:'Voter’s Registration Card'},\r\n                {value: 'R', description:'RC No'},\r\n                {value: 'O', description:'3rd Party ID'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IdentifierTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport IdentifierTypeEnum from '../../goaml-enums/identifier-type-enum/identifier-type-enum.component';\r\n\r\nconst IdentificationTemplate = ({ name, handleIdentificationSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateIdentification, setComponentState] = React.useState({\r\n        \"type\": 0,\r\n        \"number\": '',\r\n        \"issue_date\": '',\r\n        \"expiry_date\": '',\r\n        \"issue_dateSpecified\": false,\r\n        \"expiry_dateSpecified\": false,\r\n        \"issued_by\": '',\r\n        \"issue_country\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templateIdentification.type || !templateIdentification.number || !templateIdentification.issue_date || !templateIdentification.expiry_date ||\r\n            !templateIdentification.issue_country || !templateIdentification.expiry_date) {\r\n            alert('please fill this field');\r\n        }\r\n        handleIdentificationSave(templateIdentification);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateIdentification, [name]: value });\r\n    };\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateIdentification);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <IdentifierTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"type\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.type} \r\n                                        className={`form-control ${!templateIdentification.type && touched && 'is-invalid'}${templateIdentification.type && 'is-valid'}`}\r\n                                    ></IdentifierTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"Issued by\" \r\n                                        name=\"issued_by\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issued_by} \r\n                                        className={`form-control ${!templateIdentification.issued_by && touched && 'is-invalid'}${templateIdentification.issued_by && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Number*\" \r\n                                        name=\"number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.number} \r\n                                        className={`form-control ${!templateIdentification.number && touched && 'is-invalid'}${templateIdentification.number && 'is-valid'}`}  \r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Issue Country*\" \r\n                                        name=\"issue_country\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issue_country} \r\n                                        className={`form-control ${!templateIdentification.issue_country && touched && 'is-invalid'}${templateIdentification.issue_country && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormDate \r\n                                        type=\"date\"\r\n                                        label=\"Issue Date\" \r\n                                        name=\"issue_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issue_date} \r\n                                        className={`form-control ${!templateIdentification.issue_date && touched && 'is-invalid'}${templateIdentification.issue_date && 'is-valid'}`} \r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Expiry Date\" \r\n                                        name=\"expiry_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.expiry_date} \r\n                                        className={`form-control ${!templateIdentification.expiry_date && touched && 'is-invalid'}${templateIdentification.expiry_date && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.comments} \r\n                                        className={`form-control ${!templateIdentification.comments && touched && 'is-invalid'}${templateIdentification.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Identification\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default IdentificationTemplate;","import React from 'react';\r\nimport IdentificationTable from '../../goaml-tables/table-identity.component'\r\nimport IdentificationTemplate from '../template-identification/template-identification.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst ReportIdentifications = ({ name, label, handleIdentificationSave, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTemplate name=\"Add Identification Document\" handleIdentificationSave={handleIdentificationSave}></IdentificationTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportIdentifications;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass PhoneTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Phone Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CommunicationTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'L', description:'Landline Phone'},\r\n                {value: 'M', description:'Mobile Phone'},\r\n                {value: 'F', description:'Fax'},\r\n                {value: 'S', description:'Satellite Phone'},\r\n                {value: 'P', description:'Pager'},\r\n                {value: 'E', description:'Email'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CommunicationTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CommunicationTypeEnum from '../../goaml-enums/communication-type-enum/communication-type-enum.component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\n\r\nconst PhoneTemplate = ({ name, handlePhoneSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const [templatePhone, setComponentState] = React.useState({\r\n        \"tph_contact_type\": '',\r\n        \"tph_communication_type\": '',\r\n        \"tph_country_prefix\": '',\r\n        \"tph_number\": '',\r\n        \"tph_extension\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n      const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n      const checkInputs = (e, inputState) => {\r\n          let error = false;\r\n          let val = {};\r\n          let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n          setShowError({\r\n              isEmpty: error,\r\n              value: val\r\n           });\r\n      }\r\n\r\n      console.log('error', showError)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templatePhone.tph_communication_type || !templatePhone.tph_contact_type || !templatePhone.tph_country_prefix || !templatePhone.tph_extension || !templatePhone.tph_number) {\r\n            alert('please fill this fileld')\r\n        }\r\n        handlePhoneSave(templatePhone);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templatePhone, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templatePhone);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum\r\n                                        label=\"Contact Type*\"\r\n                                        name=\"tph_contact_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_contact_type}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        className={`form-control ${!templatePhone.tph_contact_type && touched && 'is-invalid'} ${templatePhone.tph_contact_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Number*\"\r\n                                        name=\"tph_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_number}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_number && touched && 'is-invalid'} ${templatePhone.tph_number && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <CommunicationTypeEnum\r\n                                        label=\"Comm. Type*\"\r\n                                        name=\"tph_communication_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_communication_type}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_communication_type && touched && 'is-invalid'} ${templatePhone.tph_communication_type && 'is-valid'}`}\r\n                                    ></CommunicationTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Extension\"\r\n                                        name=\"tph_extension\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_extension}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_extension && touched && 'is-invalid'} ${templatePhone.tph_extension && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Country Prefix*\"\r\n                                        name=\"tph_country_prefix\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_country_prefix}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_country_prefix && touched && 'is-invalid'} ${templatePhone.tph_country_prefix && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea\r\n                                        label=\"Comments\"\r\n                                        name=\"comments\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        value={templatePhone.comments}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.comments && touched && 'is-invalid'} ${templatePhone.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Phone\"\r\n                                handleSaveClick={handleSaveClick}\r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default PhoneTemplate;","import React from 'react';\r\nimport PhoneTable from '../../goaml-tables/table-phone.component'\r\nimport PhoneTemplate from '../template-phone/template-phone.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n  \r\n  const ReportPhones = ({ name, handlePhoneSave, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTemplate name=\"Add a Phone\" handlePhoneSave={handlePhoneSave}></PhoneTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportPhones;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormEmail from '../../form-inputs/form-email.component';\r\nimport FormGenderSelect from '../../form-inputs/form-gender-select.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport ReportAddresses from '../../goaml-sections/report-addresses/report-addresses.component';\r\nimport ReportIdentifications from \"../../goaml-sections/report-identifications/report-identifications.component\";\r\nimport ReportPhones from '../../goaml-sections/report-phones/report-phones.components';\r\n\r\n\r\nconst PersonTemplate = ({ label, name, alias,  transRef, partyType, OnSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const [templatePerson, setComponentState] = React.useState({\r\n        \"gender\": '',\r\n        \"title\": '',\r\n        \"first_name\": '',\r\n        \"middle_name\": '',\r\n        \"prefix\": '',\r\n        \"last_name\": '',\r\n        \"birthdate\": '',\r\n        \"birth_place\": '',\r\n        \"mothers_name\": '',\r\n        \"alias\": '',\r\n        \"ssn\": '',\r\n        \"passport_number\": '',\r\n        \"passport_country\": '',\r\n        \"id_number\": '',\r\n        \"nationality1\": '',\r\n        \"nationality2\": '',\r\n        \"nationality3\": '',\r\n        \"residence\": '',\r\n        \"phones\": [],\r\n        \"addresses\": [],\r\n        \"email\": '',\r\n        \"occupation\": '',\r\n        \"employer_name\": '',\r\n        \"employer_address_id\": '',\r\n        \"employer_phone_id\": '',\r\n        \"identification\": [],\r\n        \"date_deceased\":'',\r\n        \"tax_number\": '',\r\n        \"tax_reg_number\": '',\r\n        \"source_of_wealth\": '',\r\n        \"comments\": ''\r\n    })\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templatePerson, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        /* if (!templatePerson.first_name || !templatePerson.title || !templatePerson.alias || !templatePerson.mothers_name || !templatePerson.nationality1 ||\r\n            !templatePerson.nationality2 || !templatePerson.nationality3 || !templatePerson.passport_number || !templatePerson.source_of_wealth || !templatePerson.middle_name ||\r\n            !templatePerson.gender || !templatePerson.birthdate || !templatePerson.residence || !templatePerson.occupation || !templatePerson.employer_name ||\r\n            !templatePerson.last_name || !templatePerson.prefix || !templatePerson.email || !templatePerson.date_deceased\r\n            || !templatePerson.phone || !templatePerson.addresses || !templatePerson.identification\r\n        ) {\r\n            alert('please complete this field')\r\n        } */\r\n        \r\n        OnSave(templatePerson);\r\n    }\r\n    \r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templatePerson);\r\n    }\r\n\r\n    const handlePhoneSave = (phone) => {\r\n        templatePerson.phones.push(phone)\r\n    }\r\n\r\n    const handleAddressSave = (address) => {\r\n        templatePerson.addresses.push(address)\r\n    }\r\n\r\n    const handleIdentificationSave = (identification) => {\r\n        templatePerson.identification.push(identification)\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>      {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"First Name*\" \r\n                                                name=\"first_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.first_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.first_name && touched && 'is-invalid'} ${templatePerson.first_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Title*\" \r\n                                                name=\"title\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.title}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.title && touched && 'is-invalid'} ${templatePerson.title && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Alias/Known As\" \r\n                                                name=\"alias\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.first_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.first_name && touched && 'is-invalid'} ${templatePerson.first_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Mother's Name\" \r\n                                                name=\"mothers_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.mothers_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.mothers_name && touched && 'is-invalid'} ${templatePerson.mothers_name && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Nationality 1\" \r\n                                                name=\"nationality1\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.nationality1}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.nationality1 && touched && 'is-invalid'} ${templatePerson.nationality1 && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Passport\" \r\n                                                name=\"passport_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.passport_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.passport_number && touched && 'is-invalid'} ${templatePerson.passport_number && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Source of Wealth\" \r\n                                                name=\"source_of_wealth\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.source_of_wealth}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.source_of_wealth && touched && 'is-invalid'} ${templatePerson.source_of_wealth && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Middle Name\" \r\n                                                name=\"middle_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.middle_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.middle_name && touched && 'is-invalid'} ${templatePerson.middle_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormGenderSelect \r\n                                                label=\"Gender\" \r\n                                                name=\"gender\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.gender}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.gender && touched && 'is-invalid'} ${templatePerson.gender && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormDate \r\n                                                label=\"Birth Date\" \r\n                                                name=\"birthdate\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.birthdate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.birthdate && touched && 'is-invalid'} ${templatePerson.birthdate && 'is-valid'}`}  \r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Country of Residence\" \r\n                                                name=\"residence\"\r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.residence}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.residence && touched && 'is-invalid'} ${templatePerson.residence && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Nationality 2\" \r\n                                                name=\"nationality2\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.nationality2}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.nationality2 && touched && 'is-invalid'} ${templatePerson.nationality2 && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Occupation\" \r\n                                                name=\"occupation\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.occupation}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.occupation && touched && 'is-invalid'} ${templatePerson.occupation && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Employer Name\" \r\n                                                name=\"employer_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.employer_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.employer_name && touched && 'is-invalid'} ${templatePerson.employer_name && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"SurName/Last Name\" \r\n                                                name=\"last_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.last_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.last_name && touched && 'is-invalid'} ${templatePerson.last_name && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Prefix\" \r\n                                                name=\"prefix\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.prefix}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.prefix && touched && 'is-invalid'} ${templatePerson.prefix && 'is-valid'}`}  \r\n                                                />\r\n                                            <FormInput \r\n                                                label=\"Birth Place\" \r\n                                                name=\"birth_place\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.birth_place}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.birth_place && touched && 'is-invalid'} ${templatePerson.birth_place && 'is-valid'}`} \r\n                                            />\r\n                                            <FormEmail \r\n                                                label=\"Email address\" \r\n                                                name=\"email\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.email}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.email && touched && 'is-invalid'} ${templatePerson.email && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Social Security Number\" \r\n                                                name=\"ssn\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.ssn}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.ssn && touched && 'is-invalid'} ${templatePerson.ssn && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Number\" \r\n                                                name=\"tax_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.tax_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.tax_number && touched && 'is-invalid'} ${templatePerson.tax_number && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Reg. Number\" \r\n                                                name=\"tax_reg_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.tax_reg_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.tax_reg_number && touched && 'is-invalid'} ${templatePerson.tax_reg_number && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportPhones \r\n                                                label=\"Phone\" \r\n                                                name=\"phones\" \r\n                                                handlePhoneSave={handlePhoneSave}\r\n                                                value={templatePerson.phones}\r\n                                            >\r\n                                            </ReportPhones>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportAddresses \r\n                                                label=\"Address\" \r\n                                                name=\"addresses\" \r\n                                                handleAddressSave={handleAddressSave}\r\n                                                value={templatePerson.addresses}\r\n                                            >\r\n                                            </ReportAddresses>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportIdentifications \r\n                                                label=\"Identification\" \r\n                                                name=\"identification\" \r\n                                                handleIdentificationSave={handleIdentificationSave}\r\n                                                value={templatePerson.identification}\r\n                                            >\r\n                                            </ReportIdentifications>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText\r\n                                                        label=\"Deceased?\" \r\n                                                        name=\"deceased\" \r\n                                                        width=\"6\" items={[\"Yes\", \"No\"]} \r\n                                                        handleChange={handleChange}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormDate \r\n                                                        type=\"date\"\r\n                                                        label=\"Date Deceased\" \r\n                                                        name=\"date_deceased\" \r\n                                                        handleChange={handleChange}\r\n                                                        value={templatePerson.date_deceased} \r\n                                                    />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Comments\" \r\n                                                name=\"comments\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.comments} \r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions \r\n                                        saveText={`Save ${alias}`} \r\n                                        handleSaveClick={handleSaveClick} \r\n                                        handleCancelClick={handleCancelClick}>\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default PersonTemplate;","import React from 'react';\r\nimport PersonTable from '../../goaml-tables/table-person.component';\r\nimport PersonTemplate from '../template-person/template-person.component';\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionPersons = ({ name, label, alias, transRef, OnSave, partyType, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PersonTemplate transRef={transRef} OnSave={OnSave} partyType={partyType} label={label} name={name} alias={alias}></PersonTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PersonTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionPersons;\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass AccountTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Business'},\r\n                {value: 'C', description:'Savings'},\r\n                {value: 'D', description:'Current Business'},\r\n                {value: 'E', description:'Current personal'},\r\n                {value: 'I', description:'Fixed'},\r\n                {value: 'L', description:'Trading Account'},\r\n                {value: 'O', description:'Other'},\r\n                {value: 'P', description:'Dormicilliary'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AccountTypeEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass EntityLegalFormEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'AG'},\r\n                {value: 'G', description:'GmbH'},\r\n                {value: 'L', description:'Ltd.'},\r\n                {value: '-', description:'Unknown'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EntityLegalFormEnum;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass DirectorTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Directors Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DirectorTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass EntityPersonRoleEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: '---', description:'Default value'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EntityPersonRoleEnum;","import React from 'react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component'\r\nimport EntityPersonRoleEnum from '../../goaml-enums/entity-person-role-enum/entity-person-role-enum.component'\r\nimport TransactionPerson from '../transaction-person/transaction-person.component'\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\n\r\nconst DirectorTemplate = ({ name, transRef, OnSave, partyType, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [entityDirectorInfo, setEntityDirectorInfo] = React.useState({\r\n        \"role\": 0,\r\n        \"t_person\": null\r\n    })\r\n\r\n    const handleSaveDirectorPerson = (txnRef, partyType, person) => {\r\n        setEntityDirectorInfo({ ...entityDirectorInfo, t_person: person });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setEntityDirectorInfo({ ...entityDirectorInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        let director = {...entityDirectorInfo.t_person, role: entityDirectorInfo.role}\r\n        OnSave(transRef, partyType, director);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", entityDirectorInfo);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <EntityPersonRoleEnum handleChange={handleChange} label=\"Role\" name=\"role\"></EntityPersonRoleEnum>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionPerson OnSave={handleSaveDirectorPerson} transRef={transRef} partyType={partyType} name=\"Person\" label=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions saveText=\"Save Director\" handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default DirectorTemplate;","import React from 'react';\r\nimport DirectorTable from '../../goaml-tables/table-director.component'\r\nimport DirectorTemplate from '../template-director/template-director.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionDirectors = ({ name, label, transRef, partyType, OnSave, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <DirectorTemplate name=\"director\" label=\"Add a Director\" transRef={transRef} OnSave={OnSave} partyType={partyType} ></DirectorTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <DirectorTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionDirectors;\r\n","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormEmail from '../../form-inputs/form-email.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport EntityLegalFormEnum from '../../goaml-enums/entity-legal-form-enum/entity-legal-form-enum.component';\r\nimport ReportAddresses from '../../goaml-sections/report-addresses/report-addresses.component';\r\nimport ReportPhones from '../../goaml-sections/report-phones/report-phones.components';\r\nimport TransactionDirectors from '../transaction-director/transaction-director.component';\r\n\r\n\r\nconst TransactionEntity = ({ label, name, transRef, partyType, OnSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateEntity, setComponentState] = React.useState({\r\n        \"name\": '',\r\n        \"commercial_name\": '',\r\n        \"incorporation_legal_form\": '',\r\n        // \"incorporation_legal_formSpecified\": false,\r\n        \"incorporation_number\": '',\r\n        \"business\":'',\r\n        \"phones\": [],\r\n        \"addresses\": [],\r\n        \"email\": '',\r\n        \"url\": '',\r\n        \"incorporation_state\": '',\r\n        \"incorporation_country_code\": '',\r\n        // \"incorporation_country_codeSpecified\": false,\r\n        \"director_id\": [],\r\n        \"incorporation_date\": '',\r\n        // \"incorporation_dateSpecified\": '',\r\n        \"business_closed\": false,\r\n        // \"business_closedSpecified\": null,\r\n        // \"date_business_closed\": '',\r\n        // \"date_business_closedSpecified\": false,\r\n        \"tax_number\": '',\r\n        \"tax_reg_number\": '',\r\n        \"comments\": ''\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateEntity, [name]: value });\r\n    };\r\n\r\n    const handleSaveDirector = (director) => {\r\n        setComponentState({ ...templateEntity, director_id: { ...templateEntity.director_id, director } });\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if(!templateEntity.name || !templateEntity.business || !templateEntity.incorporation_state || !templateEntity.url || !templateEntity.commercial_name ||\r\n            !templateEntity.incorporation_number || !templateEntity.incorporation_country_code || !templateEntity.incorporation_legal_form ||\r\n            !templateEntity.incorporation_date || !templateEntity.email || !templateEntity.business_closed || templateEntity.phone ||\r\n            !templateEntity.addresses || !templateEntity.director_id){\r\n            alert('please fill this field')\r\n        }\r\n        OnSave(templateEntity);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateEntity);\r\n    }\r\n\r\n    const handlePhoneSave = (phone) => {\r\n        templateEntity.phones.push(phone)\r\n    }\r\n\r\n    const handleAddressSave = (address) => {\r\n        templateEntity.addresses.push(address)\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Name*\" \r\n                                                name=\"name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.name} \r\n                                                className={`form-control ${!templateEntity.name && touched && 'is-invalid'} ${templateEntity.name && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Business Area\" \r\n                                                name=\"business\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.business} \r\n                                                className={`form-control ${!templateEntity.business && touched && 'is-invalid'} ${templateEntity.business && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Incorporation Province/State\" \r\n                                                name=\"incorporation_state\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_state} \r\n                                                className={`form-control ${!templateEntity.incorporation_state && touched && 'is-invalid'} ${templateEntity.incorporation_state && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Entity web address\" \r\n                                                name=\"url\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.url} \r\n                                                className={`form-control ${!templateEntity.url && touched && 'is-invalid'} ${templateEntity.url && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Registered Name*\" \r\n                                                name=\"commercial_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.commercial_name} \r\n                                                className={`form-control ${!templateEntity.commercial_name && touched && 'is-invalid'} ${templateEntity.commercial_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Incorporation Reg Number*\" \r\n                                                name=\"incorporation_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_number} \r\n                                                className={`form-control ${!templateEntity.incorporation_number && touched && 'is-invalid'} ${templateEntity.incorporation_number && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Incorporation Country Code*\" \r\n                                                name=\"incorporation_country_code\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_country_code} \r\n                                                className={`form-control ${!templateEntity.incorporation_country_code && touched && 'is-invalid'} ${templateEntity.incorporation_country_code && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Reg. Number\" \r\n                                                name=\"tax_reg_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.tax_reg_number} \r\n                                                className={`form-control ${!templateEntity.tax_reg_number && touched && 'is-invalid'} ${templateEntity.tax_reg_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <EntityLegalFormEnum \r\n                                                label=\"Incorporation Legal Form*\" \r\n                                                name=\"incorporation_legal_form\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_legal_form} \r\n                                                className={`form-control ${!templateEntity.incorporation_legal_form && touched && 'is-invalid'} ${templateEntity.incorporation_legal_form && 'is-valid'}`}\r\n                                            />\r\n                                            <FormDate \r\n                                                label=\"Incorporation Date*\" \r\n                                                name=\"incorporation_date\" \r\n                                                type=\"date\"\r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_date} \r\n                                                className={`form-control ${!templateEntity.incorporation_date && touched && 'is-invalid'} ${templateEntity.incorporation_date && 'is-valid'}`}\r\n                                            />\r\n                                            <FormEmail \r\n                                                label=\"Email\" \r\n                                                name=\"email\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.email} \r\n                                                className={`form-control ${!templateEntity.email && touched && 'is-invalid'} ${templateEntity.email && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Number\" \r\n                                                name=\"tax_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.tax_number} \r\n                                                className={`form-control ${!templateEntity.tax_number && touched && 'is-invalid'} ${templateEntity.tax_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormRadioText \r\n                                                label=\"Business Closed?\" \r\n                                                name=\"business_closed\" \r\n                                                width=\"6\" items={[\"Yes\", \"No\"]} \r\n                                                handleChange={handleChange}\r\n                                                value={templateEntity.business_closed}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportPhones \r\n                                                label=\"Phones*\"\r\n                                                name=\"phones\" \r\n                                                handlePhoneSave={handlePhoneSave}\r\n                                                value={templateEntity.phones}\r\n                                            ></ReportPhones>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportAddresses \r\n                                                label=\"Addresses*\"\r\n                                                name=\"addresses\" \r\n                                                handleAddressSave={handleAddressSave} \r\n                                                value={templateEntity.addresses}\r\n                                            ></ReportAddresses>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionDirectors \r\n                                                label=\"Directors*\" \r\n                                                name=\"director_id\" \r\n                                                alias=\"Director\"\r\n                                                partyType={partyType} \r\n                                                transRef={transRef} \r\n                                                OnSave={handleSaveDirector}\r\n                                                value={templateEntity.director_id}\r\n                                            ></TransactionDirectors>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Comments\" \r\n                                                name=\"comments\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.comments} \r\n                                                className={`form-control ${!templateEntity.comments && touched && 'is-invalid'} ${templateEntity.comments && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions \r\n                                    saveText=\"Save Entity\" \r\n                                    handleSaveClick={handleSaveClick} \r\n                                    handleCancelClick={handleCancelClick}\r\n                                ></FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionEntity;\r\n","import React from 'react';\r\nimport usersData from '../../views/users/UsersData';\r\nimport CombinedTable from './combined-table.component';\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass SignatoryTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Signatories Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignatoryTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass AccountPersonRoleEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: '---', description:'Default value'},\r\n                {value: 'D', description:'Director'},\r\n                {value: 'F', description:'Fudiciary Agent'},\r\n                {value: '---', description:'Default value'},\r\n                {value: '---', description:'Default value'}\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AccountPersonRoleEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport AccountPersonRoleEnum from '../../goaml-enums/account-person-role-enum/account-person-role-enum.component';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\n\r\nconst SignatoryTemplate = ({ name, handlePhoneSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [componentState, setComponentState] = React.useState({\r\n        \"person\": '',\r\n        \"is_primary\": '',\r\n        \"role\": ''\r\n    });\r\n\r\n    const handleSaveClick = () => {\r\n        handlePhoneSave(componentState);\r\n    }\r\n\r\n    const [check, setCheck] = React.useState(false);\r\n    const onChecked = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log({name, value})\r\n        setCheck({[name]: value})\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...componentState, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", componentState);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"8\">\r\n                                    <FormRadioText \r\n                                        label=\"Is Primary?\" \r\n                                        name=\"is_primary\" \r\n                                        width=\"6\" \r\n                                        items={[\"Yes\", \"No\"]}\r\n                                        handleChange={onChecked}\r\n                                        defaultValue={componentState.is_primary}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <AccountPersonRoleEnum \r\n                                    label=\"Role\" \r\n                                    name=\"role\"\r\n                                    handleChange={onChecked}\r\n                                    defaultValue={componentState.role}\r\n                                    ></AccountPersonRoleEnum>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionPerson \r\n                                        name=\"person\" \r\n                                        label=\"Person\" \r\n                                        alias=\"Person\"\r\n                                        handleChange={onChecked}\r\n                                        defaultValue={componentState.person}\r\n                                    ></TransactionPerson>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Signatory\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default SignatoryTemplate;","import React from 'react';\r\nimport SignatoryTable from '../../goaml-tables/table-signatory.component'\r\nimport SignatoryTemplate from '../template-signatory/template-signatory.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionSignatories = ({ name, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <SignatoryTemplate name=\"Add a Signatory\"></SignatoryTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <SignatoryTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionSignatories;\r\n","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from 'src/components/form-inputs/form-actions.component';\r\nimport FormAmount from '../../form-inputs/form-amount.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport AccountTypeEnum from '../../goaml-enums/account-type-enum/account-type-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionSignatories from '../transaction-signatory/transaction-signatory.component';\r\n\r\n\r\nconst TransactionAccount = ({ name, label, transRef, partyType, OnSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [stateAccount, setStateAccount] = React.useState({\r\n        \"institution_name\": '',\r\n        \"institution_code\": '',\r\n        \"swift\": '',\r\n        \"non_banking_institution\": false,\r\n        \"branch\": '',\r\n        \"account\": '',\r\n        \"currency_code\": '',\r\n        \"account_name\": '',\r\n        \"iban\": '',\r\n        \"client_number\": '',\r\n        \"personal_account_type\": '',\r\n        \"t_entity\": '',\r\n        \"signatory\": '',\r\n        \"is_primary\": '',\r\n        \"t_person\": '',\r\n        \"role\": '',\r\n        \"opened\": '',\r\n        \"closed\": '',\r\n        \"balance\": '',\r\n        \"date_balance\": '',\r\n        \"status_code\": '',\r\n        \"beneficiary\": '',\r\n        \"beneficiary_comment\": '',\r\n        \"comments\": '',\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setStateAccount({ ...stateAccount, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (!stateAccount.account || !stateAccount.iban || !stateAccount.non_banking_institution || !stateAccount.currency_code || !stateAccount.opened ||\r\n            !stateAccount.account_name || !stateAccount.institution_name || !stateAccount.swift || !stateAccount.balance || !stateAccount.closed ||\r\n            !stateAccount.personal_account_type || !stateAccount.branch || !stateAccount.date_balance || !stateAccount.client_number ||\r\n            !stateAccount.beneficiary || !stateAccount.beneficiary_comment) {\r\n            alert('please fill this field')\r\n        }\r\n        OnSave(transRef, partyType, stateAccount);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", stateAccount);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        {label}\r\n                        <div className=\"card-header-actions\">\r\n                            <CButton \r\n                            color=\"link\" \r\n                            className=\"card-header-action btn-minimize\" \r\n                            onClick={() => setCollapsed(!collapsed)}\r\n                            >\r\n                            <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                            </CButton>\r\n                        </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Account*\" \r\n                                        name=\"account\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.account} \r\n                                        className={`form-control ${!stateAccount.account && touched && 'is-invalid'} ${stateAccount.account && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Iban\" \r\n                                        name=\"iban\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.iban} \r\n                                        className={`form-control ${!stateAccount.iban && touched && 'is-invalid'} ${stateAccount.iban && 'is-valid'}`}\r\n                                    />\r\n                                    <FormRadioText \r\n                                        label=\"Non Banking Institution?\" \r\n                                        name=\"non_banking_institution\" \r\n                                        width=\"6\" \r\n                                        items={[\"Yes\", \"No\"]}\r\n                                        value={stateAccount.non_banking_institution}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                    <CurrenciesEnum \r\n                                        label=\"Currency Code*\" \r\n                                        name=\"currency_code\"\r\n                                        value={stateAccount.currency_code}\r\n                                        handleChange={handleChange} \r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Opened*\" \r\n                                        name=\"Opened\"\r\n                                        value={stateAccount.opened}\r\n                                        handleChange={handleChange} \r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Account name\" \r\n                                        name=\"account_name\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.account_name} \r\n                                        className={`form-control ${!stateAccount.account_name && touched && 'is-invalid'} ${stateAccount.account_name && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Institution Name*\" \r\n                                        name=\"institution_name\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.institution_name} \r\n                                        className={`form-control ${!stateAccount.institution_name && touched && 'is-invalid'} ${stateAccount.institution_name && 'is-valid'}`}\r\n                                    />\r\n                                    <FormRadioText \r\n                                        label=\"Code or Swift?\" \r\n                                        name=\"swift\" \r\n                                        width=\"6\" \r\n                                        items={[\"Institution Code\", \"Swift\"]}\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.swift} \r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Balance*\" \r\n                                        name=\"balance\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.balance} \r\n                                        className={`form-control ${!stateAccount.balance && touched && 'is-invalid'} ${stateAccount.balance && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Closed\" \r\n                                        name=\"closed\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.closed} \r\n                                        className={`form-control ${!stateAccount.closedt && touched && 'is-invalid'} ${stateAccount.closed && 'is-valid'}`}\r\n                                    />                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <AccountTypeEnum \r\n                                        label=\"Account Type*\" \r\n                                        name=\"personal_account-type\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.personal_account_type} \r\n                                        className={`form-control ${!stateAccount.personal_account_type && touched && 'is-invalid'} ${stateAccount.personal_account_type && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Branch Code*\" \r\n                                        name=\"branch\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.branch} \r\n                                        className={`form-control ${!stateAccount.branch && touched && 'is-invalid'} ${stateAccount.branch && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Role*\" \r\n                                        name=\"role\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.role} \r\n                                        className={`form-control ${!stateAccount.role && touched && 'is-invalid'} ${stateAccount.role && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Date of Balance*\" \r\n                                        type=\"date\"\r\n                                        name=\"date_balance\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.date_balance} \r\n                                        className={`form-control ${!stateAccount.date_balance && touched && 'is-invalid'} ${stateAccount.date_balance && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Client Number\"\r\n                                        type=\"number\" \r\n                                        name=\"client_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.client_number} \r\n                                        className={`form-control ${!stateAccount.client_number && touched && 'is-invalid'} ${stateAccount.client_number && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Beneficiary\" \r\n                                        name=\"beneficiary\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.beneficiary} \r\n                                        className={`form-control ${!stateAccount.beneficiary && touched && 'is-invalid'} ${stateAccount.beneficiary && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"8\">\r\n                                    <FormTextArea \r\n                                        label=\"Beneficiary Comment\" \r\n                                        name=\"beneficiary_comment\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.beneficiary_comment} \r\n                                        className={`form-control ${!stateAccount.beneficiary_comment && touched && 'is-invalid'} ${stateAccount.beneficiary_comment && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"8\">\r\n                                <FormActions \r\n                                    saveText=\"Save Transaction Account\" \r\n                                    handleSaveClick={handleSaveClick} \r\n                                    handleCancelClick={handleCancelClick}></FormActions>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionEntity \r\n                                        label=\"Transaction Entity\"\r\n                                        name=\"transaction_entity\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.transaction_entity}\r\n                                    ></TransactionEntity>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionSignatories \r\n                                        name=\"Signatories\" \r\n                                        label=\"signatory\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.signatory}\r\n                                        className=\"pb-30\"\r\n                                    ></TransactionSignatories>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.comments}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionAccount;","const TransactionsPartyTypes = {\r\n  FROM: 'FROM',\r\n  TO: 'TO',\r\n  MY_CLIENT: 'MY_CLIENT',\r\n  PERSON_CLIENT: 'PERSON_CLIENT',\r\n  ACCOUNT_CLIENT: 'ACCOUNT_CLIENT',\r\n  ENTITY_CLIENT: 'ENTITY_CLIENT',\r\n  NOT_MY_CLIENT: 'NOT_MY_CLIENT',\r\n  PERSON_NOT_CLIENT: 'PERSON_NOT_CLIENT',\r\n  ACCOUNT_NOT_CLIENT: 'ACCOUNT_NOT_CLIENT',\r\n  ENTITY_NOT_CLIENT: 'ENTITY_NOT_CLIENT'\r\n};\r\n\r\nexport default TransactionsPartyTypes;","var t_from = {\r\n    \"from_funds_code\": \"\",\r\n    \"from_funds_comment\": \"\",\r\n    \"from_foreign_currency\": {\r\n        \"foreign_currency_code\": '',\r\n        \"foreign_amount\": '',\r\n        \"foreign_exchange_rate\": '',\r\n    },\r\n    \"t_conductor\": null,\r\n    \"from_account\": null,\r\n    \"from_person\": null,\r\n    \"from_entity\": null,\r\n    \"from_country\": \"\"\r\n}\r\n\r\nexport default t_from;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport PartyTypeEnum from '../../goaml-enums/party-type-enum/party-type-enum.components';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\nimport TransactionAccount from '../transaction-account/transaction-account.components';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\n\r\nimport t_from from '../../../redux/transaction-party/from.format'\r\n\r\nconst TransactionFrom = ({ name, transRef, clientType, partyType, handleSavePartyInfo, report, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState(t_from)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n\r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-person-client\":\r\n                newCollapse[1] = !collapseMulti[1];\r\n                newCollapse[0] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-account-client\":\r\n                newCollapse[2] = !collapseMulti[2];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-entity-client\":\r\n                newCollapse[3] = !collapseMulti[3];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        if (name == \"foreign_currency_code\" || name == \"foreign_exchange_rate\" || name == \"foreign_amount\")\r\n            setTranspartyInfo({ ...transpartyInfo, from_foreign_currency: { ...transpartyInfo.from_foreign_currency, [name]: value } });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, t_conductor: conductor });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveEntity = (entity) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_entity: entity });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveAccount = (account) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_account: account });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSavePerson = (person) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_person: person });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if (!transpartyInfo.from_funds_code || !transpartyInfo.from_funds_comment || !transpartyInfo.from_country\r\n            || !transpartyInfo.from_foreign_currency.foreign_currency_code) {\r\n            alert('please complete this field')\r\n        }\r\n        handleSavePartyInfo(transpartyInfo);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum\r\n                                                label=\"Funds Code*\"\r\n                                                name=\"from_funds_code\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.from_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_funds_code && touched && 'is-invalid'} ${transpartyInfo.from_funds_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput\r\n                                                label=\"Funds Comment\"\r\n                                                name=\"from_funds_comment\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.from_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                className={`from-control ${!transpartyInfo.from_funds_comment && touched && 'is-invalid'} ${transpartyInfo.from_funds_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Country*\"\r\n                                                name=\"from_country\"\r\n                                                value={transpartyInfo.from_country}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_country && touched && 'is-invalid'} ${transpartyInfo.from_country && touched && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            \r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Currency Code*\"\r\n                                                name=\"foreign_currency_code\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_currency_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_currency_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Exchange Rate*\"\r\n                                                name=\"foreign_exchange_rate\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_exchange_rate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_exchange_rate && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Amount*\"\r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_amount && 'is-valid'} `}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <button type=\"button\" onClick={() => { toggleMulti('person-conductor') }}\r\n                                                    class=\"btn btn-link\">Add Conductor</button>\r\n                                            </p>\r\n                                            <row>\r\n                                                <CCollapse show={collapseMulti[0]}>\r\n                                                    <TransactionPerson OnSave={handleSaveConductor} transRef={transRef} partyType={partyType} label=\"Add a Conductor\" name=\"conductor\" alias=\"Conductor\" ></TransactionPerson>\r\n                                                </CCollapse>\r\n                                            </row>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-person-client') }}\r\n                                                    class=\"btn btn-link\">Add Person</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-account-client') }}\r\n                                                    class=\"btn btn-link\">Add Account</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-entity-client') }}\r\n                                                    class=\"btn btn-link\">Add Entity</CButton>{' '}\r\n                                            </p>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[1]}>\r\n                                                        <TransactionPerson OnSave={handleSavePerson} partyType={TransactionsPartyTypes.PERSON_NOT_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person-NC\" alias=\"Person\"></TransactionPerson>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[2]}>\r\n                                                        <TransactionAccount OnSave={handleSaveAccount} partyType={TransactionsPartyTypes.ACCOUNT_NOT_CLIENT} transRef={transRef} name=\"TransactionAccount-NC\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[3]}>\r\n                                                        <TransactionEntity OnSave={handleSaveEntity} partyType={TransactionsPartyTypes.ENTITY_NOT_CLIENT} transRef={transRef} name=\"TransactionEntity-NC\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions\r\n                                    saveText=\"Save Party Details\"\r\n                                    handleSaveClick={handleSaveClick}\r\n                                    handleCancelClick={handleCancelClick}>\r\n                                </FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(TransactionFrom);\r\n","var t_from_my_client = {\r\n    \"from_funds_code\": \"\",\r\n    \"from_funds_comment\": \"\",\r\n    \"from_foreign_currency\": {\r\n        \"foreign_currency_code\": '',\r\n        \"foreign_amount\": '',\r\n        \"foreign_exchange_rate\": '',\r\n    },\r\n    \"t_conductor\": null,\r\n    \"from_account\": null,\r\n    \"from_person\": null,\r\n    \"from_entity\": null,\r\n    \"from_country\": \"\"\r\n}\r\n\r\nexport default t_from_my_client;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\nimport TransactionAccount from '../transaction-account/transaction-account.components';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\n\r\nimport t_from_my_client from '../../../redux/transaction-party/from-my-client.format'\r\n\r\nconst TransactionFromMyClient = ({ name, transRef, clientType, partyType, handleSavePartyInfo, report, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState(t_from_my_client)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n\r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"person-client\":\r\n                newCollapse[1] = !collapseMulti[1];\r\n                newCollapse[0] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"account-client\":\r\n                newCollapse[2] = !collapseMulti[2];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"entity-client\":\r\n                newCollapse[3] = !collapseMulti[3];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        if (name == \"foreign_currency_code\" || name == \"foreign_exchange_rate\" || name == \"foreign_amount\")\r\n            setTranspartyInfo({ ...transpartyInfo, from_foreign_currency: { ...transpartyInfo.from_foreign_currency, [name]: value } });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, t_conductor: conductor });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveEntity = (entity) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_entity: entity });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveAccount = (account) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_account: account });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSavePerson = (person) => {\r\n        setTranspartyInfo({ ...transpartyInfo, from_person: person });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if (!transpartyInfo.from_funds_code || !transpartyInfo.from_funds_comment || !transpartyInfo.from_country\r\n            || !transpartyInfo.from_foreign_currency.foreign_currency_code) {\r\n            alert('please complete this field')\r\n        }\r\n        handleSavePartyInfo(transpartyInfo);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum\r\n                                                label=\"Funds Code*\"\r\n                                                name=\"from_funds_code\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.from_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_funds_code && touched && 'is-invalid'} ${transpartyInfo.from_funds_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput\r\n                                                label=\"Funds Comment\"\r\n                                                name=\"from_funds_comment\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.from_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                className={`from-control ${!transpartyInfo.from_funds_comment && touched && 'is-invalid'} ${transpartyInfo.from_funds_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Country*\"\r\n                                                name=\"from_country\"\r\n                                                value={transpartyInfo.from_country}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_country && touched && 'is-invalid'} ${transpartyInfo.from_country && touched && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            \r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Currency Code*\"\r\n                                                name=\"foreign_currency_code\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_currency_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_currency_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Exchange Rate*\"\r\n                                                name=\"foreign_exchange_rate\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_exchange_rate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_exchange_rate && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Amount*\"\r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.from_foreign_currency.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_foreign_currency.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.from_foreign_currency.foreign_amount && 'is-valid'} `}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <button type=\"button\" onClick={() => { toggleMulti('person-conductor') }}\r\n                                                    class=\"btn btn-link\">Add Conductor</button>\r\n                                            </p>\r\n                                            <row>\r\n                                                <CCollapse show={collapseMulti[0]}>\r\n                                                    <TransactionPerson OnSave={handleSaveConductor} transRef={transRef} partyType={partyType} label=\"Add a Conductor\" name=\"conductor\" alias=\"Conductor\" ></TransactionPerson>\r\n                                                </CCollapse>\r\n                                            </row>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('person-client') }}\r\n                                                    class=\"btn btn-link\">Add Person</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('account-client') }}\r\n                                                    class=\"btn btn-link\">Add Account</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('entity-client') }}\r\n                                                    class=\"btn btn-link\">Add Entity</CButton>{' '}\r\n                                            </p>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[1]}>\r\n                                                        <TransactionPerson OnSave={handleSavePerson} partyType={TransactionsPartyTypes.PERSON_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[2]}>\r\n                                                        <TransactionAccount OnSave={handleSaveAccount} partyType={TransactionsPartyTypes.ACCOUNT_CLIENT} transRef={transRef} name=\"TransactionAccount\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[3]}>\r\n                                                        <TransactionEntity OnSave={handleSaveEntity} partyType={TransactionsPartyTypes.ENTITY_CLIENT} transRef={transRef} name=\"TransactionEntity\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions\r\n                                    saveText=\"Save Party Details\"\r\n                                    handleSaveClick={handleSaveClick}\r\n                                    handleCancelClick={handleCancelClick}>\r\n                                </FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(TransactionFromMyClient);","var t_to = {\r\n    \"to_funds_code\": \"\",\r\n    \"to_funds_comment\": \"\",\r\n    \"to_foreign_currency\": {\r\n        \"foreign_currency_code\": '',\r\n        \"foreign_amount\": '',\r\n        \"foreign_exchange_rate\": '',\r\n    },\r\n    \"t_conductor\": null,\r\n    \"to_account\": null,\r\n    \"to_person\": null,\r\n    \"to_entity\": null,\r\n    \"to_country\": \"\"\r\n}\r\n\r\nexport default t_to;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\nimport TransactionAccount from '../transaction-account/transaction-account.components';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\nimport t_to from '../../../redux/transaction-party/to.format'\r\n\r\nconst TransactionTo = ({ name, transRef, clientType, partyType, handleSavePartyInfo, report, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState(t_to)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n\r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-person-client\":\r\n                newCollapse[1] = !collapseMulti[1];\r\n                newCollapse[0] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-account-client\":\r\n                newCollapse[2] = !collapseMulti[2];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"not-entity-client\":\r\n                newCollapse[3] = !collapseMulti[3];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        if (name == \"foreign_currency_code\" || name == \"foreign_exchange_rate\" || name == \"foreign_amount\")\r\n            setTranspartyInfo({ ...transpartyInfo, to_foreign_currency: { ...transpartyInfo.to_foreign_currency, [name]: value } });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, t_conductor: conductor });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveEntity = (entity) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_entity: entity });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveAccount = (account) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_account: account });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSavePerson = (person) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_person: person });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if (!transpartyInfo.to_funds_code || !transpartyInfo.to_funds_comment || !transpartyInfo.to_country\r\n            || !transpartyInfo.to_foreign_currency.foreign_currency) {\r\n            alert('please complete this field')\r\n        }\r\n        handleSavePartyInfo(transpartyInfo);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum\r\n                                                label=\"Funds Code*\"\r\n                                                name=\"from_funds_code\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.to_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_funds_code && touched && 'is-invalid'} ${transpartyInfo.to_funds_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput\r\n                                                label=\"Funds Comment\"\r\n                                                name=\"from_funds_comment\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.to_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                className={`from-control ${!transpartyInfo.to_funds_comment && touched && 'is-invalid'} ${transpartyInfo.to_funds_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Country*\"\r\n                                                name=\"from_country\"\r\n                                                value={transpartyInfo.to_country}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_country && touched && 'is-invalid'} ${transpartyInfo.to_country && touched && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            \r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Currency Code*\"\r\n                                                name=\"foreign_currency_code\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_currency_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_currency_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Exchange Rate*\"\r\n                                                name=\"foreign_exchange_rate\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_exchange_rate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_exchange_rate && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Amount*\"\r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_amount && 'is-valid'} `}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <button type=\"button\" onClick={() => { toggleMulti('person-conductor') }}\r\n                                                    class=\"btn btn-link\">Add Conductor</button>\r\n                                            </p>\r\n                                            <row>\r\n                                                <CCollapse show={collapseMulti[0]}>\r\n                                                    <TransactionPerson OnSave={handleSaveConductor} transRef={transRef} partyType={partyType} label=\"Add a Conductor\" name=\"conductor\" alias=\"Conductor\" ></TransactionPerson>\r\n                                                </CCollapse>\r\n                                            </row>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-person-client') }}\r\n                                                    class=\"btn btn-link\">Add Person</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-account-client') }}\r\n                                                    class=\"btn btn-link\">Add Account</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('not-entity-client') }}\r\n                                                    class=\"btn btn-link\">Add Entity</CButton>{' '}\r\n                                            </p>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[1]}>\r\n                                                        <TransactionPerson OnSave={handleSavePerson} partyType={TransactionsPartyTypes.PERSON_NOT_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person-NC\" alias=\"Person\"></TransactionPerson>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[2]}>\r\n                                                        <TransactionAccount OnSave={handleSaveAccount} partyType={TransactionsPartyTypes.ACCOUNT_NOT_CLIENT} transRef={transRef} name=\"TransactionAccount-NC\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[3]}>\r\n                                                        <TransactionEntity OnSave={handleSaveEntity} partyType={TransactionsPartyTypes.ENTITY_NOT_CLIENT} transRef={transRef} name=\"TransactionEntity-NC\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions\r\n                                    saveText=\"Save Party Details\"\r\n                                    handleSaveClick={handleSaveClick}\r\n                                    handleCancelClick={handleCancelClick}>\r\n                                </FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(TransactionTo);","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { setReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\nimport TransactionAccount from '../transaction-account/transaction-account.components';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\nimport t_to_my_client from '../../../redux/transaction-party/to.format'\r\n\r\nconst TransactionToMyClient = ({ name, transRef, clientType, partyType, handleSavePartyInfo, report, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState(t_to_my_client)\r\n\r\n    const [showError, setShowError] = React.useState({ isEmpty: false, value: '' });\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean') {\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false;\r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n        });\r\n    }\r\n\r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"person-client\":\r\n                newCollapse[1] = !collapseMulti[1];\r\n                newCollapse[0] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"account-client\":\r\n                newCollapse[2] = !collapseMulti[2];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[3] = false;\r\n                break;\r\n            case \"entity-client\":\r\n                newCollapse[3] = !collapseMulti[3];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        if (name == \"foreign_currency_code\" || name == \"foreign_exchange_rate\" || name == \"foreign_amount\")\r\n            setTranspartyInfo({ ...transpartyInfo, to_foreign_currency: { ...transpartyInfo.to_foreign_currency, [name]: value } });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, t_conductor: conductor });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveEntity = (entity) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_entity: entity });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveAccount = (account) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_account: account });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSavePerson = (person) => {\r\n        setTranspartyInfo({ ...transpartyInfo, to_person: person });\r\n        handleSaveClick();\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if (!transpartyInfo.to_funds_code || !transpartyInfo.to_funds_comment || !transpartyInfo.to_country\r\n            || !transpartyInfo.to_foreign_currency.foreign_currency) {\r\n            alert('please complete this field')\r\n        }\r\n        handleSavePartyInfo(transpartyInfo);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", report);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum\r\n                                                label=\"Funds Code*\"\r\n                                                name=\"from_funds_code\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.to_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_funds_code && touched && 'is-invalid'} ${transpartyInfo.to_funds_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput\r\n                                                label=\"Funds Comment\"\r\n                                                name=\"from_funds_comment\"\r\n                                                placeholder=\"Enter ...\"\r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.to_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                className={`from-control ${!transpartyInfo.to_funds_comment && touched && 'is-invalid'} ${transpartyInfo.to_funds_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Country*\"\r\n                                                name=\"from_country\"\r\n                                                value={transpartyInfo.to_country}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_country && touched && 'is-invalid'} ${transpartyInfo.to_country && touched && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            \r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum\r\n                                                handleChange={handleChange}\r\n                                                label=\"Currency Code*\"\r\n                                                name=\"foreign_currency_code\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_currency_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_currency_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Exchange Rate*\"\r\n                                                name=\"foreign_exchange_rate\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_exchange_rate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_exchange_rate && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount\r\n                                                handleChange={handleChange}\r\n                                                label=\"Amount*\"\r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.to_foreign_currency.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.to_foreign_currency.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.to_foreign_currency.foreign_amount && 'is-valid'} `}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <button type=\"button\" onClick={() => { toggleMulti('person-conductor') }}\r\n                                                    class=\"btn btn-link\">Add Conductor</button>\r\n                                            </p>\r\n                                            <row>\r\n                                                <CCollapse show={collapseMulti[0]}>\r\n                                                    <TransactionPerson OnSave={handleSaveConductor} transRef={transRef} partyType={partyType} label=\"Add a Conductor\" name=\"conductor\" alias=\"Conductor\" ></TransactionPerson>\r\n                                                </CCollapse>\r\n                                            </row>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('person-client') }}\r\n                                                    class=\"btn btn-link\">Add Person</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('account-client') }}\r\n                                                    class=\"btn btn-link\">Add Account</CButton>{' '}\r\n                                                <CButton color=\"primary\" onClick={() => { toggleMulti('entity-client') }}\r\n                                                    class=\"btn btn-link\">Add Entity</CButton>{' '}\r\n                                            </p>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[1]}>\r\n                                                        <TransactionPerson OnSave={handleSavePerson} partyType={TransactionsPartyTypes.PERSON_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[2]}>\r\n                                                        <TransactionAccount OnSave={handleSaveAccount} partyType={TransactionsPartyTypes.ACCOUNT_CLIENT} transRef={transRef} name=\"TransactionAccount\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <CCollapse show={collapseMulti[3]}>\r\n                                                        <TransactionEntity OnSave={handleSaveEntity} partyType={TransactionsPartyTypes.ENTITY_CLIENT} transRef={transRef} name=\"TransactionEntity\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                    </CCollapse>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions\r\n                                    saveText=\"Save Party Details\"\r\n                                    handleSaveClick={handleSaveClick}\r\n                                    handleCancelClick={handleCancelClick}>\r\n                                </FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(TransactionToMyClient);","import React from 'react';\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs\r\n} from '@coreui/react'\r\n\r\nimport TransactionFrom from '../transaction-party/party-from.component'\r\nimport TransactionFromMyClient from '../transaction-party/party-from-my-client.component'\r\nimport TransactionTo from '../transaction-party/party-to.component'\r\nimport TransactionToMyClient from '../transaction-party/party-to-my-client.component'\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\nimport { addTFrom } from '../../../redux/report/report.actions';\r\nimport { addTFromMyClient } from '../../../redux/report/report.actions';\r\nimport { addTTo } from '../../../redux/report/report.actions';\r\nimport { addTToMyClient } from '../../../redux/report/report.actions';\r\n\r\nimport { RetrieveTransactionFromReport } from '../../../redux/goaml-utils/goaml-utils';\r\n\r\nconst TransactionParty = ({ name, label, from, to, transRef, report, addTFrom, addTTo, addTFromMyClient, addTToMyClient, displayPartyType, ...otherProps }) => {\r\n\r\n    let [showElements, setShowElements] = React.useState(true);\r\n\r\n    const SaveTransactionFromMyClient = (transparty) => {\r\n        const existingTxn = RetrieveTransactionFromReport(report, transRef);\r\n        if (existingTxn) {\r\n            addTFromMyClient(report, existingTxn.internal_ref_number, transparty);\r\n        }\r\n        else{\r\n            alert(\"Transaction with Internal Ref Number '\", transRef, \"' cannot be found. Save failed!\");\r\n        }\r\n    }\r\n\r\n    const SaveTransactionFrom = (transparty) => {\r\n        const existingTxn = RetrieveTransactionFromReport(report, transRef);\r\n        if (existingTxn) {\r\n            addTFrom(report, existingTxn.internal_ref_number, transparty);\r\n        }\r\n        else{\r\n            alert(\"Transaction with Internal Ref Number '\", transRef, \"' cannot be found. Save failed!\");\r\n        }\r\n    }\r\n\r\n    const SaveTransactionToMyClient = (transparty) => {\r\n        const existingTxn = RetrieveTransactionFromReport(report, transRef);\r\n        if (existingTxn) {\r\n            addTToMyClient(report, existingTxn.internal_ref_number, transparty);\r\n        }\r\n        else{\r\n            alert(\"Transaction with Internal Ref Number '\", transRef, \"' cannot be found. Save failed!\");\r\n        }\r\n    }\r\n\r\n    const SaveTransactionTo = (transparty) => {\r\n        const existingTxn = RetrieveTransactionFromReport(report, transRef);\r\n        if (existingTxn) {\r\n            addTTo(report, existingTxn.internal_ref_number, transparty);\r\n        }\r\n        else{\r\n            alert(\"Transaction with Internal Ref Number '\", transRef, \"' cannot be found. Save failed!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"myClient\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"myClient\">\r\n                                        Party Details\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"myClient\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                {displayPartyType == TransactionsPartyTypes.FROM ?\r\n                                                    (from == TransactionsPartyTypes.ACCOUNT_CLIENT\r\n                                                        || from == TransactionsPartyTypes.PERSON_CLIENT\r\n                                                        || from == TransactionsPartyTypes.ENTITY_CLIENT) ?\r\n                                                        <TransactionFromMyClient transRef={transRef} clientType={from} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={SaveTransactionFromMyClient} name=\"Expand and Fill From My Clent Overview\" />\r\n                                                        :\r\n                                                        <TransactionFrom transRef={transRef} clientType={from} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={SaveTransactionFrom} name=\"Expand and Fill From Clent Overview\" />\r\n                                                    :\r\n                                                    (to == TransactionsPartyTypes.ACCOUNT_CLIENT\r\n                                                        || to == TransactionsPartyTypes.PERSON_CLIENT\r\n                                                        || to == TransactionsPartyTypes.ENTITY_CLIENT) ?\r\n                                                        <TransactionToMyClient transRef={transRef} clientType={to} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={SaveTransactionToMyClient} name=\"Expand and Fill To My Clent Overview\" />\r\n                                                        :\r\n                                                        <TransactionTo transRef={transRef} clientType={to} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={SaveTransactionTo} name=\"Expand and Fill To Clent Overview\" />\r\n                                                }\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst makeMapStateToProps = () => {\r\n    const mapStateToProps = (state, props) => {\r\n        return {\r\n            report: selectReport(state)\r\n        }\r\n    }\r\n    return mapStateToProps\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTFrom: (report, internal_ref_number, item) => dispatch(addTFrom(report, internal_ref_number, item)),\r\n    addTTo: (report, internal_ref_number, item) => dispatch(addTTo(report, internal_ref_number, item)),\r\n    addTFromMyClient: (report, internal_ref_number, item) => dispatch(addTFromMyClient(report, internal_ref_number, item)),\r\n    addTToMyClient: (report, internal_ref_number, item) => dispatch(addTToMyClient(report, internal_ref_number, item)),\r\n});\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(TransactionParty);","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport TransactionInfo from '../transaction-info/transaction-info.components';\r\nimport TransactionItem from '../transaction-item/transaction-item.components';\r\nimport TransactionParty from '../transaction-party/transaction-party.component';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setReport, addTransactionToReport } from '../../../redux/report/report.actions';\r\nimport { selectReport } from '../../../redux/report/report.selectors';\r\n\r\n\r\nconst TransactionTemplate = ({ name, report, transaction, addReportTransaction, ...otherProps }) => {\r\n\r\n    let [collapsed, setCollapsed] = React.useState(false)\r\n    let [showElements, setShowElements] = React.useState(true)\r\n\r\n    let [transitState, setTransitState] = React.useState({\r\n        transRef: null,\r\n        txn_from: null,\r\n        txn_to: null\r\n    })\r\n\r\n    const handleTransInfoSaveClick = (reportTxns, transaction) => {\r\n        setTransitState({ ...transitState, transRef: transaction.detail.internal_ref_number, \r\n            txn_from: transaction.txn_from, txn_to: transaction.txn_to });\r\n        addReportTransaction(reportTxns);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionInfo handleSaveInfoClick={handleTransInfoSaveClick} transRef={transitState.transRef} label=\"Transaction Overview\" name=\"TransactionOverview\" />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionParty transRef={transitState.transRef} from={transitState.txn_from} label=\"From Party\" name=\"FromParty\" displayPartyType={TransactionsPartyTypes.FROM} />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionParty transRef={transitState.transRef} to={transitState.txn_to} label=\"To Party\" name=\"ToParty\" displayPartyType={TransactionsPartyTypes.TO} />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionItem transRef={transitState.transRef} label=\"Transaction Item\" name=\"goods_services\"></TransactionItem>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    report: selectReport(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReport: report => dispatch(setReport(report)),\r\n    addReportTransaction: report => dispatch(addTransactionToReport(report))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionTemplate);","import React from 'react';\r\nimport TransactionTable from '../../goaml-tables/table-transaction.component'\r\nimport TransactionTemplate from '../template-transaction/template-transaction.component'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst ReportTransactions = ({ name, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <TransactionTemplate name=\"Add a Transaction\"></TransactionTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <TransactionTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportTransactions;","var endScopeObj = {};\r\nvar optionsObj = {\r\n    rootName: 'name of the root', // defaults to 'root'\r\n    declaration: 'auto' || '<a custom declaration>', // defaults to undefined\r\n    indentation: 'number', // defaults to 0\r\n    doctype: 'auto', // defaults to undefined\r\n    attributes: false || true // defaults to true\r\n}\r\n\r\nexport const obj2xml = function OBJtoXML(obj) {\r\n    var xml = '';\r\n    for (var prop in obj) {\r\n        xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\r\n        if (obj[prop] instanceof Array) {\r\n            for (var array in obj[prop]) {\r\n                xml += \"<\" + prop + \">\";\r\n                xml += OBJtoXML(new Object(obj[prop][array]));\r\n                xml += \"</\" + prop + \">\";\r\n            }\r\n        } else if (typeof obj[prop] == \"object\") {\r\n            xml += OBJtoXML(new Object(obj[prop]));\r\n        } else {\r\n            xml += obj[prop];\r\n        }\r\n        xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\r\n    }\r\n    var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\r\n    return xml\r\n}\r\n\r\nexport const obj2xml_inverse = function (obj, opt) {\r\n    if (!opt) opt = {\r\n        rootName: 'report',\r\n        attributes: false\r\n    };\r\n    var rootName = opt.rootName || 'root';\r\n    var declaration = opt.declaration === 'auto' ? '<?xml version=\"1.0\" encoding=\"utf-8\"?>' : opt.declaration;\r\n    var indentation = opt.indentation || 0;\r\n    var generateDtd = (opt.doctype === 'auto' || opt.doctype === 'generate') && declaration;\r\n    var useAttributes = opt.attributes === false ? false : true;\r\n    var scope_indent = 0;\r\n    if (generateDtd) {\r\n        var dtdAttr = {};\r\n        var dtdElem = {};\r\n    }\r\n    var ret = [];\r\n    var tagContent, isArr, curs, _t, _ti, key, innerKey, name, queue = [obj, rootName];\r\n    while (queue.length > 0) {\r\n        name = queue.pop();\r\n        curs = queue.pop();\r\n        if (generateDtd)\r\n            dtdElem[name] = dtdElem[name] || {};\r\n        if (curs === endScopeObj) {\r\n            scope_indent--;\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('</', name, '>');\r\n            continue;\r\n        }\r\n        if (typeof curs === 'object') {\r\n            queue.push(endScopeObj);\r\n            queue.push(name);\r\n            tagContent = [name];\r\n            isArr = Array.isArray(curs);\r\n            if (isArr && generateDtd) {\r\n                dtdElem[name][name + 'Item*'] = true;\r\n            }\r\n            for (key in curs) {\r\n                if (curs.hasOwnProperty(key)) {\r\n                    if (isArr) {\r\n                        queue.push(curs[key]);\r\n                        queue.push(name + 'Item');\r\n                    } else if (typeof curs[key] == 'object' || useAttributes === false) {\r\n                        queue.push(curs[key]);\r\n                        queue.push(key);\r\n                        if (generateDtd)\r\n                            dtdElem[name][key] = true;\r\n                    } else {\r\n                        if (generateDtd) {\r\n                            dtdAttr[name] = dtdAttr[name] || {};\r\n                            dtdAttr[name][key] = true;\r\n                        }\r\n                        tagContent.push(key + '=' + '\"' + curs[key] + '\"');\r\n                    }\r\n                }\r\n            }\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('<', tagContent.join(' '), '>');\r\n            scope_indent++;\r\n        } else {\r\n            if (generateDtd)\r\n                dtdElem[name]['#PCDATA'] = true;\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('<');\r\n            ret.push(name);\r\n            ret.push('>');\r\n            ret.push(curs);\r\n            ret.push('</');\r\n            ret.push(name);\r\n            ret.push('>');\r\n        }\r\n    }\r\n    if (generateDtd) {\r\n        var dtd = ['<!DOCTYPE ', rootName, ' ['];\r\n        for (key in dtdAttr) {\r\n            if (dtdAttr.hasOwnProperty(key)) {\r\n                for (innerKey in dtdAttr[key]) {\r\n                    if (dtdAttr[key].hasOwnProperty(innerKey)) {\r\n                        if (indentation > 0) dtd.push('\\n');\r\n                        dtd.push('<!ATTLIST ', key, ' ', innerKey, ' CDATA #IMPLIED>');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (key in dtdElem) {\r\n            if (dtdElem.hasOwnProperty(key)) {\r\n                innerKey = null;\r\n                _t = ['<!ELEMENT ', key, ' ('];\r\n                _ti = [];\r\n                for (innerKey in dtdElem[key]) {\r\n                    if (dtdElem[key].hasOwnProperty(innerKey)) {\r\n                        _ti.push(innerKey);\r\n                    }\r\n                }\r\n                if (indentation > 0) dtd.push('\\n');\r\n                if (innerKey === null) // no children\r\n                    dtd.push('<!ELEMENT ', key, ' EMPTY>');\r\n                else {\r\n                    _t.push(_ti.join(', '));\r\n                    _t.push(')>');\r\n                    dtd.push.apply(dtd, _t);\r\n                }\r\n            }\r\n        }\r\n        dtd.push(']>');\r\n        ret.unshift.apply(ret, dtd);\r\n    } else if (declaration)\r\n        ret.unshift(opt.doctype ? opt.doctype : '<!DOCTYPE ' + rootName + '>');\r\n    if (declaration) ret.unshift(declaration);\r\n    return ret.join('');\r\n};\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { selectReport } from '../../redux/report/report.selectors';\r\nimport FormActions from '../form-inputs/form-actions.component';\r\nimport { obj2xml } from './converter-json-xml'\r\nimport {downloadObjectAsXml, downloadXmlAsFile } from './report-downloader'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol\r\n} from '@coreui/react';\r\n\r\nconst ReportGenerator = ({ name, label, reportType }) => {\r\n\r\n    const generateXMLReport = () => {\r\n        const report = \"<report>\" + obj2xml(reportType) + \"</report>\"; \r\n        downloadObjectAsXml(report, \"report\");\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CCard>\r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol className=\"col-sm-12\">\r\n                        <FormActions saveText=\"Generate XML Report\" handleSaveClick={generateXMLReport} handleCancelClick={handleCancelClick}></FormActions>\r\n                    </CCol>\r\n                </CRow>\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReport(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ReportGenerator)","export const downloadObjectAsXml = (exportObj, exportName) => {\r\n    //This will not work without limits, though. You can only download about 1MB of data. \r\n    //For example, var storageObj = []; for (var i=0; i<1000000; ++i) storageObj.push('aaa'); \r\n    //gives \"download Failed - Network error\" in Chrome 61\r\n    \r\n    var dataStr = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(exportObj);\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".xml\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n}\r\n\r\nexport const downloadXmlAsFile = (xmltext, filename) => {\r\n    // This doesn't work in mac firefox and opens the tab with content instead of downloading in mac safari\r\n    var pom = document.createElement('a');\r\n\r\n    var filename = `${filename}.xml`;\r\n    var pom = document.createElement('a');\r\n    var bb = new Blob([xmltext], { type: 'text/plain' });\r\n\r\n    pom.setAttribute('href', window.URL.createObjectURL(bb));\r\n    pom.setAttribute('download', filename);\r\n\r\n    pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\r\n    pom.draggable = true;\r\n    pom.classList.add('dragout');\r\n\r\n    pom.click();\r\n}","import XLSX from 'xlsx';\r\n/* generate an array of column objects */\r\nexport const make_cols = refstr => {\r\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\r\n\treturn o;\r\n};","import React from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CLabel,\r\n    CInputFile,\r\n    CRow,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport FormActions from '../form-inputs/form-actions.component';\r\n\r\nconst GoAmlExcelUpload = ({ id, name, accept, handleChange, handleFile, fileName, ...otherProps }) => {\r\n\r\n    let [collapsed, setCollapsed] = React.useState(true);\r\n    const [showElements] = React.useState(true)\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \");\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup>\r\n                                        <CCol xs=\"12\">\r\n                                            <CInputFile custom\r\n                                                id={id}\r\n                                                className=\"form-control\"\r\n                                                name={name}\r\n                                                accept={accept}\r\n                                                onChange={handleChange} />\r\n                                            <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                                {fileName}</CLabel>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions\r\n                                        saveText=\"Upload Excel File\"\r\n                                        handleSaveClick={handleFile}\r\n                                        handleCancelClick={handleCancelClick}\r\n                                    >\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    )\r\n}\r\n\r\nexport default GoAmlExcelUpload\r\n","import React from 'react';\r\nimport XLSX from 'xlsx';\r\nimport { make_cols } from '../goaml-core/MakeColumns';\r\nimport { SheetJSFT } from '../goaml-core/types';\r\nimport GoAmlExcelUpload from './goaml-excel-upload.components';\r\n\r\nclass GoamlExcelFileReader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fileName: \"Choose file...\",\r\n      file: {},\r\n      data: [],\r\n      cols: []\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files[0]) this.setState({ file: files[0], fileName: files[0].name });\r\n  };\r\n\r\n  handleFile = () => {\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n\r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA: true });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n      /* Update state */\r\n      this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n        console.log(JSON.stringify(this.state.data, null, 2));\r\n      });\r\n    };\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(this.state.file);\r\n    } else {\r\n      reader.readAsArrayBuffer(this.state.file);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props;\r\n    return (\r\n      <GoAmlExcelUpload\r\n        name={name}\r\n        id=\"file\"\r\n        fileName={this.state.fileName}\r\n        accept=\".xls,.xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n        handleChange={this.handleChange}\r\n        handleFile={this.handleFile}></GoAmlExcelUpload>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoamlExcelFileReader;","import React from 'react';\r\nimport ReportType from '../../components/goaml-sections/report-type/report-type.component'\r\nimport ReportPerson from '../../components/goaml-sections/report-person/report-person.component'\r\nimport ReportLocation from '../../components/goaml-sections/report-location/report-location.component'\r\nimport ReportIndicator from '../../components/goaml-sections/report-indicator/report-indicator.component'\r\nimport ReportTransactions from '../../components/goaml-sections/report-transactions/report-transactions.component'\r\nimport ReportGenerator from '../../components/goaml-core/report-generator.component'\r\nimport GoamlExcelFileReader from '../../components/goaml-excel-reader/goaml-excel-reader.components'\r\n\r\nconst GoAmlPage = () => (\r\n    <div>\r\n        <GoamlExcelFileReader name=\"Upload Excel\"></GoamlExcelFileReader>\r\n        <ReportType name=\"Report Type\"></ReportType>\r\n        <ReportPerson></ReportPerson>\r\n        <ReportLocation></ReportLocation>\r\n        <ReportIndicator name=\"Report Indicator\"></ReportIndicator>\r\n        <ReportTransactions name=\"Transaction\" label=\"Report Transaction\"></ReportTransactions>\r\n        <ReportGenerator name=\"Report Generator\" label=\"Generate GoAML Report\"></ReportGenerator>\r\n    </div>\r\n)\r\n\r\nexport default GoAmlPage;"],"sourceRoot":""}