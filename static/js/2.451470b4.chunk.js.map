{"version":3,"sources":["components/form-inputs/form-actions.component.jsx","components/form-inputs/form-dynamic-select.component.jsx","components/form-inputs/form-input.component.jsx","components/goaml-enums/country-code-enum/country-code-enum.component.jsx","components/goaml-tables/combined-table.component.jsx","components/form-inputs/form-textarea-component.jsx","components/form-inputs/form-date.component.jsx","components/goaml-tables/table-phone.component.jsx","redux/template-phone/template-phone.format.js","components/goaml-enums/communication-type-enum/communication-type-enum.component.jsx","components/goaml-sections/template-phone/template-phone.components.jsx","components/goaml-sections/wrapper-phones/wrapper-phones.components.jsx","components/goaml-tables/table-address.component.jsx","redux/template-address/template-address.format.js","components/goaml-sections/template-address/template-address.components.jsx","components/goaml-sections/wrapper-addresses/wrapper-addresses.component.jsx","components/form-inputs/form-gender-select.component.jsx","components/goaml-enums/contact-type-enum/contact-type-enum.component.jsx","components/goaml-tables/table-identity.component.jsx","redux/template-identification/template-identification.format.js","components/goaml-enums/identifier-type-enum/identifier-type-enum.component.jsx","components/goaml-sections/template-identification/template-identification.components.jsx","components/goaml-sections/wrapper-identifications/wrapper-identifications.component.jsx"],"names":["FormActions","saveText","handleCancelClick","handleSaveClick","className","color","onClick","FormDynamicSelect","options","label","name","handleChange","htmlFor","length","custom","id","onChange","map","option","value","description","FormInput","placeholder","type","otherProps","required","CountryCodeEnum","props","state","this","React","Component","CombinedTable","fields","tableData","deleteItem","useState","collapsed","setCollapsed","show","timeout","items","hover","striped","bordered","size","itemsPerPage","pagination","FormTextArea","rows","FormDate","PhoneTable","itemArray","console","log","t_phone","CommunicationTypeEnum","PhoneTemplate","handlePhoneSave","showElements","touched","setTouched","onFocus","onBlur","templatePhone","setComponentState","isEmpty","showError","setShowError","checkInputs","e","inputState","error","val","Object","entries","key","target","event","xs","in","unmountOnExit","row","tph_contact_type","onKeyUp","tph_number","tph_communication_type","tph_extension","tph_country_prefix","comments","alert","WrapperPhones","handlePhoneDelete","tab1Title","tab2Title","activeTab","variant","data-tab","AddressTable","title","first_name","last_name","alias","ssn","t_address","TemplateAddress","handleAddressSave","templateAddress","address_type","city","country_code","address","town","zip","WrapperAddresses","handleAddressDelete","FormGenderSelect","index","ContactTypeEnum","IdentificationTable","t_person_identification","IdentifierTypeEnum","IdentificationTemplate","handleIdentificationSave","templateIdentification","issued_by","number","issue_country","issue_date","expiry_date","WrapperIdentifications","handleIdentificationDelete"],"mappings":"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","file":"static/js/2.451470b4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst FormActions = ({saveText, handleCancelClick, handleSaveClick}) => {\r\n\r\n    return (\r\n        <div className=\"form-actions\">\r\n            <CButton color=\"primary\" onClick={handleSaveClick}>{ !saveText ? \"Save changes\": saveText }</CButton>\r\n            <CButton color=\"secondary\" className=\"btn-cancel-form-actions\" onClick={handleCancelClick}>Cancel</CButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormActions;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect  } from '@coreui/react'\r\n\r\nconst FormDynamicSelect = ({ options, label, name, handleChange }) => (\r\n  <CFormGroup>\r\n      {label ? (\r\n          <CLabel htmlFor={name}>{label}</CLabel>\r\n          ) : null}\r\n      {options && options.length > 0 && (\r\n          <CSelect custom name={name} id={name} onChange={handleChange}>\r\n              {options.map((option) => {\r\n                  return <option value={option.value}>{option.description}</option>;\r\n              })}\r\n          </CSelect>\r\n      )}\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDynamicSelect;","import {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\n\r\nconst FormInput = ({ label, name, placeholder, type, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput id={name} name={name} type={type} onChange={handleChange} {...otherProps} placeholder={placeholder} required=\"required\" />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component';\r\n\r\nclass CountryCodeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {description: \"Select\"},\r\n                {value: 'AD', description:'ANDORRA '},\r\n                {value: 'AE', description:'UNITED ARAB EMIRATES'},\r\n                {value: 'AF', description:'AFGHANISTAN '},\r\n                {value: 'AG', description:'ANTIGUA AND BARBUDA '},\r\n                {value: 'AI', description:'ANGUILLA '},\r\n                {value: 'AL', description:' ALBANIA '},\r\n                {value: 'AM', description:'ARMENIA '},\r\n                {value: 'AN', description:'NETHERLANDS ANTILLES '},\r\n                {value: 'AO', description:'ANGOLA '},\r\n                {value: 'AQ', description:'ANTARCTICA '},\r\n                {value: 'AR', description:'ARGENTINA '},\r\n                {value: 'AS', description:'AMERICAN SAMOA '},\r\n                {value: 'AT', description:'AUSTRIA '},\r\n                {value: 'AU', description:'AUSTRALIA '},\r\n                {value: 'AW', description:'ARUBA '},\r\n                {value: 'AX', description:'ÅLAND ISLANDS '},\r\n                {value: 'AZ', description:'AZERBAIJAN '},\r\n                {value: 'BA', description:'BOSNIA AND HERZEGOVINA '},\r\n                {value: 'BB', description:'BARBADOS '},\r\n                {value: 'BD', description:'BANGLADESH '},\r\n                {value: 'BE', description:'BELGIUM '},\r\n                {value: 'BF', description:'BURKINA FASO '},\r\n                {value: 'BG', description:'BULGARIA '},\r\n                {value: 'BH', description:'BAHRAIN '},\r\n                {value: 'BI', description:'BURUNDI '},\r\n                {value: 'BJ', description:'BENIN '},\r\n                {value: 'BM', description:'BERMUDA '},\r\n                {value: 'BN', description:'BRUNEI DARUSSALAM'},\r\n                {value: 'BO', description:'BOLIVIA '},\r\n                {value: 'BR', description:'BRAZIL '},\r\n                {value: 'BS', description:'BAHAMAS '},\r\n                {value: 'BT', description:'BHUTAN '},\r\n                {value: 'BU', description:'BURMA'},\r\n                {value: 'BV', description:'BOUVET ISLAND '},\r\n                {value: 'BW', description:'BOTSWANA '},\r\n                {value: 'BY', description:'BELARUS'},\r\n                {value: 'BZ', description:'BELIZE '},\r\n                {value: 'CA', description:'CANADA '},\r\n                {value: 'CC', description:'COCOS (KEELING) ISLANDS'},\r\n                {value: 'CD', description:'CONGO, THE DEMOCRATIC REPUBLIC OF THE'},\r\n                {value: 'CF', description:'CENTRAL AFRICAN REPUBLIC '},\r\n                {value: 'CG', description:'CONGO '},\r\n                {value: 'CH', description:'SWITZERLAND '},\r\n                {value: 'CI', description:'COTE DIVOIRE'},\r\n                {value: 'CK', description:'COOK ISLANDS '},\r\n                {value: 'CL', description:'CHILE '},\r\n                {value: 'CM', description:'CAMEROON '},\r\n                {value: 'CN', description:'CHINA '},\r\n                {value: 'CO', description:'COLOMBIA '},\r\n                {value: 'CR', description:'COSTA RICA '},\r\n                {value: 'CS', description:'SERBIA AND MONTENEGRO'},\r\n                {value: 'CU', description:'CUBA '},\r\n                {value: 'CV', description:'CAPE VERDE '},\r\n                {value: 'CX', description:'CHRISTMAS ISLAND '},\r\n                {value: 'CY', description:'CYPRUS '},\r\n                {value: 'CZ', description:'CZECH REPUBLIC '},\r\n                {value: 'DE', description:'GERMANY '},\r\n                {value: 'DJ', description:'DJIBOUTI '},\r\n                {value: 'DK', description:'DENMARK '},\r\n                {value: 'DM', description:'DOMINICA '},\r\n                {value: 'DO', description:'DOMINICAN REPUBLIC '},\r\n                {value: 'DZ', description:'ALGERIA '},\r\n                {value: 'EC', description:'ECUADOR '},\r\n                {value: 'EE', description:'ESTONIA '},\r\n                {value: 'EG', description:'EGYPT '},\r\n                {value: 'EH', description:'WESTERN SAHARA '},\r\n                {value: 'ER', description:'ERITREA '},\r\n                {value: 'ES', description:'SPAIN '},\r\n                {value: 'ET', description:'ETHIOPIA '},\r\n                {value: 'FI', description:'FINLAND '},\r\n                {value: 'FJ', description:'FIJI '},\r\n                {value: 'FK', description:'FALKLAND ISLANDS (MALVINAS)'},\r\n                {value: 'FM', description:'MICRONESIA, FEDERATED STATES OF'},\r\n                {value: 'FO', description:'FAROE ISLANDS '},\r\n                {value: 'FR', description:'FRANCE '},\r\n                {value: 'GA', description:'GABON '},\r\n                {value: 'GB', description:'UNITED KINGDOM '},\r\n                {value: 'GD', description:'GRENADA '},\r\n                {value: 'GE', description:'GEORGIA '},\r\n                {value: 'GF', description:'FRENCH GUIANA '},\r\n                {value: 'GG', description:'GUERNSEY '},\r\n                {value: 'GH', description:'GHANA '},\r\n                {value: 'GI', description:'GIBRALTAR '},\r\n                {value: 'GL', description:'GREENLAND '},\r\n                {value: 'GM', description:'GAMBIA '},\r\n                {value: 'GN', description:'GUINEA '},\r\n                {value: 'GP', description:'GUADELOUPE'},\r\n                {value: 'GQ', description:'EQUATORIAL GUINEA'},\r\n                {value: 'GR', description:'GREECE '},\r\n                {value: 'GS', description:'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS'},\r\n                {value: 'GT', description:'GUATEMALA '},\r\n                {value: 'GU', description:'GUAM '},\r\n                {value: 'GW', description:'GUINEA-BISSAU '},\r\n                {value: 'GY', description:'GUYANA '},\r\n                {value: 'HK', description:'HONG KONG '},\r\n                {value: 'HM', description:'HEARD ISLAND AND MCDONALD ISLANDS'},\r\n                {value: 'HN', description:'HONDURAS '},\r\n                {value: 'HR', description:'CROATIA '},\r\n                {value: 'HT', description:'HAITI '},\r\n                {value: 'HU', description:'HUNGARY '},\r\n                {value: 'ID', description:'INDONESIA '},\r\n                {value: 'IE', description:'IRELAND '},\r\n                {value: 'IL', description:'ISRAEL '},\r\n                {value: 'IM', description:'ISLE OF MAN'},\r\n                {value: 'IN', description:'INDIA '},\r\n                {value: 'IO', description:'BRITISH INDIAN OCEAN TERRITORY '},\r\n                {value: 'IQ', description:'IRAQ '},\r\n                {value: 'IR', description:'IRAN, ISLAMIC REPUBLIC OF'},\r\n                {value: 'IS', description:'ICELAND '},\r\n                {value: 'IT', description:'ITALY '},\r\n                {value: 'JE', description:'JERSEY '},\r\n                {value: 'JM', description:'JAMAICA '},\r\n                {value: 'JO', description:'JORDAN '},\r\n                {value: 'JP', description:'JAPAN '},\r\n                {value: 'KE', description:'KENYA '},\r\n                {value: 'KG', description:'KYRGYZSTAN '},\r\n                {value: 'KH', description:'CAMBODIA '},\r\n                {value: 'KI', description:'KIRIBATI '},\r\n                {value: 'KM', description:'COMOROS '},\r\n                {value: 'KN', description:'SAINT KITTS AND NEVIS '},\r\n                {value: 'KP', description:'KOREA, DEMOCRATIC PEOPLES REPUBLIC OF'},\r\n                {value: 'KR', description:'KOREA, REPUBLIC OF'},\r\n                {value: 'KS', description:'KOSOVO'},\r\n                {value: 'KW', description:'KUWAIT '},\r\n                {value: 'KY', description:'CAYMAN ISLANDS '},\r\n                {value: 'KZ', description:'KAZAKHSTAN '},\r\n                {value: 'LA', description:'LAO PEOPLES DEMOCRATIC REPUBLIC'},\r\n                {value: 'LB', description:'LEBANON '},\r\n                {value: 'LC', description:'SAINT LUCIA '},\r\n                {value: 'LI', description:'LIECHTENSTEIN '},\r\n                {value: 'LK', description:'SRI LANKA '},\r\n                {value: 'LR', description:'LIBERIA '},\r\n                {value: 'LS', description:'LESOTHO '},\r\n                {value: 'LT', description:'LITHUANIA '},\r\n                {value: 'LU', description:'LUXEMBOURG '},\r\n                {value: 'LV', description:' LATVIA '},\r\n                {value: 'LY', description:'LIBYAN ARAB JAMAHIRIYA'},\r\n                {value: 'MA', description:'MOROCCO'},\r\n                {value: 'MC', description:'MONACO '},\r\n                {value: 'MD', description:'MOLDOVA, REPUBLIC OF'},\r\n                {value: 'ME', description:'MONTENEGRO '},\r\n                {value: 'MG', description:'MADAGASCAR '},\r\n                {value: 'MH', description:'MARSHALL ISLANDS '},\r\n                {value: 'MK', description:'MACEDONIA '},\r\n                {value: 'ML', description:'MALI '},\r\n                {value: 'MM', description:'MYANMAR '},\r\n                {value: 'MN', description:'MONGOLIA '},\r\n                {value: 'MO', description:'MACAO '},\r\n                {value: 'MP', description:'NORTHERN MARIANA ISLANDS '},\r\n                {value: 'MQ', description:'MARTINIQUE '},\r\n                {value: 'MR', description:'MAURITANIA '},\r\n                {value: 'MS', description:'MONTSERRAT '},\r\n                {value: 'MT', description:'MALTA '},\r\n                {value: 'MU', description:'MAURITIUS '},\r\n                {value: 'MV', description:'MALDIVES '},\r\n                {value: 'MW', description:'MALAWI '},\r\n                {value: 'MX', description:'MEXICO '},\r\n                {value: 'MY', description:'MALAYSIA '},\r\n                {value: 'MZ', description:'MOZAMBIQUE '},\r\n                {value: 'NA', description:'NAMIBIA '},\r\n                {value: 'NC', description:'NEW CALEDONIA '},\r\n                {value: 'NE', description:'NIGER '},\r\n                {value: 'NF', description:'NORFOLK ISLAND '},\r\n                {value: 'NG', description:'NIGERIA '},\r\n                {value: 'NI', description:'NICARAGUA '},\r\n                {value: 'NL', description:'NETHERLANDS '},\r\n                {value: 'NO', description:'NORWAY '},\r\n                {value: 'NP', description:'NEPAL '},\r\n                {value: 'NR', description:'NAURU '},\r\n                {value: 'NU', description:'NIUE '},\r\n                {value: 'NZ', description:'NEW ZEALAND '},\r\n                {value: 'OM', description:' OMAN '},\r\n                {value: 'PA', description:'PANAMA '},\r\n                {value: 'PE', description:'PERU '},\r\n                {value: 'PF', description:'FRENCH POLYNESIA '},\r\n                {value: 'PG', description:'PAPUA NEW GUINEA'},\r\n                {value: 'PH', description:'PHILIPPINES '},\r\n                {value: 'PK', description:'PAKISTAN '},\r\n                {value: 'PL', description:'POLAND '},\r\n                {value: 'PM', description:'SAINT PIERRE AND MIQUELON '},\r\n                {value: 'PN', description:'PITCAIRN'},\r\n                {value: 'PR', description:'PUERTO RICO '},\r\n                {value: 'PS', description:'PALESTINIAN TERRITORY, OCCUPIED'},\r\n                {value: 'PT', description:'PORTUGAL '},\r\n                {value: 'PW', description:'PALAU '},\r\n                {value: 'PY', description:'PARAGUAY '},\r\n                {value: 'QA', description:'QATAR '},\r\n                {value: 'RE', description:'REUNION '},\r\n                {value: 'RO', description:'ROMANIA'},\r\n                {value: 'RS', description:'SERBIA '},\r\n                {value: 'RU', description:'RUSSIAN FEDERATION '},\r\n                {value: 'RW', description:'RWANDA '},\r\n                {value: 'SA', description:'SAUDI ARABIA '},\r\n                {value: 'SB', description:'SOLOMON ISLANDS '},\r\n                {value: 'SC', description:'SEYCHELLES '},\r\n                {value: 'SD', description:'SUDAN '},\r\n                {value: 'SE', description:'SWEDEN '},\r\n                {value: 'SG', description:'SINGAPORE '},\r\n                {value: 'SH', description:'SAINT HELENA '},\r\n                {value: 'SI', description:'SLOVENIA '},\r\n                {value: 'SJ', description:'SVALBARD AND JAN MAYEN'},\r\n                {value: 'SK', description:'SLOVAKIA '},\r\n                {value: 'SL', description:'SIERRA LEONE'},\r\n                {value: 'SM', description:'SAN MARINO '},\r\n                {value: 'SN', description:'SENEGAL '},\r\n                {value: 'SO', description:'SOMALIA '},\r\n                {value: 'SR', description:'SURINAME '},\r\n                {value: 'ST', description:'SAO TOME AND PRINCIPE '},\r\n                {value: 'SV', description:'EL SALVADOR '},\r\n                {value: 'SY', description:'SYRIAN ARAB REPUBLIC '},\r\n                {value: 'SZ', description:'SWAZILAND '},\r\n                {value: 'TC', description:'TURKS AND CAICOS ISLANDS '},\r\n                {value: 'TD', description:'CHAD '},\r\n                {value: 'TF', description:'FRENCH SOUTHERN TERRITORIES'},\r\n                {value: 'TG', description:'TOGO '},\r\n                {value: 'TH', description:'THAILAND '},\r\n                {value: 'TJ', description:'TAJIKISTAN '},\r\n                {value: 'TK', description:'TOKELAU'},\r\n                {value: 'TL', description:'TIMOR-LESTE'},\r\n                {value: 'TM', description:'TURKMENISTAN '},\r\n                {value: 'TN', description:'TUNISIA '},\r\n                {value: 'TO', description:'TONGA '},\r\n                {value: 'TP', description:'EAST TIMOR'},\r\n                {value: 'TR', description:'TURKEY '},\r\n                {value: 'TT', description:'TRINIDAD AND TOBAGO '},\r\n                {value: 'TV', description:'TUVALU '},\r\n                {value: 'TW', description:'TAIWAN, PROVINCE OF CHINA'},\r\n                {value: 'TZ', description:'TANZANIA, UNITED REPUBLIC OF'},\r\n                {value: 'UA', description:'UKRAINE '},\r\n                {value: 'UG', description:'UGANDA '},\r\n                {value: 'UM', description:'UNITED STATES MINOR OUTLYING ISLANDS'},\r\n                {value: 'US', description:'UNITED STATES'},\r\n                {value: 'UY', description:'URUGUAY '},\r\n                {value: 'UZ', description:'UZBEKISTAN '},\r\n                {value: 'VA', description:'HOLY SEE (VATICAN CITY STATE)'},\r\n                {value: 'VC', description:'SAINT VINCENT AND THE GRENADINES'},\r\n                {value: 'VE', description:'VENEZUELA '},\r\n                {value: 'VG', description:'VIRGIN ISLANDS, BRITISH'},\r\n                {value: 'VI', description:'VIRGIN ISLANDS, U.S. '},\r\n                {value: 'VN', description:'VIET NAM'},\r\n                {value: 'VU', description:'VANUATU '},\r\n                {value: 'WF', description:'WALLIS AND FUTUNA'},\r\n                {value: 'WS', description:'SAMOA '},\r\n                {value: 'YE', description:'YEMEN '},\r\n                {value: 'YT', description:'MAYOTTE '},\r\n                {value: 'YU', description:'YUGOSLAVIA'},\r\n                {value: 'ZA', description:'SOUTH AFRICA '},\r\n                {value: 'ZM', description:'ZAMBIA '},\r\n                {value: 'ZR', description:'ZAIRE'},\r\n                {value: 'ZW', description:'ZIMBABWE'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CountryCodeEnum;","import CIcon from '@coreui/icons-react'\r\nimport {\r\n  CBadge, CButton,\r\n\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CCollapse,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport React from 'react'\r\n\r\nconst CombinedTable = ({name, fields, deleteItem, tableData, ...otherProps}) => {\r\n\r\n  let [collapsed, setCollapsed] = React.useState(false);\r\n\r\n  const deleteRow = (rowIndex) =>{\r\n    deleteItem(rowIndex);\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  {name}\r\n                  <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                </CCardHeader>\r\n                <CCollapse show={collapsed} timeout={1000}>\r\n                  <CCardBody>\r\n                    <CDataTable\r\n                    items={tableData}\r\n                    fields={fields}\r\n                    hover\r\n                    striped\r\n                    bordered\r\n                    size=\"sm\"\r\n                    itemsPerPage={10}\r\n                    pagination\r\n                    /* scopedSlots = {{\r\n                        'status':\r\n                        (item)=>(\r\n                            <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                                {item.status}\r\n                            </CBadge>\r\n                            </td>\r\n                        )\r\n                    }} */\r\n                    />\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CombinedTable\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CTextarea,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormTextArea = ({ label, name, rows, placeholder, handleChange }) => (\r\n    <CFormGroup>\r\n        {label ? (\r\n            <CLabel htmlFor={name}>{label}</CLabel>\r\n        ) : null}\r\n        <CTextarea \r\n            name={name} \r\n            id={name} \r\n            rows={rows}\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    </CFormGroup>\r\n  );\r\n\r\nexport default FormTextArea;\r\n","import {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\n\r\nconst FormDate = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput type=\"datetime\" id={name} name={name} onChange={handleChange} {...otherProps} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDate;\r\n","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\n\r\nconst PhoneTable = ({itemArray, deleteItem, ...otherProps}) => {\r\n    const fields = ['tph_number', 'tph_communication_type', 'tph_contact_type', 'tph_country_prefix', 'tph_extension', 'comments'];\r\n    var tableData =[];\r\n\r\n    if(itemArray){\r\n        console.log(\"itemPhone: \", itemArray);\r\n        tableData = itemArray;\r\n    }\r\n\r\n    return(\r\n        <CombinedTable name=\"Phone Table\" fields={fields} tableData={tableData} deleteItem={deleteItem} />\r\n    )\r\n}\r\n\r\nexport default PhoneTable;","var t_phone = {\r\n  \"tph_contact_type\": 0,\r\n  \"tph_communication_type\": 0,\r\n  \"tph_country_prefix\": '',\r\n  \"tph_number\": '',\r\n  \"tph_extension\": '',\r\n  \"comments\": ''\r\n  }\r\n\r\nexport default t_phone;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component';\r\n\r\nclass CommunicationTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {description: 'select'},\r\n                {value: 'F', description:'Fax'},\r\n                {value: 'L', description:'Landline Phone'},\r\n                {value: 'M', description:'Mobile Phone'},\r\n                {value: 'S', description:'Satellite Phone'},\r\n                {value: 'P', description:'Pager'},\r\n                {value: 'O', description:'Others'},\r\n                {value: 'E', description:'Email'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CommunicationTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport t_phone from 'src/redux/template-phone/template-phone.format';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CommunicationTypeEnum from '../../goaml-enums/communication-type-enum/communication-type-enum.component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\n\r\nconst PhoneTemplate = ({ name, handlePhoneSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const [templatePhone, setComponentState] = React.useState(t_phone);\r\n\r\n      const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n      const checkInputs = (e, inputState) => {\r\n          let error = false;\r\n          let val = {};\r\n          let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n          setShowError({\r\n              isEmpty: error,\r\n              value: val\r\n           });\r\n      }\r\n\r\n      console.log('error', showError)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templatePhone.tph_communication_type || !templatePhone.tph_contact_type || !templatePhone.tph_country_prefix || !templatePhone.tph_extension || !templatePhone.tph_number) {\r\n            alert('please fill this fileld')\r\n        }\r\n        console.log(\"templatePhone: \", templatePhone);\r\n        handlePhoneSave(templatePhone);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templatePhone, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templatePhone);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum\r\n                                        label=\"Contact Type*\"\r\n                                        name=\"tph_contact_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_contact_type}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        className={`form-control ${!templatePhone.tph_contact_type && touched && 'is-invalid'} ${templatePhone.tph_contact_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Number*\"\r\n                                        name=\"tph_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_number}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_number && touched && 'is-invalid'} ${templatePhone.tph_number && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <CommunicationTypeEnum\r\n                                        label=\"Comm. Type*\"\r\n                                        name=\"tph_communication_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_communication_type}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_communication_type && touched && 'is-invalid'} ${templatePhone.tph_communication_type && 'is-valid'}`}\r\n                                    ></CommunicationTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Extension\"\r\n                                        name=\"tph_extension\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_extension}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_extension && touched && 'is-invalid'} ${templatePhone.tph_extension && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Country Prefix*\"\r\n                                        name=\"tph_country_prefix\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePhone.tph_country_prefix}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.tph_country_prefix && touched && 'is-invalid'} ${templatePhone.tph_country_prefix && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea\r\n                                        label=\"Comments\"\r\n                                        name=\"comments\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, templatePhone)}\r\n                                        value={templatePhone.comments}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePhone.comments && touched && 'is-invalid'} ${templatePhone.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Phone\"\r\n                                handleSaveClick={handleSaveClick}\r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default PhoneTemplate;","import React from 'react';\r\nimport PhoneTable from '../../goaml-tables/table-phone.component'\r\nimport PhoneTemplate from '../template-phone/template-phone.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n  \r\n  const WrapperPhones = ({ name, value, handlePhoneDelete, handlePhoneSave, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTemplate name=\"Add a Phone\" handlePhoneSave={handlePhoneSave} ></PhoneTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTable itemArray={value} deleteItem={handlePhoneDelete} name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default WrapperPhones;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\n\r\nconst AddressTable = ({itemArray, deleteItem, ...otherProps}) => {\r\n    \r\n    console.log(\"itemArray: \", itemArray);\r\n    \r\n    itemArray = [\r\n        {\r\n            id: 1, title: \"Mr\", first_name: \"John\", last_name: \"Doe\", alias: \"Big Boy\", ssn: 123\r\n        }\r\n    ]\r\n    const fields = ['id', 'title','first_name', 'last_name', 'alias', 'ssn']\r\n\r\n    return(\r\n        <CombinedTable name=\"Address Table\" fields={fields} tableData={itemArray} />\r\n    )\r\n}\r\n\r\nexport default AddressTable;","var t_address = {\r\n    \"address_type\": 0,\r\n    \"address\": null,\r\n    \"town\": null,\r\n    \"city\": null,\r\n    \"zip\": null,\r\n    \"country_code\": 0,\r\n    \"state\": null,\r\n    \"comments\": null\r\n}\r\n\r\nexport default t_address;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport t_address from 'src/redux/template-address/template-address.format';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\n\r\nconst TemplateAddress = ({ name, handleAddressSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateAddress, setComponentState] = React.useState(t_address);\r\n\r\n      const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation = templateAddress;\r\n        if (typeof myValidation === 'string'|| 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                } \r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templateAddress.address_type || templateAddress.city || !templateAddress.country_code || !templateAddress.address || !templateAddress.state ||\r\n            !templateAddress.town || !templateAddress.zip) {\r\n            alert('please fill this field')\r\n        }\r\n        console.log({templateAddress});\r\n        handleAddressSave(templateAddress);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateAddress, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateAddress);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"address_type\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address_type} \r\n                                        onKeyUp={(e) => checkInputs(e, templateAddress)} \r\n                                        className={`form-control ${!templateAddress.address_type && touched && 'is-invalid'} ${templateAddress.address_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"City*\" \r\n                                        name=\"city\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.city}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        className={`form-control ${!templateAddress.city && touched && 'is-invalid'} ${templateAddress.city && 'is-valid'}`}\r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Nationality1\"\r\n                                        name=\"country_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.country_code}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        className={`form-control ${!templateAddress.country_code && touched && 'is-invalid'} ${templateAddress.country_code && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Address*\" \r\n                                        name=\"address\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress \r\n                                        className={`form-control ${!templateAddress.address && touched && 'is-invalid'} ${templateAddress.address && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Province/State\" \r\n                                        name=\"state\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.state} \r\n                                        className={`form-control ${!templateAddress.state && touched && 'is-invalid'} ${templateAddress.state && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Town\" \r\n                                        name=\"town\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.town} \r\n                                        className={`form-control ${!templateAddress.town && touched && 'is-invalid'} ${templateAddress.town && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Postal/Zip\" \r\n                                        name=\"zip\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.zip} \r\n                                        className={`form-control ${!templateAddress.zip && touched && 'is-invalid'} ${templateAddress.zip && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        onKeyUp={(e) => checkInputs(e, )} templateAddress\r\n                                        value={templateAddress.comments} \r\n                                        className={`form-control ${!templateAddress.comments && touched && 'is-invalid'} ${templateAddress.comments && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Address\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TemplateAddress;","import React from 'react';\r\nimport AddressTable from '../../goaml-tables/table-address.component'\r\nimport AddressTemplate from '../template-address/template-address.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n} from '@coreui/react'\r\n\r\nconst WrapperAddresses = ({ name, label, value, handleAddressDelete, handleAddressSave, ...otherProps }) => {\r\n\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab1\">\r\n                                        {tab1Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab2\">\r\n                                        {tab2Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTemplate name=\"Add an Address\" handleAddressSave={handleAddressSave}></AddressTemplate>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTable itemArray={value} deleteItem={handleAddressDelete} name={name} />\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default WrapperAddresses;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect\r\n  } from '@coreui/react'\r\n  \r\nclass FormGenderSelect extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n  \r\n    render() {\r\n      const { label, name, handleChange, ...otherProps } = this.props;\r\n      const options = [\r\n        {value:\"0\", description: \"--select--\"},\r\n        {value:\"M\", description: \"Male\"},\r\n        {value:\"F\", description: \"Female\"}\r\n      ];\r\n\r\n      return (\r\n        <CFormGroup>\r\n            {label ? (\r\n                <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n            {options && options.length > 0 && (\r\n                <CSelect custom name={name} id={name} onChange={handleChange}>\r\n                    {options.map((option, index) => {\r\n                        return <option value={option.value}>{option.description}</option>;\r\n                    })}\r\n                </CSelect>\r\n            )}\r\n        </CFormGroup>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FormGenderSelect;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ContactTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'B', description:'Business'},\r\n                {value: 'P', description:'Private'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactTypeEnum;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\n\r\nconst IdentificationTable = ({itemArray, deleteItem, ...otherProps}) => {\r\n    console.log(\"itemArray: \", itemArray);\r\n    itemArray = [\r\n        {\r\n            id: 1, title: \"Mr\", first_name: \"John\", last_name: \"Doe\", alias: \"Big Boy\", ssn: 123\r\n        }\r\n    ]\r\n    const fields = ['id', 'title','first_name', 'last_name', 'alias', 'ssn']\r\n\r\n    return(\r\n        <CombinedTable name=\"Identification's Table\" fields={fields} tableData={itemArray} />\r\n    )\r\n}\r\n\r\nexport default IdentificationTable;","var t_person_identification = {\r\n  \"type\": 0,\r\n  \"number\": '',\r\n  \"issue_date\": '',\r\n  \"expiry_date\": '',\r\n  \"issue_dateSpecified\": false,\r\n  \"expiry_dateSpecified\": false,\r\n  \"issued_by\": '',\r\n  \"issue_country\": '',\r\n  \"comments\": ''\r\n  }\r\n  \r\nexport default t_person_identification;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component';\r\n\r\nclass IdentifierTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {description:'select'},\r\n                {value: 'N', description:'Agent Identification'},\r\n                {value: 'A', description:'Drivers license'},\r\n                {value: 'B', description:'National Identity Card'},\r\n                {value: 'C', description:'Passport'},\r\n                {value: 'E', description:'Voter’s Registration Card'},\r\n                {value: 'R', description:'RC No'},\r\n                {value: 'O', description:'3rd Party ID'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IdentifierTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport t_person_identification from 'src/redux/template-identification/template-identification.format';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport IdentifierTypeEnum from '../../goaml-enums/identifier-type-enum/identifier-type-enum.component';\r\n\r\nconst IdentificationTemplate = ({ name, handleIdentificationSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateIdentification, setComponentState] = React.useState(t_person_identification);\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const handleSaveClick = () => {\r\n        if (!templateIdentification.type || !templateIdentification.number || !templateIdentification.issue_date || !templateIdentification.expiry_date ||\r\n            !templateIdentification.issue_country || !templateIdentification.expiry_date) {\r\n            alert('please fill this field');\r\n        }\r\n        console.log(\"templateIdentification: \", templateIdentification);\r\n        handleIdentificationSave(templateIdentification);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateIdentification, [name]: value });\r\n    };\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        let myValidation;\r\n        if (typeof myValidation === 'string' || 'integer' || 'boolean'){\r\n            for (const [key, value] of Object.entries(inputState)) {\r\n                if (e.target.name === key) {\r\n                    value === null ? error = true : error = false; \r\n                    val = key;\r\n                }\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateIdentification);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <IdentifierTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"type\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.type} \r\n                                        className={`form-control ${!templateIdentification.type && touched && 'is-invalid'}${templateIdentification.type && 'is-valid'}`}\r\n                                    ></IdentifierTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"Issued by\" \r\n                                        name=\"issued_by\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issued_by} \r\n                                        className={`form-control ${!templateIdentification.issued_by && touched && 'is-invalid'}${templateIdentification.issued_by && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Number*\" \r\n                                        name=\"number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.number} \r\n                                        className={`form-control ${!templateIdentification.number && touched && 'is-invalid'}${templateIdentification.number && 'is-valid'}`}  \r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Issue Country*\" \r\n                                        name=\"issue_country\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issue_country} \r\n                                        className={`form-control ${!templateIdentification.issue_country && touched && 'is-invalid'}${templateIdentification.issue_country && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormDate \r\n                                        type=\"date\"\r\n                                        label=\"Issue Date\" \r\n                                        name=\"issue_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.issue_date} \r\n                                        className={`form-control ${!templateIdentification.issue_date && touched && 'is-invalid'}${templateIdentification.issue_date && 'is-valid'}`} \r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Expiry Date\" \r\n                                        name=\"expiry_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.expiry_date} \r\n                                        className={`form-control ${!templateIdentification.expiry_date && touched && 'is-invalid'}${templateIdentification.expiry_date && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, templateIdentification)}\r\n                                        value={templateIdentification.comments} \r\n                                        className={`form-control ${!templateIdentification.comments && touched && 'is-invalid'}${templateIdentification.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Identification\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default IdentificationTemplate;","import React from 'react';\r\nimport IdentificationTable from '../../goaml-tables/table-identity.component'\r\nimport IdentificationTemplate from '../template-identification/template-identification.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst WrapperIdentifications = ({ name, label, value, handleIdentificationDelete, handleIdentificationSave, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTemplate name=\"Add Identification Document\" handleIdentificationSave={handleIdentificationSave}></IdentificationTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTable itemArray={value} deleteItem={handleIdentificationDelete} name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default WrapperIdentifications;"],"sourceRoot":""}