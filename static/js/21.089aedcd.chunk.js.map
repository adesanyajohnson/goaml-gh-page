{"version":3,"sources":["views/users/UsersData.js","redux/goaml-utils/goaml-utils.js","redux/report-type/report-type.actions.js","redux/report-type/report-type.selectors.js","components/form-inputs/form-actions.component.jsx","components/form-inputs/form-date.component.jsx","components/form-inputs/form-input.component.jsx","components/form-inputs/form-textarea-component.jsx","components/form-inputs/form-react-select.component.jsx","components/goaml-enums/report-code-enum/report-code-enum.component.jsx","components/goaml-sections/report-type/report-type.component.jsx","components/goaml-tables/combined-table.component.jsx","components/goaml-sections/report-person/report-person.component.jsx","components/goaml-sections/report-location/report-location.component.jsx","components/goaml-sections/report-indicator/report-indicator.component.jsx","components/goaml-tables/table-transaction.component.jsx","components/form-inputs/form-amount.component.jsx","components/form-inputs/form-radio-text.component.jsx","components/form-inputs/form-dynamic-select.component.jsx","components/goaml-enums/conduction-type-enum/conduction-type-enum.component.jsx","components/goaml-sections/transaction-info/transaction-info.components.jsx","components/goaml-enums/currencies-enum/currencies-enum.component.jsx","components/goaml-enums/transaction-item-status-enum/transaction-item-status-enum.component.jsx","components/goaml-enums/transaction-item-type-enum/transaction-item-type-enum.component.jsx","components/goaml-sections/transaction-item/transaction-item.components.jsx","components/goaml-enums/country-code-enum/country-code-enum.component.jsx","components/goaml-enums/funds-type-enum/funds-type-enum.component.jsx","components/goaml-enums/party-type-enum/party-type-enum.components.jsx","components/goaml-sections/transaction-party-info/transaction-to-party-info.component.jsx","components/goaml-tables/table-person.component.jsx","components/form-inputs/form-email.component.jsx","components/form-inputs/form-gender-select.component.jsx","components/goaml-tables/table-address.component.jsx","components/goaml-enums/contact-type-enum/contact-type-enum.component.jsx","components/goaml-sections/template-address/template-address.components.jsx","components/goaml-sections/report-addresses/report-addresses.component.jsx","components/goaml-tables/table-identity.component.jsx","components/goaml-enums/identifier-type-enum/identifier-type-enum.component.jsx","components/goaml-sections/template-identification/template-identification.components.jsx","components/goaml-sections/report-identifications/report-identifications.component.jsx","components/goaml-tables/table-phone.component.jsx","components/goaml-enums/communication-type-enum/communication-type-enum.component.jsx","components/goaml-sections/template-phone/template-phone.components.jsx","components/goaml-sections/report-phones/report-phones.components.jsx","components/goaml-sections/template-person/template-person.component.jsx","components/goaml-sections/transaction-person/transaction-person.component.jsx","components/goaml-sections/transaction-party-info/transaction-from-party-info.component.jsx","components/goaml-enums/entity-legal-form-enum/entity-legal-form-enum.component.jsx","components/goaml-tables/table-director.component.jsx","components/goaml-enums/entity-person-role-enum/entity-person-role-enum.component.jsx","components/goaml-sections/template-director/template-director.components.jsx","components/goaml-sections/transaction-director/transaction-director.component.jsx","components/goaml-sections/transaction-entity/transaction-entity.components.jsx","components/goaml-enums/account-type-enum/account-type-enum.component.jsx","components/goaml-tables/table-signatory.component.jsx","components/goaml-enums/account-person-role-enum/account-person-role-enum.component.jsx","components/goaml-sections/template-signatory/template-signatory.components.jsx","components/goaml-sections/transaction-signatory/transaction-signatory.component.jsx","components/goaml-sections/transaction-account/transaction-account.components.jsx","components/goaml-sections/transaction-party/transaction-party.types.js","components/goaml-sections/transaction-party/transaction-party.component.jsx","components/goaml-sections/template-transaction/template-transaction.component.jsx","components/goaml-sections/report-transactions/report-transactions.component.jsx","components/goaml-core/converter-json-xml.js","components/goaml-core/report-generator.component.jsx","components/goaml-core/report-downloader.js","pages/goaml-page/goaml-page.component.jsx"],"names":["usersData","id","name","registered","role","status","RetrieveTransactionFromReport","fullReport","internal_ref_number","transaction","find","reportTransaction","SetReportType","reportType","type","ReportTypeActionTypes","SET_REPORT_TYPE","payload","selectReportType","createSelector","state","FormActions","saveText","handleCancelClick","handleSaveClick","className","color","onClick","FormDate","label","handleChange","placeholder","otherProps","htmlFor","onChange","FormInput","FormTextArea","rows","FormReactSelect","this","props","options","animatedComponents","makeAnimated","length","closeMenuOnSelect","components","defaultValue","isMulti","React","Component","ReportCodeEnum","reportIndicators","value","connect","dispatch","setReportType","report","useState","collapsed","setCollapsed","showElements","reportState","setComponentState","touched","setTouched","onFocus","onBlur","isEmpty","showError","setShowError","checkInputs","e","inputState","error","val","Object","entries","key","target","console","log","event","xs","timeout","in","unmountOnExit","show","row","onKeyUp","rentity_id","entity_branch","entity_reference","map","item","report_code","fiu_ref_number","submission_date","action","reason","getBadge","CombinedTable","fields","tableData","items","hover","striped","bordered","size","itemsPerPage","pagination","scopedSlots","ReportPerson","Id","FirstName","LastName","IdNumber","Passport","closed","ReportLocation","Address","City","State","Postal","Country","report_indicators","TransactionTable","transactionData","FormAmount","FormRadioText","width","disabled","FormDynamicSelect","custom","option","description","ConductionTypeEnum","handleSaveInfoClick","radioItems","setTransactionState","transactionnumber","transmode_comment","amount_local","transmode_code","date_transaction","date_posting","teller","authorized","transaction_location","late_deposit","txn_from","txn_to","transaction_description","handlleSaveClick","existingTxn","reportTxns","txn","push","CurrenciesEnum","TransactionItemStatusEnum","TransactionItemTypeEnum","checkData","item_type","previous_register_to","presently_register_to","status_code","registration_number","item_make","disposed_value","size_UOM","identification_number","comments","estimate_value","currency_code","registration_date","status_commets","transactionItems","CountryCodeEnum","FundsTypeEnum","PartyTypeEnum","TransactionToPartyInfo","transRef","partyType","handleSavePartyInfo","transpartyInfo","setTranspartyInfo","to_funds_code","from_funds_comment","to_funds_comment","to_country","foreign_currency_code","foreign_exchange_rate","foreign_amount","fromPtyInfo","partyInfo","to_foreign_currency","PersonTable","FormEmail","FormGenderSelect","index","AddressTable","ContactTypeEnum","TemplateAddress","handleAddressSave","templateAddress","address_type","city","country_code","address","town","zip","ReportAddresses","tab1Title","tab2Title","activeTab","variant","data-tab","IdentificationTable","IdentifierTypeEnum","IdentificationTemplate","handleIdentificationSave","templateIdentification","issued_by","number","issue_country","issue_date","expiry_date","ReportIdentifications","PhoneTable","CommunicationTypeEnum","PhoneTemplate","handlePhoneSave","templatePone","tph_contact_type","tph_number","tph_communication_type","tph_extension","tph_country_prefix","ReportPhones","PersonTemplate","alias","OnSave","templatePerson","first_name","title","mothers_name","nationality1","passport_number","source_of_wealth","middle_name","gender","birthdate","residence","nationality2","occupation","employer_name","last_name","prefix","birth_place","email","ssn","tax_number","tax_reg_number","phone","phones","addresses","identification","date_deceased","TransactionPersons","collapseMulti","setCollapseMulti","from_funds_code","from_country","newCollapse","slice","toggleMulti","class","conductor","t_conductor","from_foreign_currency","EntityLegalFormEnum","DirectorTable","EntityPersonRoleEnum","DirectorTemplate","entityDirectorInfo","setEntityDirectorInfo","txnRef","person","t_person","director","TransactionDirectors","TransactionEntity","templateEntity","business","incorporation_state","url","commercial_name","incorporation_number","incorporation_country_code","incorporation_legal_form","incorporation_date","business_closed","director_id","AccountTypeEnum","SignatoryTable","AccountPersonRoleEnum","SignatoryTemplate","componentState","TransactionSignatories","TransactionAccount","stateAccount","setStateAccount","account","iban","non_banking_institution","opened","account_name","institution_name","swift","balance","closedt","personal_account_type","branch","date_balance","client_number","beneficiary","beneficiary_comment","transaction_entity","signatory","TransactionsPartyTypes","FROM","TO","MY_CLIENT","PERSON_CLIENT","ACCOUNT_CLIENT","ENTITY_CLIENT","NOT_MY_CLIENT","PERSON_NOT_CLIENT","ACCOUNT_NOT_CLIENT","ENTITY_NOT_CLIENT","TransactionParty","displayPartyType","handleSaveParty","fromMyClientParty","fromNotMyClientParty","toMyClientParty","toNotMyClientParty","transitState","setTransitState","txnParty","filteredParties","reportTxn","Info","Items","filter","hasOwnProperty","Item","alert","fromPerson","fromEntity","from_entity","toPerson","toEntity","handleSaveItem","ReportTransactions","obj2xml","OBJtoXML","obj","xml","prop","Array","array","replace","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsXml","GoAmlPage"],"mappings":"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","file":"static/js/21.089aedcd.chunk.js","sourcesContent":["const usersData = [\r\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\r\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\r\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\r\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\r\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\r\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\r\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\r\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\r\n]\r\n\r\nexport default usersData\r\n","import ReportPersonTypes from '../report-person/report-person.types';\r\n\r\n\r\nexport const RetrieveTransactionFromReport = (fullReport, internal_ref_number) => {\r\n    const existingTxn = fullReport.transaction.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === internal_ref_number\r\n    );\r\n    return existingTxn;\r\n}\r\n\r\n\r\nexport const AddTransactionToGoAmlReport = (reportType, templateTxn) => {\r\n    if(templateTxn == null)\r\n        return;\r\n    if(templateTxn.internal_ref_number == null)\r\n        return;\r\n\r\n    const existingTxn = reportType.Items.find(\r\n        reportTransaction => reportTransaction.internal_ref_number === templateTxn.internal_ref_number\r\n    );\r\n    \r\n    if (existingTxn) {\r\n        const reportTxns = reportType.Items.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === templateTxn.internal_ref_number\r\n                ? { ...reportTransaction, ...templateTxn }\r\n                : reportTransaction\r\n        );\r\n        return reportTxns;\r\n    }\r\n}; \r\n\r\nexport const AddPersonToGoAmlReport = (reportType, templatePerson, personType, reportTypeFieldReference) => {\r\n\r\n    console.log(\"Awa: \", reportType, templatePerson, personType, reportTypeFieldReference);\r\n\r\n    switch (personType.trim()) {\r\n        case ReportPersonTypes.t_from_my_client_t_conductor:\r\n        case ReportPersonTypes.t_from_my_client_t_from_person:\r\n            let reportTxn = null;\r\n            const existingReportTransaction = reportType.Items.find(\r\n                reportTransaction => reportTransaction.internal_ref_number === reportTypeFieldReference\r\n            );\r\n            switch (personType) {\r\n                case ReportPersonTypes.t_from_my_client_t_conductor:\r\n                    if (existingReportTransaction) {\r\n                        reportTxn = reportType.Items.map(reportTransaction =>\r\n                            reportTransaction.internal_ref_number === reportTypeFieldReference\r\n                                ? { ...reportTransaction, t_conductor: templatePerson }\r\n                                : reportTransaction\r\n                        );\r\n                        console.log(\"Awa111A: \", reportTxn);\r\n                        return reportTxn;\r\n                    }\r\n                    console.log(\"Awa111B: \", reportTxn);\r\n                    break;\r\n                case ReportPersonTypes.t_from_my_client_t_from_person:  \r\n                    if (existingReportTransaction) {\r\n                        reportTxn = reportType.Items.map(reportTransaction =>\r\n                            reportTransaction.internal_ref_number === reportTypeFieldReference\r\n                                //? {...reportTransaction, Items: {...Items, templatePerson}} \r\n                                ? reportTransaction.Items.push(templatePerson) \r\n                                : reportTransaction\r\n                        );\r\n\r\n                        console.log(\"Awa112A: \", reportTxn);\r\n                        return reportTxn;\r\n                    }\r\n                    console.log(\"Awa112B: \", reportTxn);  \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            console.log(\"Awa222: \", reportType, templatePerson, personType, reportTypeFieldReference);\r\n            \r\n            //return {...reportType, Items: reportTxn};\r\n            break;\r\n        case \"t_from_my_client.from_person22\":\r\n            console.log(reportType);\r\n            //return [...reportType, { ...reportTransactionToAdd, quantity: 1 }];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};","import ReportTypeActionTypes from './report-type.types'\r\nimport { AddPersonToGoAmlReport } from '../goaml-utils/goaml-utils'\r\n\r\nexport const GetReportType = () => ({\r\n  type: ReportTypeActionTypes.GET_REPORT_TYPE\r\n});\r\n\r\nexport const SetReportType = reportType => ({\r\n  type: ReportTypeActionTypes.SET_REPORT_TYPE,\r\n  payload: reportType\r\n});\r\n\r\nexport const AddPersonToReport = (reportType, templatePerson, reportTypeFieldName, reportTypeFieldReference) => {\r\n  return ({\r\n    type: \"AWA_RE\",\r\n    payload: AddPersonToGoAmlReport(reportType, templatePerson, reportTypeFieldName, reportTypeFieldReference)\r\n  });\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst ReportType = state => state.reportType;\r\n\r\nexport const selectReportType = createSelector(\r\n    [ReportType],\r\n    reportType => reportType.reportType\r\n  );\r\n\r\n  ","import React from 'react'\r\nimport { CButton } from '@coreui/react'\r\n\r\nconst FormActions = ({saveText, handleCancelClick, handleSaveClick}) => {\r\n\r\n    return (\r\n        <div className=\"form-actions\">\r\n            <CButton color=\"primary\" onClick={handleSaveClick}>{ !saveText ? \"Save changes\": saveText }</CButton>\r\n            <CButton color=\"secondary\" className=\"btn-cancel-form-actions\" onClick={handleCancelClick}>Cancel</CButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormActions;","import {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react';\r\nimport React from 'react';\r\n\r\nconst FormDate = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput type=\"datetime\" id={name} name={name} onChange={handleChange} {...otherProps} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDate;\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormInput = ({ label, name, placeholder, type, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput id={name} name={name} type={type} onChange={handleChange} {...otherProps} placeholder={placeholder} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CTextarea,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormTextArea = ({ label, name, rows, placeholder, handleChange }) => (\r\n    <CFormGroup>\r\n        {label ? (\r\n            <CLabel htmlFor={name}>{label}</CLabel>\r\n        ) : null}\r\n        <CTextarea \r\n            name={name} \r\n            id={name} \r\n            rows={rows}\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    </CFormGroup>\r\n  );\r\n\r\nexport default FormTextArea;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nimport {\r\n    CFormGroup,\r\n    CLabel\r\n  } from '@coreui/react'\r\n\r\nclass FormReactSelect extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n    \r\n    render() {\r\n        const { options, label, name, handleChange } = this.props;\r\n        const animatedComponents = makeAnimated();\r\n  \r\n        return (\r\n          <CFormGroup>\r\n              {label ? (\r\n                  <CLabel htmlFor={name}>{label}</CLabel>\r\n                  ) : null}\r\n              {options && options.length > 0 && (\r\n                  <div className=\"col-xs-12\">\r\n                      <Select\r\n                          name={name} \r\n                          id={name} \r\n                          onChange={handleChange}\r\n                          closeMenuOnSelect={false}\r\n                          components={animatedComponents}\r\n                          defaultValue={[options[0]]}\r\n                          isMulti\r\n                          options={options}\r\n                      />\r\n                  </div>\r\n              )}\r\n          </CFormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormReactSelect;\r\n","import React from 'react';\r\nimport FormReactSelect from '../../form-inputs/form-react-select.component'\r\n\r\nclass ReportCodeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            reportIndicators : [\r\n                {value: 'CTR', label:'Cash Transaction Report'},\r\n                {value: 'STR', label:'Suspicious Transaction Report'},\r\n                {value: 'EFT', label:'Electronic Funds Transfer'},\r\n                {value: 'IFT', label:'International Funds Transfer'},\r\n                {value: 'TFR', label:'Terror Financing Report'},\r\n                {value: 'BCR', label:'Border Cash Report'},\r\n                {value: 'UTR', label:'Unusual Transaction Report'},\r\n                {value: 'AIF', label:'Additional Information File'},\r\n                {value: 'IRI', label:'Incoming Request for Information – International'},\r\n                {value: 'ORI', label:'Outgoing Request for Information – International'},\r\n                {value: 'IRD', label:'Incoming Request for Information – Domestic'},\r\n                {value: 'ORD', label:'Outgoing Request for Information – Domestic'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { reportIndicators } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormReactSelect label={label} name={name} handleChange={handleChange} options={reportIndicators} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ReportCodeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ReportCodeEnum from '../../goaml-enums/report-code-enum/report-code-enum.component';\r\n\r\n\r\nconst ReportType = ({ name, reportType, setReportType }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [showElements] = React.useState(true)\r\n    const [reportState, setComponentState] = React.useState({\r\n        \"rentity_id\": 0,\r\n        \"entity_branch\": '',\r\n        \"entity_reference\": '',\r\n        \"report_code\": '',\r\n        \"fiu_ref_number\": '',\r\n        \"submission_date\": '',\r\n        \"action\": '',\r\n        \"reason\": '',\r\n        \"submission_code\": '',\r\n        \"currency_code_local\": ''\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n\r\n    console.log('error', showError);\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...reportState, [name]: value });\r\n    };\r\n\r\n    const handleReactSelectTyeChange = event => {\r\n        let type = event.map((item) => {\r\n            return item.value\r\n        })\r\n        setComponentState({ ...reportState, report_code: type });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        setReportType({ ...reportType, ...reportState});\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Entity\" \r\n                                                name=\"rentity_id\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.rentity_id} \r\n                                                className={`form-control ${!reportState.rentity_id && touched && 'is-invalid'}${reportState.rentity_id && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Reporting Entity Branch\" \r\n                                                name=\"entity_branch\" \r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.entity_branch} \r\n                                                className={`form-control ${!reportState.entity_branch && touched && 'is-invalid'} ${reportState.entity_branch && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Reporting Entity Reference\" \r\n                                                name=\"entity_reference\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.entity_reference} \r\n                                                className={`form-control ${!reportState.entity_reference && touched && 'is-invalid'} ${reportState.entity_reference && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportCodeEnum \r\n                                                label=\"Type*\" \r\n                                                name=\"report_code\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleReactSelectTyeChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.report_code} \r\n                                                className={`form-select ${!reportState.report_code && touched && 'is-invalid'} ${reportState.report_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"FIC Ref Number\" \r\n                                                name=\"fiu_ref_number\" \r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus} \r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.fiu_ref_number}  \r\n                                                className={`form-control ${!reportState.fiu_ref_number && touched && 'is-invalid'} ${reportState.fiu_ref_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormDate \r\n                                                label=\"Submission Date*\" \r\n                                                name=\"submission_date\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.submission_date}  \r\n                                                className={`form-select ${!reportState.submission_date && touched && 'is-invalid'} ${reportState.submission_date && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Action\" \r\n                                                name=\"action\" \r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus} \r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.action}  \r\n                                                className={`form-control ${!reportState.action && touched && 'is-invalid'} ${reportState.action && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Reason for Reporting\" \r\n                                                name=\"reason\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                handleChange={handleChange}\r\n                                                onKeyUp={(e) => checkInputs(e, reportState)} \r\n                                                value={reportState.reason}  \r\n                                                className={`form-select ${!reportState.reason && touched && 'is-invalid'} ${reportState.reason && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions \r\n                                        saveText=\"Save Report Type\" \r\n                                        handleSaveClick={handleSaveClick} \r\n                                        handleCancelClick={handleCancelClick}>\r\n                                        </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: report => dispatch(SetReportType(report))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportType);\r\n","import CIcon from '@coreui/icons-react'\r\nimport {\r\n  CBadge, CButton,\r\n\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CCollapse,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport React from 'react'\r\n// import { bool } from 'prop-types'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst CombinedTable = ({name, fields, tableData, ...otherProps}) => {\r\n\r\n  let [collapsed, setCollapsed] = React.useState(false);\r\n  // let [showElements, setShowElements] = React.useState(true);\r\n\r\n  return (\r\n    <>\r\n        <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  {name}\r\n                  <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                </CCardHeader>\r\n                <CCollapse show={collapsed} timeout={1000}>\r\n                  <CCardBody>\r\n                    <CDataTable\r\n                    items={tableData}\r\n                    fields={fields}\r\n                    hover\r\n                    striped\r\n                    bordered\r\n                    size=\"sm\"\r\n                    itemsPerPage={10}\r\n                    pagination\r\n                    scopedSlots = {{\r\n                        'status':\r\n                        (item)=>(\r\n                            <td>\r\n                            <CBadge color={getBadge(item.status)}>\r\n                                {item.status}\r\n                            </CBadge>\r\n                            </td>\r\n                        )\r\n                    }}\r\n                    />\r\n                  </CCardBody>\r\n                </CCollapse>\r\n              </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CombinedTable\r\n","import React from 'react';\r\nimport CombinedTable from '../../goaml-tables/combined-table.component'\r\n\r\nconst fields = ['Id','FirstName', 'LastName', 'Date of Birth', 'IdNumber', 'Passport', 'status']\r\n\r\nclass ReportPerson extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usersData : [\r\n                {\r\n                Id: 1,\r\n                FirstName: \"John\",\r\n                LastName: \"Doe\",\r\n                \"Date of Birth\": \"18/03/1992\",\r\n                IdNumber: \"A25529928\",\r\n                Passport: \"\",\r\n                status: 'Active'\r\n            }]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { usersData } = this.state;\r\n        const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Reporting Person\" closed={\"true\"} fields={fields} tableData={usersData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportPerson;","import React from 'react';\r\nimport CombinedTable from '../../goaml-tables/combined-table.component'\r\n\r\nconst fields = ['Id','Address', 'City', 'State', 'Postal', 'Country']\r\n\r\nclass ReportLocation extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usersData : [\r\n            {\r\n                Id: 1,\r\n                Address: \"Building 21\",\r\n                City: \"Victoria Island\",\r\n                State: \"Lagos\",\r\n                Postal: \"01104\",\r\n                Country: \"Nigeria\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { usersData } = this.state;\r\n        const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Reporting Location\" fields={fields} tableData={usersData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReportLocation;","import React from 'react';\r\nimport ReportCodeEnum from '../../goaml-enums/report-code-enum/report-code-enum.component';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n  } from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { connect } from 'react-redux';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\n\r\n\r\nconst ReportIndicator = ({ name, reportType, setReportType, ...otherProps }) => {\r\n\r\n    let [collapsed, setCollapsed] = React.useState(true)\r\n    let [showElements, setShowElements] = React.useState(true)\r\n\r\n    const handleReactSelectTyeChange = event => {\r\n        let type = event.map((item) => {\r\n            return item.value\r\n        })\r\n        reportType.report_indicators = type;\r\n    };\r\n    \r\n    const handleSaveClick = () => {\r\n        setReportType(reportType);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        {name}\r\n                        <div className=\"card-header-actions\">\r\n                            <CButton \r\n                            color=\"link\" \r\n                            className=\"card-header-action btn-minimize\" \r\n                            onClick={() => setCollapsed(!collapsed)}\r\n                            >\r\n                            <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                            </CButton>\r\n                        </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"12\">\r\n                                    <ReportCodeEnum name=\"report_indicators\" handleChange={handleReactSelectTyeChange} />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: reportType => dispatch(SetReportType(reportType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportIndicator);\r\n","import React from 'react';\r\nimport usersData from '../../views/users/UsersData';\r\nimport CombinedTable from './combined-table.component';\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass TransactionTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Transactions Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransactionTable;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CInput,\r\n    CLabel  } from '@coreui/react'\r\n\r\nconst FormAmount = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n    {label ? (\r\n      <CLabel htmlFor={name}>{label}</CLabel>\r\n    ) : null}\r\n      <CInput id={name} name={name} onChange={handleChange} {...otherProps} placeholder={placeholder} />\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormAmount;\r\n","import React from 'react';\r\nimport './form-radio-text.style.css'\r\nimport {\r\n    CInput,\r\n    CCol,\r\n    CLabel\r\n  } from '@coreui/react'\r\n\r\nconst FormRadioText = ({ label, name, placeholder, width, items, handleChange }) => (\r\n    <div className=\"form-group\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    {items ? \r\n                    items.map((item) => {\r\n                        return(\r\n                            <CCol xs={width}>\r\n                                <div className=\"input-group\">\r\n                                    <span className=\"input-group-addon\">\r\n                                        <input type=\"radio\" name={name} />\r\n                                    </span>\r\n                                    <CInput name={name} onChange={handleChange} defaultValue={item} disabled />\r\n                                </div>\r\n                            </CCol>\r\n                        )\r\n                    }) : null}\r\n                </div>\r\n            </div>\r\n  );\r\n\r\nexport default FormRadioText;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect  } from '@coreui/react'\r\n\r\nconst FormDynamicSelect = ({ options, label, name, handleChange }) => (\r\n  <CFormGroup>\r\n      {label ? (\r\n          <CLabel htmlFor={name}>{label}</CLabel>\r\n          ) : null}\r\n      {options && options.length > 0 && (\r\n          <CSelect custom name={name} id={name} onChange={handleChange}>\r\n              {options.map((option) => {\r\n                  return <option value={option.value}>{option.description}</option>;\r\n              })}\r\n          </CSelect>\r\n      )}\r\n  </CFormGroup>\r\n);\r\n\r\nexport default FormDynamicSelect;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ConductionTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'In-branch/Office'},\r\n                {value: 'B', description:'ATM'},\r\n                {value: 'C', description:'Electronic transaction'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ConductionTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RetrieveTransactionFromReport } from '../../../redux/goaml-utils/goaml-utils';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormAmount from '../../form-inputs/form-amount.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ConductionTypeEnum from '../../goaml-enums/conduction-type-enum/conduction-type-enum.component';\r\n\r\nconst TransactionInfo = ({ label, name, reportType, setReportType, handleSaveInfoClick, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [transaction, setTransactionState] = React.useState({\r\n        \"transactionnumber\": '',\r\n        \"internal_ref_number\": '',\r\n        \"transaction_location\": '',\r\n        \"transaction_description\": '',\r\n        \"date_transaction\": '',\r\n        \"teller\": '',\r\n        \"authorized\": '',\r\n        \"late_deposit\": '',\r\n        \"date_posting\": '',\r\n        // \"date_postingSpecified\": false,\r\n        //\"value_dateSpecified\": false,\r\n        \"transmode_code\": '',\r\n        \"transmode_comment\": '',\r\n        \"amount_local\": '',\r\n        \"Items\": [],\r\n        \"goods_services\": '',\r\n        \"comments\": ''\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setTransactionState({ ...transaction, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        const existingTxn = RetrieveTransactionFromReport(reportType, transaction);\r\n        if (existingTxn) {\r\n            setTransactionState({ ...transaction, ...existingTxn });\r\n            let reportTxns = reportType.transaction.map(reportTransaction =>\r\n                reportTransaction.internal_ref_number === transaction.internal_ref_number\r\n                    ? transaction\r\n                    : reportTransaction\r\n            );\r\n            handleSaveInfoClick(reportTxns, transaction);\r\n        }\r\n        else {\r\n            let txn = reportType.transaction;\r\n            txn.push(transaction)\r\n            handleSaveInfoClick(txn, transaction);\r\n        }\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Number*\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                name=\"transactionnumber\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)} \r\n                                                handleChange={handleChange} \r\n                                                value={transaction.transactionnumber} \r\n                                                className={`form-control ${!transaction.transactionnumber && touched && 'is-invalid'} ${transaction.transactionnumber && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"TransMode Comment\" \r\n                                                name=\"transmode_comment\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                value={transaction.transmode_comment} \r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.transmode_comment && touched && 'is-invalid'} ${transaction.transmode_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Internal Reference Number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                name=\"internal_ref_number\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                value={transaction.internal_ref_number} \r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.internal_ref_number && touched && 'is-invalid'} ${transaction.internal_ref_number && 'is-valid'}`}\r\n                                            />\r\n                                            <FormAmount \r\n                                                label=\"Local Amount*\" \r\n                                                name=\"amount_local\" \r\n                                                placeholder=\"0.00\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                value={transaction.amount_local} \r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.amount_local && touched && 'is-invalid'} ${transaction.amount_local && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <ConductionTypeEnum \r\n                                                label=\"TransMode Code*\" \r\n                                                name=\"transmode_code\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                handleChange={handleChange} \r\n                                                value={transaction.transmode_code} \r\n                                                className={`form-control ${!transaction.transmode_code && touched && 'is-invalid'} ${transaction.transmode_code && 'is-valid'}`}\r\n                                            />\r\n                                            <FormDate \r\n                                                label=\"Trans Date*\" \r\n                                                name=\"date_transaction\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                value={transaction.date_transaction} \r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.date_transaction && touched && 'is-invalid'} ${transaction.date_transaction && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormDate \r\n                                                label=\"Post Date*\" \r\n                                                name=\"date_posting\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)} \r\n                                                value={transaction.date_posting} \r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.date_posting && touched && 'is-invalid'} ${transaction.date_posting && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Teller\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                name=\"teller\" \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                value={transaction.teller} \r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.teller && touched && 'is-invalid'} ${transaction.teller && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Authorised\" \r\n                                                name=\"authorized\" \r\n                                                placeholder=\"Enter ...\"\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus} \r\n                                                value={transaction.authorized} \r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                handleChange={handleChange} \r\n                                                className={`form-control ${!transaction.authorized && touched && 'is-invalid'} ${transaction.authorized && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormInput \r\n                                                        label=\"Location*\" \r\n                                                        name=\"transaction_location\" \r\n                                                        placeholder=\"Enter ...\"\r\n                                                        onBlur={onBlur}\r\n                                                        onFocus={onFocus} \r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        value={transaction.transaction_location} \r\n                                                        handleChange={handleChange} \r\n                                                        className={`form-control ${!transaction.transaction_location && touched && 'is-invalid'} ${transaction.transaction_location && 'is-valid'}`}\r\n                                                        />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText \r\n                                                        label=\"Late Deposit?\" \r\n                                                        name=\"late_deposit\" \r\n                                                        onBlur={onBlur}\r\n                                                        onFocus={onFocus}\r\n                                                        width=\"6\" items={[\"Yes\", \"No\"]} \r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        value={transaction.late_deposit} \r\n                                                        handleChange={handleChange} \r\n                                                        className={`form-control ${!transaction.late_deposit && touched && 'is-invalid'} ${transaction.late_deposit && 'is-valid'}`}\r\n                                                        />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText \r\n                                                        label=\"From Party?\" \r\n                                                        items={[\"My Client\", \"Not My Client\"]} \r\n                                                        name=\"txn_from\" \r\n                                                        width=\"6\" \r\n                                                        onBlur={onBlur}\r\n                                                        onFocus={onFocus}\r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        value={radioItems} \r\n                                                        className={`form-control ${!transaction.txn_from && touched && 'is-invalid'} ${transaction.txn_from && 'is-valid'}`}\r\n                                                        />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText \r\n                                                        label=\"To Party?\" \r\n                                                        name=\"txn_to\"\r\n                                                        width=\"6\" \r\n                                                        onBlur={onBlur}\r\n                                                        onFocus={onFocus}\r\n                                                        onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                        value={radioItems} \r\n                                                        items={[\"My Client\", \"Not My Client\"]}\r\n                                                        className={`form-control ${!transaction.txn_to && touched && 'is-invalid'} ${transaction.txn_to && 'is-valid'}`}\r\n                                                        />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Description\" \r\n                                                name=\"transaction_description\"\r\n                                                value={transaction.transaction_description} \r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, transaction)}\r\n                                                handleChange={handleChange} \r\n                                                placeholder=\"Enter ...\" \r\n                                                className={`form-control ${!transaction.transaction_description && touched && 'is-invalid'} ${transaction.transaction_description && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions \r\n                                        saveText=\"Save Overview\" \r\n                                        handlleSaveClick={handleSaveClick} \r\n                                        handleCancelClick={handleCancelClick}>\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: reportType => dispatch(SetReportType(reportType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionInfo);","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CurrenciesEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'ADP', description:'Andorran Peseta (no longer in use)'},\r\n                {value: 'AED', description:'United Arab Emirates Dirham'},\r\n                {value: 'AFA', description:'Afghani'},\r\n                {value: 'ALL', description:'Leek'},\r\n                {value: 'AMD', description:'Dram'},\r\n                {value: 'ANG', description:'Netherlands Antilles Guilder'},\r\n                {value: 'AOK', description:'Kwanza'},\r\n                {value: 'AON', description:'New Kwanza'},\r\n                {value: 'ARA', description:'Austral'},\r\n                {value: 'ARP', description:'Argentinean Peso'},\r\n                {value: 'ARS', description:'Argentinean Nuevo Peso'},\r\n                {value: 'ATS', description:'Schilling (no longer in use)'},\r\n                {value: 'AUD', description:'Australian Dollar'},\r\n                {value: 'AWG', description:'Aruban Guilder'},\r\n                {value: 'AZM', description:'Azerbaijani Manat'},\r\n                {value: 'BAM', description:'Convertible Mark'},\r\n                {value: 'BBD', description:'Barbados Dollar'},\r\n                {value: 'BDT', description:'Taka'},\r\n                {value: 'BEC', description:'Convertible Belgian Franc (no longer in use)'},\r\n                {value: 'BEF', description:'Belgian Franc (also known as Frank - no longer in use)'},\r\n                {value: 'BEL', description:'Financial Belgian Franc (no longer in use)'},\r\n                {value: 'BGL', description:'Lev'},\r\n                {value: 'BHD', description:'Bahraini Dinar'},\r\n                {value: 'BIF', description:'Burundi Franc'},\r\n                {value: 'BMD', description:'Bermudian Dollar'},\r\n                {value: 'BND', description:'Brunei Dollar'},\r\n                {value: 'BOB', description:'Boliviano'},\r\n                {value: 'BOP', description:'Bolivian Peso'},\r\n                {value: 'BRC', description:'Cruzeiro'},\r\n                {value: 'BRL', description:'Real'},\r\n                {value: 'BRR', description:'Cruzeiro Real'},\r\n                {value: 'BSD', description:'Bahamian Dollar'},\r\n                {value: 'BTN', description:'Ngultrum'},\r\n                {value: 'BUK', description:'Replaced by MMK'},\r\n                {value: 'BWP', description:'Pula'},\r\n                {value: 'BYR', description:'Belarussian Rouble'},\r\n                {value: 'BZD', description:'Belize Dollar'},\r\n                {value: 'CAD', description:'Canadian Dollar'},\r\n                {value: 'CDF', description:'Congolese Franc'},\r\n                {value: 'CDZ', description:'New Zaïre'},\r\n                {value: 'CHF', description:'Swiss Franc'},\r\n                {value: 'CLF', description:'Unidades de Fomento'},\r\n                {value: 'CLP', description:'Chilean Peso'},\r\n                {value: 'CNY', description:'Yuan Renminbi'},\r\n                {value: 'COP', description:'Colombian Peso'},\r\n                {value: 'CRC', description:'Costa Rican Colón'},\r\n                {value: 'CSK', description:'Koruna of former Czechoslovakia. Now replaced by CZK (Czech Koruna) and '},\r\n                {value: 'SKK', description:'Slovak Koruna)'},\r\n                {value: 'CUP', description:'Cuban Peso'},\r\n                {value: 'CVE', description:'Escudo Caboverdiano'},\r\n                {value: 'CYP', description:'Cypriot Pound'},\r\n                {value: 'CZK', description:'Czech Koruna'},\r\n                {value: 'DDM', description:'Former East German Mark, DEM subsequently in use'},\r\n                {value: 'DEM', description:'Deutsche Mark (no longer in use)'},\r\n                {value: 'DJF', description:'Djibouti Franc'},\r\n                {value: 'DKK', description:'Danish Krone'},\r\n                {value: 'DOP', description:'Dominican Republic Peso'},\r\n                {value: 'DZD', description:'Algerian Dinar'},\r\n                {value: 'ECS', description:'Sucre (no longer in use)'},\r\n                {value: 'EEK', description:'Kroon'},\r\n                {value: 'EGP', description:'Egyptian Pound'},\r\n                {value: 'ERN', description:'Eritrean Nakfa'},\r\n                {value: 'ESA', description:'Spanish Peseta, Account A (no longer in use)'},\r\n                {value: 'ESB', description:'Spanish Peseta, Account B (no longer in use)'},\r\n                {value: 'ESP', description:'Spanish Peseta (no longer in use)'},\r\n                {value: 'ETB', description:'Ethiopian Birr'},\r\n                {value: 'EUR', description:'Euro '},\r\n                {value: 'FIM', description:'Markka (no longer in use)'},\r\n                {value: 'FJD', description:'Fiji Dollar'},\r\n                {value: 'FKP', description:'Falkland Pound'},\r\n                {value: 'FRF', description:'French Franc (no longer in use)'},\r\n                {value: 'GBP', description:'Pound Sterling (United Kingdom Pound)'},\r\n                {value: 'GEL', description:'Lari'},\r\n                {value: 'GHC', description:'Cedi'},\r\n                {value: 'GIP', description:'Gibraltar Pound'},\r\n                {value: 'GMD', description:'Dalasi'},\r\n                {value: 'GNS', description:'Syli (also known as Guinea Franc)'},\r\n                {value: 'GQE', description:'Ekwele'},\r\n                {value: 'GRD', description:'Greek Drachma (no longer in use)'},\r\n                {value: 'GTQ', description:'Quetzal'},\r\n                {value: 'GWP', description:'Guinea-Bissau Peso'},\r\n                {value: 'GYD', description:'Guyana Dollar'},\r\n                {value: 'HKD', description:'Hong Kong Dollar'},\r\n                {value: 'HNL', description:'Lempira'},\r\n                {value: 'HRD', description:'Croatian Dinar'},\r\n                {value: 'HRK', description:'Croatian Kuna'},\r\n                {value: 'HTG', description:'Gourde'},\r\n                {value: 'HUF', description:'Forint'},\r\n                {value: 'IDR', description:'Rupiah'},\r\n                {value: 'IEP', description:'Punt (no longer in use)'},\r\n                {value: 'ILS', description:'Shekel'},\r\n                {value: 'INR', description:'Indian Rupee'},\r\n                {value: 'IQD', description:'Iraqi Dinar'},\r\n                {value: 'IRR', description:'Iranian Rial'},\r\n                {value: 'ISK', description:'Icelandic Króna'},\r\n                {value: 'ITL', description:'Italian Lira (no longer in use)'},\r\n                {value: 'JMD', description:'Jamaican Dollar'},\r\n                {value: 'JOD', description:'Jordanian Dinar'},\r\n                {value: 'JPY', description:'Yen'},\r\n                {value: 'KES', description:'Kenyan Shilling'},\r\n                {value: 'KGS', description:'Kyrgyzstani Som'},\r\n                {value: 'KHR', description:'Riel'},\r\n                {value: 'KMF', description:'Comorian Franc'},\r\n                {value: 'KPW', description:'Democratic Peoples Republic of Korean Won'},\r\n                {value: 'KRW', description:'Republic of Korean Won'},\r\n                {value: 'KWD', description:'Kuwaiti Dinar'},\r\n                {value: 'KYD', description:'Cayman Islands Dollar'},\r\n                {value: 'KZT', description:'Tenge'},\r\n                {value: 'LAK', description:'Kip'},\r\n                {value: 'LBP', description:'Lebanese Pound'},\r\n                {value: 'LKR', description:'Sri Lankan Rupee'},\r\n                {value: 'LRD', description:'Liberian Dollar'},\r\n                {value: 'LSL', description:'Loti'},\r\n                {value: 'LSM', description:'Maloti'},\r\n                {value: 'LTL', description:'Litas'},\r\n                {value: 'LUF', description:'Luxembourg Franc (no longer in use)'},\r\n                {value: 'LVL', description:'Lats'},\r\n                {value: 'LYD', description:'Libyan Dinar'},\r\n                {value: 'MAD', description:'Moroccan Dirham'},\r\n                {value: 'MDL', description:'Moldavian Leu'},\r\n                {value: 'MGF', description:'Malagasy Franc'},\r\n                {value: 'MKD', description:'Macedonian Dinar'},\r\n                {value: 'MLF', description:'Malian Franc'},\r\n                {value: 'MMK', description:'Kyat'},\r\n                {value: 'MNT', description:'Tugrik'},\r\n                {value: 'MOP', description:'Pataca'},\r\n                {value: 'MRO', description:'Ouguiya'},\r\n                {value: 'MTL', description:'Maltese Lira'},\r\n                {value: 'MTP', description:'Maltese Pound, replaced by Maltese Lira'},\r\n                {value: 'MUR', description:'Mauritius Rupee'},\r\n                {value: 'MVR', description:'Rufiyaa'},\r\n                {value: 'MWK', description:'Malawian Kwacha'},\r\n                {value: 'MXN', description:'Mexican New Peso (replacement for Mexican Peso)'},\r\n                {value: 'MXP', description:'Mexican Peso, replaced by Mexican New Peso'},\r\n                {value: 'MYR', description:'Ringgit (also known as Malaysian Dollar)'},\r\n                {value: 'MZM', description:'Metical'},\r\n                {value: 'NAD', description:'Namibian Dollar'},\r\n                {value: 'NGN', description:'Naira'},\r\n                {value: 'NIC', description:'Córdoba'},\r\n                {value: 'NLG', description:'Dutch Guilder (no longer in use)'},\r\n                {value: 'NOK', description:'Norwegian Krone'},\r\n                {value: 'NPR', description:'Nepalese Rupee'},\r\n                {value: 'NZD', description:'New Zealand Dollar'},\r\n                {value: 'OMR', description:'Omani Rial'},\r\n                {value: 'PAB', description:'Balboa'},\r\n                {value: 'PEI', description:'Inti'},\r\n                {value: 'PEN', description:'New Sol'},\r\n                {value: 'PES', description:'Sol (replaced by New Sol [PEN])'},\r\n                {value: 'PGK', description:'Kina'},\r\n                {value: 'PHP', description:'Philippines Peso'},\r\n                {value: 'PKR', description:'Pakistani Rupee'},\r\n                {value: 'PLN', description:'New Zloty'},\r\n                {value: 'PLZ', description:'Zloty (replaced by New Zloty [PLN])'},\r\n                {value: 'PTE', description:'Portuguese Escudo (no longer in use)'},\r\n                {value: 'PYG', description:'Guarani'},\r\n                {value: 'QAR', description:'Qatari Riyal'},\r\n                {value: 'ROL', description:'Romanian Leu'},\r\n                {value: 'RSD', description:'Serbian Dinar'},\r\n                {value: 'RUB', description:' Russian Federation Rouble (formerly RUR)'},\r\n                {value: 'RWF', description:'Rwandan Franc'},\r\n                {value: 'SAR', description:'Saudi Riyal'},\r\n                {value: 'SBD', description:'Solomon Islands Dollar'},\r\n                {value: 'SCR', description:'Seychelles Rupee'},\r\n                {value: 'SDD', description:'Sudanese Dinar'},\r\n                {value: 'SDP', description:'Sudanese Pound'},\r\n                {value: 'SEK', description:'Swedish Krona'},\r\n                {value: 'SGD', description:'Singapore Dollar'},\r\n                {value: 'SHP', description:'St Helena Pound'},\r\n                {value: 'SIT', description:'Tolar'},\r\n                {value: 'SKK', description:'Slovak Koruna'},\r\n                {value: 'SLL', description:'Leone'},\r\n                {value: 'SOS', description:'Somali Shilling'},\r\n                {value: 'SRG', description:'Surinam Guilder'},\r\n                {value: 'STD', description:'Dobra'},\r\n                {value: 'SUR', description:'Union of Soviet Socialist Republics Rouble'},\r\n                {value: 'SVC', description:'El Salvadorian Colón'},\r\n                {value: 'SYP', description:'Syrian Pound'},\r\n                {value: 'SZL', description:'Lilangeni'},\r\n                {value: 'THB', description:'Baht'},\r\n                {value: 'TJR', description:'Tajik Rouble'},\r\n                {value: 'TMM', description:'Turkmenistani Manat'},\r\n                {value: 'TND', description:'Tunisian Dinar'},\r\n                {value: 'TOP', description:'Paanga'},\r\n                {value: 'TPE', description:'Timorian Escudo'},\r\n                {value: 'TRL', description:'Turkish Lira'},\r\n                {value: 'TTD', description:'Trinidad and Tobago Dollar'},\r\n                {value: 'TWD', description:'Taiwan Dollar'},\r\n                {value: 'TZS', description:'Tanzanian Shilling'},\r\n                {value: 'UAH', description:'Hryvna'},\r\n                {value: 'UAK', description:'Karbovanet'},\r\n                {value: 'UGS', description:'Ugandan Shilling'},\r\n                {value: 'UKP', description:'Incorrectly used for GBP'},\r\n                {value: 'USD', description:'United States Dollar'},\r\n                {value: 'USN', description:'United States Dollar (Next day)'},\r\n                {value: 'USS', description:'United States Dollar (Same day)'},\r\n                {value: 'UYP', description:'Uruguayan Peso, replaced by Uruguayan New Peso (UYU)'},\r\n                {value: 'UYU', description:'Uruguayan New Peso'},\r\n                {value: 'UZS', description:'Uzbekistani Som'},\r\n                {value: 'VEB', description:'Bolivar'},\r\n                {value: 'VND', description:'Viet Nam Dông'},\r\n                {value: 'VUV', description:'Vatu'},\r\n                {value: 'WST', description:'Tala'},\r\n                {value: 'XAF', description:'Franc de la Communauté financière africaine'},\r\n                {value: 'XAU', description:'Gold'},\r\n                {value: 'XBA', description:'European Composite Unit'},\r\n                {value: 'XBB', description:'European Monetary Unit'},\r\n                {value: 'XBC', description:'European Unit of Account 9'},\r\n                {value: 'XBD', description:'European Unit of Account 17'},\r\n                {value: 'XCD', description:'East Caribbean Dollar'},\r\n                {value: 'XDR', description:'International Monetary Fund Special Drawing Rights'},\r\n                {value: 'XEU', description:'ECU (not an official currency, replaced by the Euro)'},\r\n                {value: 'XOF', description:'West African Franc'},\r\n                {value: 'XPF', description:'Franc des Comptoirs français du Pacifique'},\r\n                {value: 'YDD', description:'South Yemeni Dinar'},\r\n                {value: 'YER', description:'Yemeni Riyal'},\r\n                {value: 'YUD', description:'Yugoslavian New Dinar (no longer in use)'},\r\n                {value: 'ZAL', description:'Rand (financial)'},\r\n                {value: 'ZAR', description:'Rand'},\r\n                {value: 'ZMK', description:'Zambian Kwacha'},\r\n                {value: 'ZRZ', description:'Replaced by CDZ'},\r\n                {value: 'ZWD', description:'Zimbabwe Dollar'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CurrenciesEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass TransactionItemStatusEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Bought'},\r\n                {value: 'B', description:'Sold'},\r\n                {value: 'C', description:'Rent'},\r\n                {value: 'D', description:'Leased'},\r\n                {value: 'E', description:'Mortgaged'},\r\n                {value: 'F', description:'Donated'},\r\n                {value: 'G', description:'Destroyed'},\r\n                {value: 'H', description:'Other'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default TransactionItemStatusEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass TransactionItemTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'CH', description:'Chemical'},\r\n                {value: 'C', description:'Commodity'},\r\n                {value: 'E', description:'Equipment'},\r\n                {value: 'F', description:'Furniture'},\r\n                {value: 'G', description:'Goods'},\r\n                {value: 'J', description:'Jewellery'},\r\n                {value: 'M', description:'Machines'},\r\n                {value: 'PM', description:'Precious Metal'},\r\n                {value: 'P', description:'Property'},\r\n                {value: 'S', description:'Services'},\r\n                {value: 'V', description:'Vehicle'},\r\n                {value: 'W', description:'Weapon'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange}/>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default TransactionItemTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { RetrieveTransactionFromReport } from '../../../redux/goaml-utils/goaml-utils';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport TransactionItemStatusEnum from '../../goaml-enums/transaction-item-status-enum/transaction-item-status-enum.component';\r\nimport TransactionItemTypeEnum from '../../goaml-enums/transaction-item-type-enum/transaction-item-type-enum.component';\r\n\r\nconst TransactionItem = ({ handleSaveInfoClick, reportType, label, name, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [transaction, setTransactionState] = React.useState({\r\n        \"item_type\": '',\r\n        \"previous_register_to\": '',\r\n        \"status_code\": '',\r\n        \"size\": '',\r\n        \"registration_number\": '',\r\n        \"item_make\": \"\",\r\n        \"presently_register_to\": '',\r\n        \"disposed_value\": '',\r\n        \"size_UOM\": '',\r\n        \"identification_number\": '',\r\n        \"description\": '',\r\n        \"estimate_value\": '',\r\n        \"currency_code\": '',\r\n        \"registration_date\": '',\r\n        \"comments\": [],\r\n        \"status_commets\": ''\r\n    });\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkData = (e, inputState) => {\r\n        let error = true;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === null ? error = false : error = true; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n\r\n    console.log('error', showError)\r\n    \r\n    const handleChange = event => {\r\n        console.log('event', event.target.value);\r\n        const { name, value } = event.target;\r\n        setTransactionState({ ...transaction, [name]: value });\r\n    };\r\n\r\n    // const ToggleError = () => setShowError(!showError);\r\n\r\n    const handleSaveClick = () => {\r\n        const transactionItems = RetrieveTransactionFromReport(reportType, transaction);\r\n        if (transactionItems) {\r\n            setTransactionState({ ...transaction, ...transactionItems });\r\n            let reportTxns = reportType.transaction.map(reportTransaction =>\r\n                reportTransaction === transaction\r\n                    ? transaction\r\n                    : reportTransaction\r\n            );\r\n            handleSaveInfoClick(reportTxns, transaction);\r\n        }\r\n        else {\r\n            let txn = reportType.transaction;\r\n            txn.push(transaction)\r\n            handleSaveInfoClick(txn, transaction);\r\n        }\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {label}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <TransactionItemTypeEnum \r\n                                        label=\"Item Type*\" \r\n                                        name=\"ItemType\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        className={`form-control ${!transaction.item_type && touched && 'is-invalid'} ${transaction.item_type && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Previously Registered To\" \r\n                                        name=\"previous_register_to\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.previous_register_to}\r\n                                        className={`form-control ${!transaction.previous_register_to && touched && 'is-invalid'} ${transaction.presently_register_to && 'is-valid'}`}\r\n                                     />\r\n                                    <TransactionItemStatusEnum \r\n                                        label=\"Status Code\" \r\n                                        name=\"status_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)}\r\n                                        value={transaction.status_code}\r\n                                        className={`form-control ${!transaction.status_code && touched && 'is-invalid'} ${transaction.status_code && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Size\" \r\n                                        name=\"size\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)}\r\n                                        value={transaction.size}\r\n                                        className={`form-control ${!transaction.size && touched && 'is-invalid'} ${transaction.size && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus} \r\n                                        label=\"Registration Number\" \r\n                                        name=\"registration_number\"\r\n                                        placeholder=\"Enter ...\" \r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.registration_number}\r\n                                        className={`form-control ${!transaction.registration_number && touched && 'is-invalid'} ${transaction.registration_number && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Item Make*\" \r\n                                        name=\"item_make\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.item_make}\r\n                                        className={`form-control ${!transaction.item_make && touched && 'is-invalid'} ${transaction.item_make && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Disposed Value\"\r\n                                        name=\"disposed_value\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.disposed_value}\r\n                                        className={`form-control ${!transaction.disposed_value && touched && 'is-invalid'} ${transaction.disposed_value && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Size UOM\" \r\n                                        name=\"size_UOM\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.size_UOM}\r\n                                        className={`form-control ${!transaction.size_UOM && touched && 'is-invalid'} ${transaction.size_UOM && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Identification Number\" \r\n                                        name=\"identification_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.identification_number}\r\n                                        className={`form-control ${!transaction.identification_number && touched && 'is-invalid'} ${transaction.identification_number && 'is-valid'}`}\r\n                                    />\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.comments} \r\n                                        className={`form-control ${!transaction.comments && touched && 'is-invalid'} ${transaction.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Description*\" \r\n                                        name=\"description\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.description}\r\n                                        className={`form-control ${!transaction.description && touched && 'is-invalid'} ${transaction.description && 'is-valid'}`}\r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Estimated Value\" \r\n                                        name=\"estimate_value\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.estimate_value}\r\n                                        className={`form-control ${!transaction.estimate_value && touched && 'is-invalid'} ${transaction.estimate_value && 'is-valid'}`}\r\n                                    />\r\n                                    <CurrenciesEnum \r\n                                        label=\"Currency Code*\" \r\n                                        name=\"currency_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.currency_code} \r\n                                        className={`form-control ${!transaction.currency_code && touched && 'is-invalid'} ${transaction.currency_code && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Registration Date*\" \r\n                                        name=\"registration_date\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.registration_date} \r\n                                        className={`form-control ${!transaction.registration_date && touched && 'is-invalid'} ${transaction.registration_date && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Status Comments\" \r\n                                        name=\"status_comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        onKeyUp={(e) => checkData(e, transaction)} \r\n                                        value={transaction.status_commets} \r\n                                        className={`form-control ${!transaction.status_commets && touched && 'is-invalid'} ${transaction.status_commets && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Item\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}>\r\n                            </FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: reportType => dispatch(SetReportType(reportType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionItem);\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CountryCodeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'AD', description:'ANDORRA '},\r\n                {value: 'AE', description:'UNITED ARAB EMIRATES'},\r\n                {value: 'AF', description:'AFGHANISTAN '},\r\n                {value: 'AG', description:'ANTIGUA AND BARBUDA '},\r\n                {value: 'AI', description:'ANGUILLA '},\r\n                {value: 'AL', description:' ALBANIA '},\r\n                {value: 'AM', description:'ARMENIA '},\r\n                {value: 'AN', description:'NETHERLANDS ANTILLES '},\r\n                {value: 'AO', description:'ANGOLA '},\r\n                {value: 'AQ', description:'ANTARCTICA '},\r\n                {value: 'AR', description:'ARGENTINA '},\r\n                {value: 'AS', description:'AMERICAN SAMOA '},\r\n                {value: 'AT', description:'AUSTRIA '},\r\n                {value: 'AU', description:'AUSTRALIA '},\r\n                {value: 'AW', description:'ARUBA '},\r\n                {value: 'AX', description:'ÅLAND ISLANDS '},\r\n                {value: 'AZ', description:'AZERBAIJAN '},\r\n                {value: 'BA', description:'BOSNIA AND HERZEGOVINA '},\r\n                {value: 'BB', description:'BARBADOS '},\r\n                {value: 'BD', description:'BANGLADESH '},\r\n                {value: 'BE', description:'BELGIUM '},\r\n                {value: 'BF', description:'BURKINA FASO '},\r\n                {value: 'BG', description:'BULGARIA '},\r\n                {value: 'BH', description:'BAHRAIN '},\r\n                {value: 'BI', description:'BURUNDI '},\r\n                {value: 'BJ', description:'BENIN '},\r\n                {value: 'BM', description:'BERMUDA '},\r\n                {value: 'BN', description:'BRUNEI DARUSSALAM'},\r\n                {value: 'BO', description:'BOLIVIA '},\r\n                {value: 'BR', description:'BRAZIL '},\r\n                {value: 'BS', description:'BAHAMAS '},\r\n                {value: 'BT', description:'BHUTAN '},\r\n                {value: 'BU', description:'BURMA'},\r\n                {value: 'BV', description:'BOUVET ISLAND '},\r\n                {value: 'BW', description:'BOTSWANA '},\r\n                {value: 'BY', description:'BELARUS'},\r\n                {value: 'BZ', description:'BELIZE '},\r\n                {value: 'CA', description:'CANADA '},\r\n                {value: 'CC', description:'COCOS (KEELING) ISLANDS'},\r\n                {value: 'CD', description:'CONGO, THE DEMOCRATIC REPUBLIC OF THE'},\r\n                {value: 'CF', description:'CENTRAL AFRICAN REPUBLIC '},\r\n                {value: 'CG', description:'CONGO '},\r\n                {value: 'CH', description:'SWITZERLAND '},\r\n                {value: 'CI', description:'COTE DIVOIRE'},\r\n                {value: 'CK', description:'COOK ISLANDS '},\r\n                {value: 'CL', description:'CHILE '},\r\n                {value: 'CM', description:'CAMEROON '},\r\n                {value: 'CN', description:'CHINA '},\r\n                {value: 'CO', description:'COLOMBIA '},\r\n                {value: 'CR', description:'COSTA RICA '},\r\n                {value: 'CS', description:'SERBIA AND MONTENEGRO'},\r\n                {value: 'CU', description:'CUBA '},\r\n                {value: 'CV', description:'CAPE VERDE '},\r\n                {value: 'CX', description:'CHRISTMAS ISLAND '},\r\n                {value: 'CY', description:'CYPRUS '},\r\n                {value: 'CZ', description:'CZECH REPUBLIC '},\r\n                {value: 'DE', description:'GERMANY '},\r\n                {value: 'DJ', description:'DJIBOUTI '},\r\n                {value: 'DK', description:'DENMARK '},\r\n                {value: 'DM', description:'DOMINICA '},\r\n                {value: 'DO', description:'DOMINICAN REPUBLIC '},\r\n                {value: 'DZ', description:'ALGERIA '},\r\n                {value: 'EC', description:'ECUADOR '},\r\n                {value: 'EE', description:'ESTONIA '},\r\n                {value: 'EG', description:'EGYPT '},\r\n                {value: 'EH', description:'WESTERN SAHARA '},\r\n                {value: 'ER', description:'ERITREA '},\r\n                {value: 'ES', description:'SPAIN '},\r\n                {value: 'ET', description:'ETHIOPIA '},\r\n                {value: 'FI', description:'FINLAND '},\r\n                {value: 'FJ', description:'FIJI '},\r\n                {value: 'FK', description:'FALKLAND ISLANDS (MALVINAS)'},\r\n                {value: 'FM', description:'MICRONESIA, FEDERATED STATES OF'},\r\n                {value: 'FO', description:'FAROE ISLANDS '},\r\n                {value: 'FR', description:'FRANCE '},\r\n                {value: 'GA', description:'GABON '},\r\n                {value: 'GB', description:'UNITED KINGDOM '},\r\n                {value: 'GD', description:'GRENADA '},\r\n                {value: 'GE', description:'GEORGIA '},\r\n                {value: 'GF', description:'FRENCH GUIANA '},\r\n                {value: 'GG', description:'GUERNSEY '},\r\n                {value: 'GH', description:'GHANA '},\r\n                {value: 'GI', description:'GIBRALTAR '},\r\n                {value: 'GL', description:'GREENLAND '},\r\n                {value: 'GM', description:'GAMBIA '},\r\n                {value: 'GN', description:'GUINEA '},\r\n                {value: 'GP', description:'GUADELOUPE'},\r\n                {value: 'GQ', description:'EQUATORIAL GUINEA'},\r\n                {value: 'GR', description:'GREECE '},\r\n                {value: 'GS', description:'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS'},\r\n                {value: 'GT', description:'GUATEMALA '},\r\n                {value: 'GU', description:'GUAM '},\r\n                {value: 'GW', description:'GUINEA-BISSAU '},\r\n                {value: 'GY', description:'GUYANA '},\r\n                {value: 'HK', description:'HONG KONG '},\r\n                {value: 'HM', description:'HEARD ISLAND AND MCDONALD ISLANDS'},\r\n                {value: 'HN', description:'HONDURAS '},\r\n                {value: 'HR', description:'CROATIA '},\r\n                {value: 'HT', description:'HAITI '},\r\n                {value: 'HU', description:'HUNGARY '},\r\n                {value: 'ID', description:'INDONESIA '},\r\n                {value: 'IE', description:'IRELAND '},\r\n                {value: 'IL', description:'ISRAEL '},\r\n                {value: 'IM', description:'ISLE OF MAN'},\r\n                {value: 'IN', description:'INDIA '},\r\n                {value: 'IO', description:'BRITISH INDIAN OCEAN TERRITORY '},\r\n                {value: 'IQ', description:'IRAQ '},\r\n                {value: 'IR', description:'IRAN, ISLAMIC REPUBLIC OF'},\r\n                {value: 'IS', description:'ICELAND '},\r\n                {value: 'IT', description:'ITALY '},\r\n                {value: 'JE', description:'JERSEY '},\r\n                {value: 'JM', description:'JAMAICA '},\r\n                {value: 'JO', description:'JORDAN '},\r\n                {value: 'JP', description:'JAPAN '},\r\n                {value: 'KE', description:'KENYA '},\r\n                {value: 'KG', description:'KYRGYZSTAN '},\r\n                {value: 'KH', description:'CAMBODIA '},\r\n                {value: 'KI', description:'KIRIBATI '},\r\n                {value: 'KM', description:'COMOROS '},\r\n                {value: 'KN', description:'SAINT KITTS AND NEVIS '},\r\n                {value: 'KP', description:'KOREA, DEMOCRATIC PEOPLES REPUBLIC OF'},\r\n                {value: 'KR', description:'KOREA, REPUBLIC OF'},\r\n                {value: 'KS', description:'KOSOVO'},\r\n                {value: 'KW', description:'KUWAIT '},\r\n                {value: 'KY', description:'CAYMAN ISLANDS '},\r\n                {value: 'KZ', description:'KAZAKHSTAN '},\r\n                {value: 'LA', description:'LAO PEOPLES DEMOCRATIC REPUBLIC'},\r\n                {value: 'LB', description:'LEBANON '},\r\n                {value: 'LC', description:'SAINT LUCIA '},\r\n                {value: 'LI', description:'LIECHTENSTEIN '},\r\n                {value: 'LK', description:'SRI LANKA '},\r\n                {value: 'LR', description:'LIBERIA '},\r\n                {value: 'LS', description:'LESOTHO '},\r\n                {value: 'LT', description:'LITHUANIA '},\r\n                {value: 'LU', description:'LUXEMBOURG '},\r\n                {value: 'LV', description:' LATVIA '},\r\n                {value: 'LY', description:'LIBYAN ARAB JAMAHIRIYA'},\r\n                {value: 'MA', description:'MOROCCO'},\r\n                {value: 'MC', description:'MONACO '},\r\n                {value: 'MD', description:'MOLDOVA, REPUBLIC OF'},\r\n                {value: 'ME', description:'MONTENEGRO '},\r\n                {value: 'MG', description:'MADAGASCAR '},\r\n                {value: 'MH', description:'MARSHALL ISLANDS '},\r\n                {value: 'MK', description:'MACEDONIA '},\r\n                {value: 'ML', description:'MALI '},\r\n                {value: 'MM', description:'MYANMAR '},\r\n                {value: 'MN', description:'MONGOLIA '},\r\n                {value: 'MO', description:'MACAO '},\r\n                {value: 'MP', description:'NORTHERN MARIANA ISLANDS '},\r\n                {value: 'MQ', description:'MARTINIQUE '},\r\n                {value: 'MR', description:'MAURITANIA '},\r\n                {value: 'MS', description:'MONTSERRAT '},\r\n                {value: 'MT', description:'MALTA '},\r\n                {value: 'MU', description:'MAURITIUS '},\r\n                {value: 'MV', description:'MALDIVES '},\r\n                {value: 'MW', description:'MALAWI '},\r\n                {value: 'MX', description:'MEXICO '},\r\n                {value: 'MY', description:'MALAYSIA '},\r\n                {value: 'MZ', description:'MOZAMBIQUE '},\r\n                {value: 'NA', description:'NAMIBIA '},\r\n                {value: 'NC', description:'NEW CALEDONIA '},\r\n                {value: 'NE', description:'NIGER '},\r\n                {value: 'NF', description:'NORFOLK ISLAND '},\r\n                {value: 'NG', description:'NIGERIA '},\r\n                {value: 'NI', description:'NICARAGUA '},\r\n                {value: 'NL', description:'NETHERLANDS '},\r\n                {value: 'NO', description:'NORWAY '},\r\n                {value: 'NP', description:'NEPAL '},\r\n                {value: 'NR', description:'NAURU '},\r\n                {value: 'NU', description:'NIUE '},\r\n                {value: 'NZ', description:'NEW ZEALAND '},\r\n                {value: 'OM', description:' OMAN '},\r\n                {value: 'PA', description:'PANAMA '},\r\n                {value: 'PE', description:'PERU '},\r\n                {value: 'PF', description:'FRENCH POLYNESIA '},\r\n                {value: 'PG', description:'PAPUA NEW GUINEA'},\r\n                {value: 'PH', description:'PHILIPPINES '},\r\n                {value: 'PK', description:'PAKISTAN '},\r\n                {value: 'PL', description:'POLAND '},\r\n                {value: 'PM', description:'SAINT PIERRE AND MIQUELON '},\r\n                {value: 'PN', description:'PITCAIRN'},\r\n                {value: 'PR', description:'PUERTO RICO '},\r\n                {value: 'PS', description:'PALESTINIAN TERRITORY, OCCUPIED'},\r\n                {value: 'PT', description:'PORTUGAL '},\r\n                {value: 'PW', description:'PALAU '},\r\n                {value: 'PY', description:'PARAGUAY '},\r\n                {value: 'QA', description:'QATAR '},\r\n                {value: 'RE', description:'REUNION '},\r\n                {value: 'RO', description:'ROMANIA'},\r\n                {value: 'RS', description:'SERBIA '},\r\n                {value: 'RU', description:'RUSSIAN FEDERATION '},\r\n                {value: 'RW', description:'RWANDA '},\r\n                {value: 'SA', description:'SAUDI ARABIA '},\r\n                {value: 'SB', description:'SOLOMON ISLANDS '},\r\n                {value: 'SC', description:'SEYCHELLES '},\r\n                {value: 'SD', description:'SUDAN '},\r\n                {value: 'SE', description:'SWEDEN '},\r\n                {value: 'SG', description:'SINGAPORE '},\r\n                {value: 'SH', description:'SAINT HELENA '},\r\n                {value: 'SI', description:'SLOVENIA '},\r\n                {value: 'SJ', description:'SVALBARD AND JAN MAYEN'},\r\n                {value: 'SK', description:'SLOVAKIA '},\r\n                {value: 'SL', description:'SIERRA LEONE'},\r\n                {value: 'SM', description:'SAN MARINO '},\r\n                {value: 'SN', description:'SENEGAL '},\r\n                {value: 'SO', description:'SOMALIA '},\r\n                {value: 'SR', description:'SURINAME '},\r\n                {value: 'ST', description:'SAO TOME AND PRINCIPE '},\r\n                {value: 'SV', description:'EL SALVADOR '},\r\n                {value: 'SY', description:'SYRIAN ARAB REPUBLIC '},\r\n                {value: 'SZ', description:'SWAZILAND '},\r\n                {value: 'TC', description:'TURKS AND CAICOS ISLANDS '},\r\n                {value: 'TD', description:'CHAD '},\r\n                {value: 'TF', description:'FRENCH SOUTHERN TERRITORIES'},\r\n                {value: 'TG', description:'TOGO '},\r\n                {value: 'TH', description:'THAILAND '},\r\n                {value: 'TJ', description:'TAJIKISTAN '},\r\n                {value: 'TK', description:'TOKELAU'},\r\n                {value: 'TL', description:'TIMOR-LESTE'},\r\n                {value: 'TM', description:'TURKMENISTAN '},\r\n                {value: 'TN', description:'TUNISIA '},\r\n                {value: 'TO', description:'TONGA '},\r\n                {value: 'TP', description:'EAST TIMOR'},\r\n                {value: 'TR', description:'TURKEY '},\r\n                {value: 'TT', description:'TRINIDAD AND TOBAGO '},\r\n                {value: 'TV', description:'TUVALU '},\r\n                {value: 'TW', description:'TAIWAN, PROVINCE OF CHINA'},\r\n                {value: 'TZ', description:'TANZANIA, UNITED REPUBLIC OF'},\r\n                {value: 'UA', description:'UKRAINE '},\r\n                {value: 'UG', description:'UGANDA '},\r\n                {value: 'UM', description:'UNITED STATES MINOR OUTLYING ISLANDS'},\r\n                {value: 'US', description:'UNITED STATES'},\r\n                {value: 'UY', description:'URUGUAY '},\r\n                {value: 'UZ', description:'UZBEKISTAN '},\r\n                {value: 'VA', description:'HOLY SEE (VATICAN CITY STATE)'},\r\n                {value: 'VC', description:'SAINT VINCENT AND THE GRENADINES'},\r\n                {value: 'VE', description:'VENEZUELA '},\r\n                {value: 'VG', description:'VIRGIN ISLANDS, BRITISH'},\r\n                {value: 'VI', description:'VIRGIN ISLANDS, U.S. '},\r\n                {value: 'VN', description:'VIET NAM'},\r\n                {value: 'VU', description:'VANUATU '},\r\n                {value: 'WF', description:'WALLIS AND FUTUNA'},\r\n                {value: 'WS', description:'SAMOA '},\r\n                {value: 'YE', description:'YEMEN '},\r\n                {value: 'YT', description:'MAYOTTE '},\r\n                {value: 'YU', description:'YUGOSLAVIA'},\r\n                {value: 'ZA', description:'SOUTH AFRICA '},\r\n                {value: 'ZM', description:'ZAMBIA '},\r\n                {value: 'ZR', description:'ZAIRE'},\r\n                {value: 'ZW', description:'ZIMBABWE'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CountryCodeEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass FundsTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Deposit'},\r\n                {value: 'B', description:'Electronic Funds Transfer'},\r\n                {value: 'E', description:'Bank Draft'},\r\n                {value: 'F', description:'Managers Cheque'},\r\n                {value: 'G', description:'Travelers cheque'},\r\n                {value: 'H', description:'Life insurance policy'},\r\n                {value: 'K', description:'Cash'},\r\n                {value: 'L', description:'From Account'},\r\n                {value: 'O', description:'Other'},\r\n                {value: 'P', description:'Cheque'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default FundsTypeEnum;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass PartyTypeEnum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: [\r\n                { value: 'Person', description: 'Person' },\r\n                { value: 'Account', description: 'Account' },\r\n                { value: 'Entity', description: 'Entity' }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n\r\n        return (\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default PartyTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport PartyTypeEnum from '../../goaml-enums/party-type-enum/party-type-enum.components';\r\n\r\n\r\nconst TransactionToPartyInfo = ({ name, transRef, partyType, handleSavePartyInfo, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState({\r\n        \"partyType\": '',\r\n        \"partyInfo\": {\r\n            \"to_funds_code\": '',\r\n            \"to_funds_comment\": '',\r\n            \"to_foreign_currency\": {\r\n                \"foreign_currency_code\": '',\r\n                \"foreign_amount\": '',\r\n                \"foreign_exchange_rate\": '',\r\n            },\r\n            \"to_country\": ''\r\n        }\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        console.log('great', fromPtyInfo)\r\n       const fromPtyInfo = handleSavePartyInfo(transRef, partyType, transpartyInfo);\r\n        if (fromPtyInfo === \"partyType\")\r\n            setTranspartyInfo({ ...transpartyInfo, fromPtyInfo });\r\n        else if (fromPtyInfo === \"foreign_currency_code\" || fromPtyInfo === \"foreign_amount\" || fromPtyInfo === \"foreign_exchange_rate\")\r\n            setTranspartyInfo({\r\n                ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, \r\n                    to_foreign_currency: { ...transpartyInfo.partyInfo.to_foreign_currency, fromPtyInfo }}\r\n            });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, fromPtyInfo } });\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        // console.log(\"Hello: \", transpartyInfo);\r\n    }\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, t_conductor: conductor } });\r\n    }\r\n\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum \r\n                                                name=\"to_funds_code\" \r\n                                                label=\"Funds Code*\" \r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.to_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)} \r\n                                                className={`form-control ${!transpartyInfo.to_funds_code && touched && 'is-invalid'} ${transpartyInfo.to_funds_code && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput \r\n                                                label=\"Funds Comment\" \r\n                                                name=\"to_funds_comment\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                value={transpartyInfo.from_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.to_funds_comment && touched && 'is-invalid'} ${transpartyInfo.to_funds_comment && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum \r\n                                                label=\"Country*\" \r\n                                                name=\"to_country\" \r\n                                                handleChange={handleChange}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                value={transpartyInfo.to_country}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.to_country && touched && 'is-invalid'} ${transpartyInfo.to_country && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <PartyTypeEnum \r\n                                                handleChange={handleChange} \r\n                                                label=\"Related Party Type*\" \r\n                                                name=\"partyType\"\r\n                                                value={transpartyInfo.partyType}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.partyType && touched && 'is-invalid'} ${transpartyInfo.partyType && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum \r\n                                                handleChange={handleChange} \r\n                                                label=\"Currency Code*\" \r\n                                                name=\"foreign_currency_code\"\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                value={transpartyInfo.foreign_currency_code}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.foreign_currency_code && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount \r\n                                                handleChange={handleChange} \r\n                                                label=\"Exchange Rate*\" \r\n                                                name=\"foreign_exchange_rate\"\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                value={transpartyInfo.foreign_exchange_rate}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.foreign_exchange_rate && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount \r\n                                                handleChange={handleChange} \r\n                                                label=\"Amount*\" \r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`form-control ${!transpartyInfo.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.foreign_amount && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions saveText=\"Save Party Overview\" handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionToPartyInfo;\r\n","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass PersonTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Persons Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonTable;","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupText,\r\n    CLabel  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst FormEmail = ({ label, name, placeholder, handleChange, ...otherProps }) => (\r\n  <CFormGroup>\r\n          {label ? (\r\n            <CLabel htmlFor={name}>{label}</CLabel>\r\n          ) : null}\r\n            <CInputGroup>\r\n                <CInput type=\"email\" id={name} name={name} onChange={handleChange} {...otherProps} placeholder={placeholder} />\r\n                <CInputGroupAppend>\r\n                <CInputGroupText>\r\n                    <CIcon name=\"cil-envelope-closed\" />\r\n                </CInputGroupText>\r\n                </CInputGroupAppend>\r\n            </CInputGroup>\r\n        </CFormGroup>\r\n);\r\n\r\nexport default FormEmail;\r\n","import React from 'react';\r\nimport {\r\n    CFormGroup,\r\n    CLabel,\r\n    CSelect\r\n  } from '@coreui/react'\r\n  \r\nclass FormGenderSelect extends React.Component {\r\n    constructor() {\r\n      super();\r\n    }\r\n  \r\n    render() {\r\n      const { label, name, handleChange, ...otherProps } = this.props;\r\n      const options = [\r\n        {value:\"0\", description: \"--select--\"},\r\n        {value:\"M\", description: \"Male\"},\r\n        {value:\"F\", description: \"Female\"}\r\n      ];\r\n\r\n      return (\r\n        <CFormGroup>\r\n            {label ? (\r\n                <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n            {options && options.length > 0 && (\r\n                <CSelect custom name={name} id={name} onChange={handleChange}>\r\n                    {options.map((option, index) => {\r\n                        return <option value={option.value}>{option.description}</option>;\r\n                    })}\r\n                </CSelect>\r\n            )}\r\n        </CFormGroup>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FormGenderSelect;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass AddressTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Addresses Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddressTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass ContactTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'B', description:'Business'},\r\n                {value: 'P', description:'Private'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\n\r\nconst TemplateAddress = ({ name, handleAddressSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateAddress, setComponentState] = React.useState({\r\n        \"address_type\": '',\r\n        \"address\": '',\r\n        \"town\": '',\r\n        \"city\": null,\r\n        \"zip\": '',\r\n        \"country_code\": '',\r\n        \"state\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n      const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleSaveClick = () => {\r\n        handleAddressSave(templateAddress);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateAddress, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateAddress);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"address_type\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address_type} \r\n                                        className={`form-control ${!templateAddress.address_type && touched && 'is-invalid'} ${templateAddress.address_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"City*\" \r\n                                        name=\"city\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.city} \r\n                                        className={`form-control ${!templateAddress.city && touched && 'is-invalid'} ${templateAddress.city && 'is-valid'}`}\r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Nationality1\"\r\n                                        name=\"country_code\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.country_code} \r\n                                        className={`form-control ${!templateAddress.country_code && touched && 'is-invalid'} ${templateAddress.country_code && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Address*\" \r\n                                        name=\"address\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.address} \r\n                                        className={`form-control ${!templateAddress.address && touched && 'is-invalid'} ${templateAddress.address && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Province/State\" \r\n                                        name=\"state\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.state} \r\n                                        className={`form-control ${!templateAddress.state && touched && 'is-invalid'} ${templateAddress.state && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Town\" \r\n                                        name=\"town\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange} \r\n                                        value={templateAddress.town} \r\n                                        className={`form-control ${!templateAddress.town && touched && 'is-invalid'} ${templateAddress.town && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Postal/Zip\" \r\n                                        name=\"zip\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.zip} \r\n                                        className={`form-control ${!templateAddress.zip && touched && 'is-invalid'} ${templateAddress.zip && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        handleChange={handleChange}\r\n                                        value={templateAddress.comments} \r\n                                        className={`form-control ${!templateAddress.comments && touched && 'is-invalid'} ${templateAddress.comments && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Address\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TemplateAddress;","import React from 'react';\r\nimport AddressTable from '../../goaml-tables/table-address.component'\r\nimport AddressTemplate from '../template-address/template-address.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n} from '@coreui/react'\r\n\r\nconst ReportAddresses = ({ name, label, handleAddressSave, ...otherProps }) => {\r\n\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab1\">\r\n                                        {tab1Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"Tab2\">\r\n                                        {tab2Title}\r\n                                    </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTemplate name=\"Add an Address\" handleAddressSave={handleAddressSave}></AddressTemplate>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <AddressTable name={name} />\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportAddresses;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass IdentificationTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Identification Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default IdentificationTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass IdentifierTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Drivers license'},\r\n                {value: 'B', description:'National Identity Card'},\r\n                {value: 'C', description:'Passport'},\r\n                {value: 'E', description:'Voter’s Registration Card'},\r\n                {value: 'R', description:'RC No'},\r\n                {value: 'O', description:'3rd Party ID'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default IdentifierTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport IdentifierTypeEnum from '../../goaml-enums/identifier-type-enum/identifier-type-enum.component';\r\n\r\nconst IdentificationTemplate = ({ name, handleIdentificationSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateIdentification, setComponentState] = React.useState({\r\n        \"type\": 0,\r\n        \"number\": '',\r\n        \"issue_date\": '',\r\n        \"expiry_date\": '',\r\n        \"issue_dateSpecified\": false,\r\n        \"expiry_dateSpecified\": false,\r\n        \"issued_by\": '',\r\n        \"issue_country\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const handleSaveClick = () => {\r\n        handleIdentificationSave(templateIdentification);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateIdentification, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateIdentification);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <IdentifierTypeEnum \r\n                                        label=\"Type*\" \r\n                                        name=\"type\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.type} \r\n                                        className={`form-control ${!templateIdentification.type && touched && 'is-invalid'}${templateIdentification.type && 'is-valid'}`}\r\n                                    ></IdentifierTypeEnum>\r\n                                    <FormInput \r\n                                        label=\"Issued by\" \r\n                                        name=\"issued_by\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.issued_by} \r\n                                        className={`form-control ${!templateIdentification.issued_by && touched && 'is-invalid'}${templateIdentification.issued_by && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Number*\" \r\n                                        name=\"number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.number} \r\n                                        className={`form-control ${!templateIdentification.number && touched && 'is-invalid'}${templateIdentification.number && 'is-valid'}`}  \r\n                                    />\r\n                                    <CountryCodeEnum \r\n                                        label=\"Issue Country*\" \r\n                                        name=\"issue_country\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.issue_country} \r\n                                        className={`form-control ${!templateIdentification.issue_country && touched && 'is-invalid'}${templateIdentification.issue_country && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormDate \r\n                                        label=\"Issue Date\" \r\n                                        name=\"issue_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.issue_date} \r\n                                        className={`form-control ${!templateIdentification.issue_date && touched && 'is-invalid'}${templateIdentification.issue_date && 'is-valid'}`} \r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Expiry Date\" \r\n                                        name=\"expiry_date\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus} \r\n                                        value={templateIdentification.expiry_date} \r\n                                        className={`form-control ${!templateIdentification.expiry_date && touched && 'is-invalid'}${templateIdentification.expiry_date && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        value={templateIdentification.comments} \r\n                                        className={`form-control ${!templateIdentification.comments && touched && 'is-invalid'}${templateIdentification.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Identification\" \r\n                                handleSaveClick={handleSaveClick} \r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default IdentificationTemplate;","import React from 'react';\r\nimport IdentificationTable from '../../goaml-tables/table-identity.component'\r\nimport IdentificationTemplate from '../template-identification/template-identification.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst ReportIdentifications = ({ name, label, handleIdentificationSave, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTemplate name=\"Add Identification Document\" handleIdentificationSave={handleIdentificationSave}></IdentificationTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <IdentificationTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportIdentifications;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass PhoneTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Phone Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass CommunicationTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'L', description:'Landline Phone'},\r\n                {value: 'M', description:'Mobile Phone'},\r\n                {value: 'F', description:'Fax'},\r\n                {value: 'S', description:'Satellite Phone'},\r\n                {value: 'P', description:'Pager'},\r\n                {value: 'E', description:'Email'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default CommunicationTypeEnum;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CommunicationTypeEnum from '../../goaml-enums/communication-type-enum/communication-type-enum.component';\r\nimport ContactTypeEnum from '../../goaml-enums/contact-type-enum/contact-type-enum.component';\r\n\r\nconst PhoneTemplate = ({ name, handlePhoneSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const [templatePone, setComponentState] = React.useState({\r\n        \"tph_contact_type\": '',\r\n        \"tph_communication_type\": '',\r\n        \"tph_country_prefix\": '',\r\n        \"tph_number\": '',\r\n        \"tph_extension\": '',\r\n        \"comments\": ''\r\n      });\r\n\r\n      const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n      const checkInputs = (e, inputState) => {\r\n          let error = false;\r\n          let val = {};\r\n          for (const [key, value] of Object.entries(inputState)) {\r\n              if (e.target.name === key) {\r\n                  value === '' ? error = true : error = false; \r\n                  val = key;\r\n              }\r\n          }\r\n          setShowError({\r\n              isEmpty: error,\r\n              value: val\r\n           });\r\n      }\r\n\r\n    const handleSaveClick = () => {\r\n        handlePhoneSave(templatePone);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templatePone, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templatePone);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <ContactTypeEnum\r\n                                        label=\"Contact Type*\"\r\n                                        name=\"tph_contact_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.tph_contact_type}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.tph_contact_type && touched && 'is-invalid'} ${templatePone.tph_contact_type && 'is-valid'}`}\r\n                                    ></ContactTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Number*\"\r\n                                        name=\"tph_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.tph_number}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.tph_number && touched && 'is-invalid'} ${templatePone.tph_number && 'is-valid'}`} \r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <CommunicationTypeEnum\r\n                                        label=\"Comm. Type*\"\r\n                                        name=\"tph_communication_type\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.tph_communication_type}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.tph_communication_type && touched && 'is-invalid'} ${templatePone.tph_communication_type && 'is-valid'}`}\r\n                                    ></CommunicationTypeEnum>\r\n                                    <FormInput\r\n                                        label=\"Extension\"\r\n                                        name=\"tph_extension\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.tph_extension}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.tph_extension && touched && 'is-invalid'} ${templatePone.tph_extension && 'is-valid'}`}\r\n                                    />                                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Country Prefix*\"\r\n                                        name=\"tph_country_prefix\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.tph_country_prefix}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.tph_country_prefix && touched && 'is-invalid'} ${templatePone.tph_country_prefix && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea\r\n                                        label=\"Comments\"\r\n                                        name=\"comments\"\r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={templatePone.comments}\r\n                                        onFocus={onFocus}\r\n                                        onBlur={onBlur}\r\n                                        className={`form-control ${!templatePone.comments && touched && 'is-invalid'} ${templatePone.comments && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions \r\n                                saveText=\"Save Phone\"\r\n                                handleSaveClick={handleSaveClick}\r\n                                handleCancelClick={handleCancelClick}\r\n                            ></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default PhoneTemplate;","import React from 'react';\r\nimport PhoneTable from '../../goaml-tables/table-phone.component'\r\nimport PhoneTemplate from '../template-phone/template-phone.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n  \r\n  const ReportPhones = ({ name, handlePhoneSave, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTemplate name=\"Add a Phone\" handlePhoneSave={handlePhoneSave}></PhoneTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PhoneTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportPhones;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormEmail from '../../form-inputs/form-email.component';\r\nimport FormGenderSelect from '../../form-inputs/form-gender-select.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport ReportAddresses from '../../goaml-sections/report-addresses/report-addresses.component';\r\nimport ReportIdentifications from \"../../goaml-sections/report-identifications/report-identifications.component\";\r\nimport ReportPhones from '../../goaml-sections/report-phones/report-phones.components';\r\n\r\n\r\nconst PersonTemplate = ({ label, name, alias,  transRef, partyType, OnSave, handleSaveInfoClick, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const [templatePerson, setComponentState] = React.useState({\r\n        \"gender\": '',\r\n        \"title\": '',\r\n        \"first_name\": '',\r\n        \"middle_name\": '',\r\n        \"prefix\": '',\r\n        \"last_name\": '',\r\n        \"birthdate\": '',\r\n        \"birth_place\": '',\r\n        \"mothers_name\": '',\r\n        \"alias\": '',\r\n        \"ssn\": '',\r\n        \"passport_number\": '',\r\n        \"passport_country\": '',\r\n        \"id_number\": '',\r\n        \"nationality1\": '',\r\n        \"nationality2\": '',\r\n        \"nationality3\": '',\r\n        \"residence\": '',\r\n        \"phones\": [],\r\n        \"addresses\": [],\r\n        \"email\": '',\r\n        \"occupation\": '',\r\n        \"employer_name\": '',\r\n        \"employer_address_id\": '',\r\n        \"employer_phone_id\": '',\r\n        \"identification\": [],\r\n        \"date_deceased\":'',\r\n        \"tax_number\": '',\r\n        \"tax_reg_number\": '',\r\n        \"source_of_wealth\": '',\r\n        \"comments\": ''\r\n    })\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templatePerson, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        console.log(templatePerson);\r\n        OnSave(transRef, partyType, templatePerson);\r\n    }\r\n    \r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templatePerson);\r\n    }\r\n\r\n    const handlePhoneSave = (phone) => {\r\n        templatePerson.phones.push(phone)\r\n    }\r\n\r\n    const handleAddressSave = (address) => {\r\n        templatePerson.addresses.push(address)\r\n    }\r\n\r\n    const handleIdentificationSave = (identification) => {\r\n        templatePerson.identification.push(identification)\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>      {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"First Name*\" \r\n                                                name=\"first_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.first_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.first_name && touched && 'is-invalid'} ${templatePerson.first_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Title*\" \r\n                                                name=\"title\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.title}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.title && touched && 'is-invalid'} ${templatePerson.title && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Alias/Known As\" \r\n                                                name=\"alias\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.first_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.first_name && touched && 'is-invalid'} ${templatePerson.first_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Mother's Name\" \r\n                                                name=\"mothers_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.mothers_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.mothers_name && touched && 'is-invalid'} ${templatePerson.mothers_name && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Nationality 1\" \r\n                                                name=\"nationality1\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.nationality1}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.nationality1 && touched && 'is-invalid'} ${templatePerson.nationality1 && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Passport\" \r\n                                                name=\"passport_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.passport_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.passport_number && touched && 'is-invalid'} ${templatePerson.passport_number && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Source of Wealth\" \r\n                                                name=\"source_of_wealth\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.source_of_wealth}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.source_of_wealth && touched && 'is-invalid'} ${templatePerson.source_of_wealth && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Middle Name\" \r\n                                                name=\"middle_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.middle_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.middle_name && touched && 'is-invalid'} ${templatePerson.middle_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormGenderSelect \r\n                                                label=\"Gender\" \r\n                                                name=\"gender\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.gender}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.gender && touched && 'is-invalid'} ${templatePerson.gender && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormDate \r\n                                                label=\"Birth Date\" \r\n                                                name=\"birthdate\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.birthdate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.birthdate && touched && 'is-invalid'} ${templatePerson.birthdate && 'is-valid'}`}  \r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Country of Residence\" \r\n                                                name=\"residence\"\r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.residence}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.residence && touched && 'is-invalid'} ${templatePerson.residence && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"Nationality 2\" \r\n                                                name=\"nationality2\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.nationality2}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.nationality2 && touched && 'is-invalid'} ${templatePerson.nationality2 && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Occupation\" \r\n                                                name=\"occupation\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.occupation}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.occupation && touched && 'is-invalid'} ${templatePerson.occupation && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Employer Name\" \r\n                                                name=\"employer_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.employer_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.employer_name && touched && 'is-invalid'} ${templatePerson.employer_name && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"SurName/Last Name\" \r\n                                                name=\"last_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.last_name}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.last_name && touched && 'is-invalid'} ${templatePerson.last_name && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Prefix\" \r\n                                                name=\"prefix\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.prefix}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.prefix && touched && 'is-invalid'} ${templatePerson.prefix && 'is-valid'}`}  \r\n                                                />\r\n                                            <FormInput \r\n                                                label=\"Birth Place\" \r\n                                                name=\"birth_place\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.birth_place}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.birth_place && touched && 'is-invalid'} ${templatePerson.birth_place && 'is-valid'}`} \r\n                                            />\r\n                                            <FormEmail \r\n                                                label=\"Email address\" \r\n                                                name=\"email\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.email}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.email && touched && 'is-invalid'} ${templatePerson.email && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Social Security Number\" \r\n                                                name=\"ssn\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.ssn}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.ssn && touched && 'is-invalid'} ${templatePerson.ssn && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Number\" \r\n                                                name=\"tax_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.tax_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.tax_number && touched && 'is-invalid'} ${templatePerson.tax_number && 'is-valid'}`}  \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Reg. Number\" \r\n                                                name=\"tax_reg_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.tax_reg_number}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, templatePerson)} \r\n                                                className={`from-control ${!templatePerson.tax_reg_number && touched && 'is-invalid'} ${templatePerson.tax_reg_number && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportPhones \r\n                                                label=\"Phone\" \r\n                                                name=\"phones\" \r\n                                                handlePhoneSave={handlePhoneSave}\r\n                                                value={templatePerson.phones}\r\n                                            >\r\n                                            </ReportPhones>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportAddresses \r\n                                                label=\"Address\" \r\n                                                name=\"addresses\" \r\n                                                handleAddressSave={handleAddressSave}\r\n                                                value={templatePerson.addresses}\r\n                                            >\r\n                                            </ReportAddresses>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportIdentifications \r\n                                                label=\"Identification\" \r\n                                                name=\"identification\" \r\n                                                handleIdentificationSave={handleIdentificationSave}\r\n                                                value={templatePerson.identification}\r\n                                            >\r\n                                            </ReportIdentifications>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <CRow>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormRadioText\r\n                                                        label=\"Deceased?\" \r\n                                                        name=\"deceased\" \r\n                                                        width=\"6\" items={[\"Yes\", \"No\"]} \r\n                                                        handleChange={handleChange}\r\n                                                    />\r\n                                                </CCol>\r\n                                                <CCol xs=\"6\">\r\n                                                    <FormDate \r\n                                                        label=\"Date Deceased\" \r\n                                                        name=\"date_deceased\" \r\n                                                        handleChange={handleChange}\r\n                                                        value={templatePerson.date_deceased} \r\n                                                    />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Comments\" \r\n                                                name=\"comments\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={templatePerson.comments} \r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions \r\n                                        saveText={`Save ${alias}`} \r\n                                        handleSaveClick={handleSaveClick} \r\n                                        handleCancelClick={handleCancelClick}>\r\n                                    </FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default PersonTemplate;","import React from 'react';\r\nimport PersonTable from '../../goaml-tables/table-person.component';\r\nimport PersonTemplate from '../template-person/template-person.component';\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionPersons = ({ name, label, alias, transRef, OnSave, partyType, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PersonTemplate transRef={transRef} OnSave={OnSave} partyType={partyType} label={label} name={name} alias={alias}></PersonTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <PersonTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionPersons;\r\n","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormAmount from 'src/components/form-inputs/form-amount.component';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport FundsTypeEnum from '../../goaml-enums/funds-type-enum/funds-type-enum.component';\r\nimport PartyTypeEnum from '../../goaml-enums/party-type-enum/party-type-enum.components';\r\nimport TransactionPerson from '../transaction-person/transaction-person.component';\r\n\r\n\r\nconst TransactionFromPartyInfo =({ name, transRef, partyType, handleSavePartyInfo, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(true)\r\n    const [touched, setTouched] = React.useState(false);\r\n    // let radioItems = [\"Yes\", \"No\"];\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const [transpartyInfo, setTranspartyInfo] = React.useState({\r\n        \"partyType\": '',\r\n        \"partyInfo\": {\r\n            \"from_funds_code\": '',\r\n            \"from_funds_comment\": '',\r\n            \"from_foreign_currency\": {\r\n                \"foreign_currency_code\": '',\r\n                \"foreign_amount\": '',\r\n                \"foreign_exchange_rate\": '',\r\n            },\r\n            \"from_country\": ''\r\n        }\r\n    })\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-conductor\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // console.log(event.target);\r\n        const { name, value } = event.target;\r\n        setTranspartyInfo({ ...transpartyInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        console.log('great', fromPtyInfo)\r\n       const fromPtyInfo = handleSavePartyInfo(transRef, partyType, transpartyInfo);\r\n        if (fromPtyInfo == \"partyType\")\r\n            setTranspartyInfo({ ...transpartyInfo, fromPtyInfo });\r\n        else if (fromPtyInfo == \"foreign_currency_code\" || fromPtyInfo == \"foreign_amount\" || fromPtyInfo == \"foreign_exchange_rate\")\r\n            setTranspartyInfo({\r\n                ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, \r\n                    from_foreign_currency: { ...transpartyInfo.partyInfo.from_foreign_currency, fromPtyInfo }}\r\n            });\r\n        else\r\n            setTranspartyInfo({ ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, fromPtyInfo } });\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        // console.log(\"Hello: \", transpartyInfo);\r\n    }\r\n\r\n    const handleSaveConductor = (conductor) => {\r\n        setTranspartyInfo({ ...transpartyInfo, partyInfo: { ...transpartyInfo.partyInfo, t_conductor: conductor } });\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"6\">\r\n                                            <FundsTypeEnum \r\n                                                label=\"Funds Code*\" \r\n                                                name=\"from_funds_code\"\r\n                                                handleChange={handleChange} \r\n                                                value={transpartyInfo.from_funds_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)} \r\n                                                className={`from-control ${!transpartyInfo.from_funds_code && touched && 'is-invalid'} ${transpartyInfo.from_funds_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormInput \r\n                                                label=\"Funds Comment\" \r\n                                                name=\"from_funds_comment\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                value={transpartyInfo.from_funds_comment}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                className={`from-control ${!transpartyInfo.from_funds_comment && touched && 'is-invalid'} ${transpartyInfo.from_funds_comment && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <CountryCodeEnum \r\n                                                handleChange={handleChange} \r\n                                                label=\"Country*\" \r\n                                                name=\"from_country\"\r\n                                                value={transpartyInfo.from_country}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.from_country && touched && 'is-invalid'} ${transpartyInfo.from_country && touched && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <PartyTypeEnum \r\n                                                handleChange={handleChange} \r\n                                                label=\"Related Party Type*\" \r\n                                                name=\"partyType\"\r\n                                                value={transpartyInfo.partyType}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.partyType && touched && 'is-invalid'} ${transpartyInfo.partyType && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <CurrenciesEnum \r\n                                                handleChange={handleChange} \r\n                                                label=\"Currency Code*\" \r\n                                                name=\"foreign_currency_code\"\r\n                                                value={transpartyInfo.foreign_currency_code}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.foreign_currency_code && touched && 'is-invalid'} ${transpartyInfo.foreign_currency_code && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount \r\n                                                handleChange={handleChange} \r\n                                                label=\"Exchange Rate*\" \r\n                                                name=\"foreign_exchange_rate\"\r\n                                                value={transpartyInfo.foreign_exchange_rate}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.foreign_exchange_rate && touched && 'is-invalid'} ${transpartyInfo.foreign_exchange_rate && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormAmount \r\n                                                handleChange={handleChange} \r\n                                                label=\"Amount*\" \r\n                                                name=\"foreign_amount\"\r\n                                                value={transpartyInfo.foreign_amount}\r\n                                                onFocus={onFocus}\r\n                                                onBlur={onBlur}\r\n                                                onKeyUp={(e) => checkInputs(e, transpartyInfo)}\r\n                                                className={`from-control ${!transpartyInfo.foreign_amount && touched && 'is-invalid'} ${transpartyInfo.foreign_amount && 'is-valid'} `}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <p>\r\n                                                <button type=\"button\" onClick={() => { toggleMulti('person-conductor') }}\r\n                                                    class=\"btn btn-link\">Add Conductor</button>\r\n                                            </p>\r\n                                            <row>\r\n                                                <CCollapse show={collapseMulti[0]}>\r\n                                                    <TransactionPerson OnSave={handleSaveConductor} transRef={transRef} partyType={partyType} label=\"Add a Conductor\" name=\"conductor\" alias=\"Conductor\" ></TransactionPerson>\r\n                                                </CCollapse>\r\n                                            </row>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions \r\n                                    saveText=\"Save Party Overview\" \r\n                                    handleSaveClick={handleSaveClick} \r\n                                    handleCancelClick={handleCancelClick}>\r\n                                    </FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    partyType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: partyType => dispatch(SetReportType(partyType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionFromPartyInfo);\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass EntityLegalFormEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'AG'},\r\n                {value: 'G', description:'GmbH'},\r\n                {value: 'L', description:'Ltd.'},\r\n                {value: '-', description:'Unknown'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EntityLegalFormEnum;","import React from 'react';\r\nimport CombinedTable from './combined-table.component'\r\nimport usersData from '../../views/users/UsersData'\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass DirectorTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Directors Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DirectorTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass EntityPersonRoleEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: '---', description:'Default value'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EntityPersonRoleEnum;","import React from 'react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component'\r\nimport EntityPersonRoleEnum from '../../goaml-enums/entity-person-role-enum/entity-person-role-enum.component'\r\nimport TransactionPerson from '../transaction-person/transaction-person.component'\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\n\r\nconst DirectorTemplate = ({ name, transRef, OnSave, partyType, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [entityDirectorInfo, setEntityDirectorInfo] = React.useState({\r\n        \"role\": 0,\r\n        \"t_person\": null\r\n    })\r\n\r\n    const handleSaveDirectorPerson = (txnRef, partyType, person) => {\r\n        setEntityDirectorInfo({ ...entityDirectorInfo, t_person: person });\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setEntityDirectorInfo({ ...entityDirectorInfo, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        let director = {...entityDirectorInfo.t_person, role: entityDirectorInfo.role}\r\n        OnSave(transRef, partyType, director);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", entityDirectorInfo);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <EntityPersonRoleEnum handleChange={handleChange} label=\"Role\" name=\"role\"></EntityPersonRoleEnum>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionPerson OnSave={handleSaveDirectorPerson} transRef={transRef} partyType={partyType} name=\"Person\" label=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions saveText=\"Save Director\" handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default DirectorTemplate;","import React from 'react';\r\nimport DirectorTable from '../../goaml-tables/table-director.component'\r\nimport DirectorTemplate from '../template-director/template-director.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionDirectors = ({ name, label, transRef, partyType, OnSave, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <DirectorTemplate name=\"director\" label=\"Add a Director\" transRef={transRef} OnSave={OnSave} partyType={partyType} ></DirectorTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <DirectorTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionDirectors;\r\n","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormEmail from '../../form-inputs/form-email.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport CountryCodeEnum from '../../goaml-enums/country-code-enum/country-code-enum.component';\r\nimport EntityLegalFormEnum from '../../goaml-enums/entity-legal-form-enum/entity-legal-form-enum.component';\r\nimport ReportAddresses from '../../goaml-sections/report-addresses/report-addresses.component';\r\nimport ReportPhones from '../../goaml-sections/report-phones/report-phones.components';\r\nimport TransactionDirectors from '../transaction-director/transaction-director.component';\r\n\r\n\r\nconst TransactionEntity = ({ label, name, transRef, partyType, OnSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [templateEntity, setComponentState] = React.useState({\r\n        \"name\": '',\r\n        \"commercial_name\": '',\r\n        \"incorporation_legal_form\": '',\r\n        // \"incorporation_legal_formSpecified\": false,\r\n        \"incorporation_number\": '',\r\n        \"business\":'',\r\n        \"phones\": [],\r\n        \"addresses\": [],\r\n        \"email\": '',\r\n        \"url\": '',\r\n        \"incorporation_state\": '',\r\n        \"incorporation_country_code\": '',\r\n        // \"incorporation_country_codeSpecified\": false,\r\n        \"director_id\": [],\r\n        \"incorporation_date\": '',\r\n        // \"incorporation_dateSpecified\": '',\r\n        \"business_closed\": false,\r\n        // \"business_closedSpecified\": null,\r\n        // \"date_business_closed\": '',\r\n        // \"date_business_closedSpecified\": false,\r\n        \"tax_number\": '',\r\n        \"tax_reg_number\": '',\r\n        \"comments\": ''\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...templateEntity, [name]: value });\r\n    };\r\n\r\n    const handleSaveDirector = (director) => {\r\n        setComponentState({ ...templateEntity, director_id: { ...templateEntity.director_id, director } });\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        OnSave(transRef, partyType, templateEntity);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", templateEntity);\r\n    }\r\n\r\n    const handlePhoneSave = (phone) => {\r\n        templateEntity.phones.push(phone)\r\n    }\r\n\r\n    const handleAddressSave = (address) => {\r\n        templateEntity.addresses.push(address)\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {label}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Name*\" \r\n                                                name=\"name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.name} \r\n                                                className={`form-control ${!templateEntity.name && touched && 'is-invalid'} ${templateEntity.name && 'is-valid'}`} \r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Business Area\" \r\n                                                name=\"business\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.business} \r\n                                                className={`form-control ${!templateEntity.business && touched && 'is-invalid'} ${templateEntity.business && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Incorporation Province/State\" \r\n                                                name=\"incorporation_state\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_state} \r\n                                                className={`form-control ${!templateEntity.incorporation_state && touched && 'is-invalid'} ${templateEntity.incorporation_state && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Entity web address\" \r\n                                                name=\"url\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.url} \r\n                                                className={`form-control ${!templateEntity.url && touched && 'is-invalid'} ${templateEntity.url && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <FormInput \r\n                                                label=\"Registered Name*\" \r\n                                                name=\"commercial_name\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.commercial_name} \r\n                                                className={`form-control ${!templateEntity.commercial_name && touched && 'is-invalid'} ${templateEntity.commercial_name && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Incorporation Reg Number*\" \r\n                                                name=\"incorporation_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_number} \r\n                                                className={`form-control ${!templateEntity.incorporation_number && touched && 'is-invalid'} ${templateEntity.incorporation_number && 'is-valid'}`}\r\n                                            />\r\n                                            <CountryCodeEnum \r\n                                                label=\"incorporation_country_code\" \r\n                                                name=\"Incorporation Country Code*\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_country_code} \r\n                                                className={`form-control ${!templateEntity.incorporation_country_code && touched && 'is-invalid'} ${templateEntity.incorporation_country_code && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Reg. Number\" \r\n                                                name=\"tax_reg_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.tax_reg_number} \r\n                                                className={`form-control ${!templateEntity.tax_reg_number && touched && 'is-invalid'} ${templateEntity.tax_reg_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"4\">\r\n                                            <EntityLegalFormEnum \r\n                                                label=\"Incorporation Legal Form*\" \r\n                                                name=\"incorporation_legal_form\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_legal_form} \r\n                                                className={`form-control ${!templateEntity.incorporation_legal_form && touched && 'is-invalid'} ${templateEntity.incorporation_legal_form && 'is-valid'}`}\r\n                                            />\r\n                                            <FormDate \r\n                                                label=\"Incorporation Date*\" \r\n                                                name=\"incorporation_date\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.incorporation_date} \r\n                                                className={`form-control ${!templateEntity.incorporation_date && touched && 'is-invalid'} ${templateEntity.incorporation_date && 'is-valid'}`}\r\n                                            />\r\n                                            <FormEmail \r\n                                                label=\"Email\" \r\n                                                name=\"email\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.email} \r\n                                                className={`form-control ${!templateEntity.email && touched && 'is-invalid'} ${templateEntity.email && 'is-valid'}`}\r\n                                            />\r\n                                            <FormInput \r\n                                                label=\"Tax Number\" \r\n                                                name=\"tax_number\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.tax_number} \r\n                                                className={`form-control ${!templateEntity.tax_number && touched && 'is-invalid'} ${templateEntity.tax_number && 'is-valid'}`}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"6\">\r\n                                            <FormRadioText \r\n                                                label=\"Business Closed?\" \r\n                                                name=\"business_closed\" \r\n                                                width=\"6\" items={[\"Yes\", \"No\"]} \r\n                                                handleChange={handleChange}\r\n                                                value={templateEntity.business_closed}\r\n                                            />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportPhones \r\n                                                label=\"Phones*\"\r\n                                                name=\"phones\" \r\n                                                handlePhoneSave={handlePhoneSave}\r\n                                                value={templateEntity.phones}\r\n                                            ></ReportPhones>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <ReportAddresses \r\n                                                label=\"Addresses*\"\r\n                                                name=\"addresses\" \r\n                                                handleAddressSave={handleAddressSave} \r\n                                                value={templateEntity.addresses}\r\n                                            ></ReportAddresses>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionDirectors \r\n                                                label=\"Directors*\" \r\n                                                name=\"director_id\" \r\n                                                alias=\"Director\"\r\n                                                partyType={partyType} \r\n                                                transRef={transRef} \r\n                                                OnSave={handleSaveDirector}\r\n                                                value={templateEntity.director_id}\r\n                                            ></TransactionDirectors>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <FormTextArea \r\n                                                label=\"Comments\" \r\n                                                name=\"comments\" \r\n                                                placeholder=\"Enter ...\" \r\n                                                handleChange={handleChange}\r\n                                                onBlur={onBlur}\r\n                                                onFocus={onFocus}\r\n                                                onKeyUp={(e) => checkInputs(e, templateEntity)} \r\n                                                value={templateEntity.comments} \r\n                                                className={`form-control ${!templateEntity.comments && touched && 'is-invalid'} ${templateEntity.comments && 'is-valid'}`} \r\n                                            />\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                                <FormActions \r\n                                    saveText=\"Save Entity\" \r\n                                    handleSaveClick={handleSaveClick} \r\n                                    handleCancelClick={handleCancelClick}\r\n                                ></FormActions>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionEntity;\r\n","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass AccountTypeEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: 'A', description:'Business'},\r\n                {value: 'C', description:'Savings'},\r\n                {value: 'D', description:'Current Business'},\r\n                {value: 'E', description:'Current personal'},\r\n                {value: 'I', description:'Fixed'},\r\n                {value: 'L', description:'Trading Account'},\r\n                {value: 'O', description:'Other'},\r\n                {value: 'P', description:'Dormicilliary'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AccountTypeEnum;","import React from 'react';\r\nimport usersData from '../../views/users/UsersData';\r\nimport CombinedTable from './combined-table.component';\r\n\r\nconst fields = ['name','registered', 'role', 'status']\r\n\r\nclass SignatoryTable extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            transactionData : usersData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { transactionData } = this.state;\r\n        // const { name } = this.props;\r\n        \r\n        return(\r\n            <CombinedTable name=\"Signatories Table\" fields={fields} tableData={transactionData} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignatoryTable;","import React from 'react';\r\nimport FormDynamicSelect from '../../form-inputs/form-dynamic-select.component'\r\n\r\nclass AccountPersonRoleEnum extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            options : [\r\n                {value: '---', description:'Default value'}\r\n            ]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { options } = this.state;\r\n        const { name, label, handleChange } = this.props;\r\n        \r\n        return(\r\n            <FormDynamicSelect label={label} name={name} options={options} handleChange={handleChange} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AccountPersonRoleEnum;","import React from 'react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component'\r\nimport AccountPersonRoleEnum from '../../goaml-enums/account-person-role-enum/account-person-role-enum.component'\r\nimport TransactionPerson from '../transaction-person/transaction-person.component'\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\n\r\nconst SignatoryTemplate = ({ name, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    const [componentState, setComponentState] = React.useState();\r\n\r\n    const handleSaveClick = () => {\r\n        //handlePhoneSave(componentState);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setComponentState({ ...componentState, [name]: value });\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", componentState);\r\n    }\r\n    \r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                    {name}\r\n                    <div className=\"card-header-actions\">\r\n                        <CButton \r\n                        color=\"link\" \r\n                        className=\"card-header-action btn-minimize\" \r\n                        onClick={() => setCollapsed(!collapsed)}\r\n                        >\r\n                        <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                        </CButton>\r\n                    </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"8\">\r\n                                    <FormRadioText label=\"Is Primary?\" name=\"IsPrimary\" width=\"6\" items={[\"Yes\", \"No\"]} />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <AccountPersonRoleEnum label=\"Role\" name=\"Role\"></AccountPersonRoleEnum>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionPerson name=\"Person\" label=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <FormActions saveText=\"Save Signatory\" handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default SignatoryTemplate;","import React from 'react';\r\nimport SignatoryTable from '../../goaml-tables/table-signatory.component'\r\nimport SignatoryTemplate from '../template-signatory/template-signatory.components'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst TransactionSignatories = ({ name, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${label}`;\r\n    const tab2Title = `${label} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={label}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <SignatoryTemplate name=\"Add a Signatory\"></SignatoryTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <SignatoryTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionSignatories;\r\n","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport FormAmount from '../../form-inputs/form-amount.component';\r\nimport FormDate from '../../form-inputs/form-date.component';\r\nimport FormInput from '../../form-inputs/form-input.component';\r\nimport FormRadioText from '../../form-inputs/form-radio-text.component';\r\nimport FormTextArea from '../../form-inputs/form-textarea-component';\r\nimport AccountTypeEnum from '../../goaml-enums/account-type-enum/account-type-enum.component';\r\nimport CurrenciesEnum from '../../goaml-enums/currencies-enum/currencies-enum.component';\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components';\r\nimport TransactionSignatories from '../transaction-signatory/transaction-signatory.component';\r\n\r\n\r\nconst TransactionAccount = ({ name, label, transRef, partyType, OnSave, ...otherProps }) => {\r\n\r\n    const [collapsed, setCollapsed] = React.useState(false)\r\n    const [showElements, setShowElements] = React.useState(true)\r\n    let radioItems = [\"Yes\", \"No\"];\r\n    const [stateAccount, setStateAccount] = React.useState({\r\n        \"institution_name\": '',\r\n        \"institution_code\": '',\r\n        \"swift\": '',\r\n        \"non_banking_institution\": false,\r\n        \"branch\": '',\r\n        \"account\": '',\r\n        \"currency_code\": '',\r\n        \"account_name\": '',\r\n        \"iban\": '',\r\n        \"client_number\": '',\r\n        \"personal_account_type\": '',\r\n        \"t_entity\": '',\r\n        \"signatory\": '',\r\n        \"is_primary\": '',\r\n        \"t_person\": '',\r\n        \"role\": '',\r\n        \"opened\": '',\r\n        \"closed\": '',\r\n        \"balance\": '',\r\n        \"date_balance\": '',\r\n        \"status_code\": '',\r\n        \"beneficiary\": '',\r\n        \"beneficiary_comment\": '',\r\n        \"comments\": '',\r\n    })\r\n\r\n    const [touched, setTouched] = React.useState(false);\r\n    const onFocus = () => setTouched(true)\r\n    const onBlur = () => setTouched(false)\r\n\r\n    const [showError, setShowError] = React.useState({isEmpty: false, value: ''});\r\n\r\n    const checkInputs = (e, inputState) => {\r\n        let error = false;\r\n        let val = {};\r\n        for (const [key, value] of Object.entries(inputState)) {\r\n            if (e.target.name === key) {\r\n                value === '' ? error = true : error = false; \r\n                val = key;\r\n            }\r\n        }\r\n        setShowError({\r\n            isEmpty: error,\r\n            value: val\r\n         });\r\n    }\r\n    \r\n    console.log('error', showError)\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setStateAccount({ ...stateAccount, [name]: value });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        OnSave(transRef, partyType, stateAccount);\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", stateAccount);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        {label}\r\n                        <div className=\"card-header-actions\">\r\n                            <CButton \r\n                            color=\"link\" \r\n                            className=\"card-header-action btn-minimize\" \r\n                            onClick={() => setCollapsed(!collapsed)}\r\n                            >\r\n                            <CIcon name={collapsed ? 'cil-chevron-bottom':'cil-chevron-top'} />\r\n                            </CButton>\r\n                        </div>\r\n                    </CCardHeader>\r\n                    <CCollapse show={collapsed} timeout={1000}>\r\n                    <CCardBody>\r\n                        <CForm className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Account*\" \r\n                                        name=\"account\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.account} \r\n                                        className={`form-control ${!stateAccount.account && touched && 'is-invalid'} ${stateAccount.account && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Iban\" \r\n                                        name=\"iban\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.iban} \r\n                                        className={`form-control ${!stateAccount.iban && touched && 'is-invalid'} ${stateAccount.iban && 'is-valid'}`}\r\n                                    />\r\n                                    <FormRadioText \r\n                                        label=\"Non Banking Institution?\" \r\n                                        name=\"non_banking_institution\" \r\n                                        width=\"6\" \r\n                                        items={[\"Yes\", \"No\"]}\r\n                                        value={stateAccount.non_banking_institution}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                    <CurrenciesEnum \r\n                                        label=\"Currency Code*\" \r\n                                        name=\"currency_code\"\r\n                                        value={stateAccount.currency_code}\r\n                                        handleChange={handleChange} \r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Opened*\" \r\n                                        name=\"Opened\"\r\n                                        value={stateAccount.opened}\r\n                                        handleChange={handleChange} \r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Account name\" \r\n                                        name=\"account_name\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.account_name} \r\n                                        className={`form-control ${!stateAccount.account_name && touched && 'is-invalid'} ${stateAccount.account_name && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Institution Name*\" \r\n                                        name=\"institution_name\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.institution_name} \r\n                                        className={`form-control ${!stateAccount.institution_name && touched && 'is-invalid'} ${stateAccount.institution_name && 'is-valid'}`}\r\n                                    />\r\n                                    <FormRadioText \r\n                                        label=\"Code or Swift?\" \r\n                                        name=\"swift\" \r\n                                        width=\"6\" \r\n                                        items={[\"Institution Code\", \"Swift\"]}\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.swift} \r\n                                    />\r\n                                    <FormAmount \r\n                                        label=\"Balance*\" \r\n                                        name=\"balance\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.balance} \r\n                                        className={`form-control ${!stateAccount.balance && touched && 'is-invalid'} ${stateAccount.balance && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Closed\" \r\n                                        name=\"Closed\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.closed} \r\n                                        className={`form-control ${!stateAccount.closedt && touched && 'is-invalid'} ${stateAccount.closed && 'is-valid'}`}\r\n                                    />                    \r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <AccountTypeEnum \r\n                                        label=\"Account Type*\" \r\n                                        name=\"personal_account-type\" \r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.personal_account_type} \r\n                                        className={`form-control ${!stateAccount.personal_account_type && touched && 'is-invalid'} ${stateAccount.personal_account_type && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Branch Code*\" \r\n                                        name=\"branch\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.branch} \r\n                                        className={`form-control ${!stateAccount.branch && touched && 'is-invalid'} ${stateAccount.branch && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Role*\" \r\n                                        name=\"role\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.role} \r\n                                        className={`form-control ${!stateAccount.role && touched && 'is-invalid'} ${stateAccount.role && 'is-valid'}`}\r\n                                    />\r\n                                    <FormDate \r\n                                        label=\"Date of Balance*\" \r\n                                        name=\"date_balance\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.date_balance} \r\n                                        className={`form-control ${!stateAccount.date_balance && touched && 'is-invalid'} ${stateAccount.date_balance && 'is-valid'}`}\r\n                                    />\r\n                                    <FormInput \r\n                                        label=\"Client Number\" \r\n                                        name=\"client_number\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.client_number} \r\n                                        className={`form-control ${!stateAccount.client_number && touched && 'is-invalid'} ${stateAccount.client_number && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"4\">\r\n                                    <FormInput \r\n                                        label=\"Beneficiary\" \r\n                                        name=\"beneficiary\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.beneficiary} \r\n                                        className={`form-control ${!stateAccount.beneficiary && touched && 'is-invalid'} ${stateAccount.beneficiary && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"8\">\r\n                                    <FormTextArea \r\n                                        label=\"Beneficiary Comment\" \r\n                                        name=\"beneficiary_comment\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        onBlur={onBlur}\r\n                                        onFocus={onFocus}\r\n                                        onKeyUp={(e) => checkInputs(e, stateAccount)} \r\n                                        value={stateAccount.beneficiary_comment} \r\n                                        className={`form-control ${!stateAccount.beneficiary_comment && touched && 'is-invalid'} ${stateAccount.beneficiary_comment && 'is-valid'}`}\r\n                                    />\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionEntity \r\n                                        label=\"Transaction Entity\"\r\n                                        name=\"transaction_entity\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.transaction_entity}\r\n                                    ></TransactionEntity>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <TransactionSignatories \r\n                                        name=\"Signatories\" \r\n                                        label=\"signatory\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.signatory}\r\n                                    ></TransactionSignatories>\r\n                                </CCol>\r\n                                <CCol xs=\"12\">\r\n                                    <FormTextArea \r\n                                        label=\"Comments\" \r\n                                        name=\"comments\" \r\n                                        placeholder=\"Enter ...\"\r\n                                        handleChange={handleChange}\r\n                                        value={stateAccount.comments}\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    </CCollapse>\r\n                </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionAccount;","const TransactionsPartyTypes = {\r\n  FROM: 'FROM',\r\n  TO: 'TO',\r\n  MY_CLIENT: 'MY_CLIENT',\r\n  PERSON_CLIENT: 'PERSON_CLIENT',\r\n  ACCOUNT_CLIENT: 'ACCOUNT_CLIENT',\r\n  ENTITY_CLIENT: 'ENTITY_CLIENT',\r\n  NOT_MY_CLIENT: 'NOT_MY_CLIENT',\r\n  PERSON_NOT_CLIENT: 'PERSON_NOT_CLIENT',\r\n  ACCOUNT_NOT_CLIENT: 'ACCOUNT_NOT_CLIENT',\r\n  ENTITY_NOT_CLIENT: 'ENTITY_NOT_CLIENT'\r\n};\r\n\r\nexport default TransactionsPartyTypes;","import React from 'react';\r\nimport TransactionToPartyInfo from '../transaction-party-info/transaction-to-party-info.component'\r\nimport TransactionFromPartyInfo from '../transaction-party-info/transaction-from-party-info.component'\r\nimport TransactionPerson from '../transaction-person/transaction-person.component'\r\nimport TransactionEntity from '../transaction-entity/transaction-entity.components'\r\nimport TransactionAccount from '../transaction-account/transaction-account.components'\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types'\r\n\r\nimport {\r\n    CButton,\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst TransactionParty = ({ name, label, displayPartyType, reportType, transRef, handleSaveParty, ...otherProps }) => {\r\n\r\n    const [collapseMulti, setCollapseMulti] = React.useState([false, false, false, false, false, false])\r\n    let [showElements, setShowElements] = React.useState(true)\r\n\r\n    const toggleMulti = (type) => {\r\n        let newCollapse = collapseMulti.slice()\r\n        switch (type) {\r\n            case \"person-client\":\r\n                newCollapse[0] = !collapseMulti[0];\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                newCollapse[4] = false;\r\n                newCollapse[5] = false;\r\n                break;\r\n            case \"account-client\"://\r\n                newCollapse[1] = !collapseMulti[1];\r\n                newCollapse[0] = false;\r\n                newCollapse[2] = false;\r\n                newCollapse[3] = false;\r\n                newCollapse[4] = false;\r\n                newCollapse[5] = false;\r\n                break;\r\n            case \"entity-client\":\r\n                newCollapse[2] = !collapseMulti[2];\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[3] = false;\r\n                newCollapse[4] = false;\r\n                newCollapse[5] = false;\r\n                break;\r\n            case \"not-person-client\":\r\n                newCollapse[3] = !collapseMulti[3];\r\n                newCollapse[4] = false;\r\n                newCollapse[5] = false;\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            case \"not-account-client\":\r\n                newCollapse[4] = !collapseMulti[4];\r\n                newCollapse[3] = false;\r\n                newCollapse[5] = false;\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            case \"not-entity-client\":\r\n                newCollapse[5] = !collapseMulti[5];\r\n                newCollapse[3] = false;\r\n                newCollapse[4] = false;\r\n                newCollapse[0] = false;\r\n                newCollapse[1] = false;\r\n                newCollapse[2] = false;\r\n                break;\r\n            default:\r\n        }\r\n        setCollapseMulti(newCollapse)\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"myClient\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"myClient\">\r\n                                        My Client\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                    <CNavLink data-tab=\"notMyClient\">\r\n                                        Not My Client\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"myClient\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                                {displayPartyType == TransactionsPartyTypes.FROM ?\r\n                                                    <TransactionFromPartyInfo transRef={transRef} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={handleSaveParty} name={`Expand and Fill ${label} Overview`} />\r\n                                                    :\r\n                                                    <TransactionToPartyInfo transRef={transRef} partyType={TransactionsPartyTypes.MY_CLIENT} handleSavePartyInfo={handleSaveParty} name={`Expand and Fill ${label} Overview`} />\r\n                                                }\r\n                                                <p>\r\n                                                    <button type=\"button\" onClick={() => { toggleMulti('person-client') }}\r\n                                                        class=\"btn btn-link\">Add Person</button>\r\n                                                    <button type=\"button\" onClick={() => { toggleMulti('account-client') }}\r\n                                                        class=\"btn btn-link\">Add Account</button>\r\n                                                    <button type=\"button\" onClick={() => { toggleMulti('entity-client') }}\r\n                                                        class=\"btn btn-link\">Add Entity</button>\r\n                                                </p>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[0]}>\r\n                                                            <TransactionPerson OnSave={handleSaveParty} partyType={TransactionsPartyTypes.PERSON_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person\" alias=\"Person\"></TransactionPerson>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[1]}>\r\n                                                            <TransactionAccount OnSave={handleSaveParty} partyType={TransactionsPartyTypes.ACCOUNT_CLIENT} transRef={transRef} name=\"TransactionAccount\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[2]}>\r\n                                                            <TransactionEntity OnSave={handleSaveParty} partyType={TransactionsPartyTypes.ENTITY_CLIENT} transRef={transRef} name=\"TransactionEntity\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"notMyClient\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            {displayPartyType == TransactionsPartyTypes.FROM ?\r\n                                                    <TransactionFromPartyInfo transRef={transRef} partyType={TransactionsPartyTypes.NOT_MY_CLIENT} handleSavePartyInfo={handleSaveParty} name={`Expand and Fill ${label} Overview`} />\r\n                                                    :\r\n                                                    <TransactionToPartyInfo transRef={transRef} partyType={TransactionsPartyTypes.NOT_MY_CLIENT} handleSavePartyInfo={handleSaveParty} name={`Expand and Fill ${label} Overview`} />\r\n                                                }\r\n                                                <p>\r\n                                                    <CButton color=\"primary\" onClick={() => { toggleMulti('not-person-client') }}\r\n                                                        class=\"btn btn-link\">Add Person</CButton>{' '}\r\n                                                    <CButton color=\"primary\" onClick={() => { toggleMulti('not-account-client') }}\r\n                                                        class=\"btn btn-link\">Add Account</CButton>{' '}\r\n                                                    <CButton color=\"primary\" onClick={() => { toggleMulti('not-entity-client') }}\r\n                                                        class=\"btn btn-link\">Add Entity</CButton>{' '}\r\n                                                </p>\r\n                                                <CRow>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[3]}>\r\n                                                            <TransactionPerson OnSave={handleSaveParty} partyType={TransactionsPartyTypes.PERSON_NOT_CLIENT} transRef={transRef} label=\"Transaction Person\" name=\"Person-NC\" alias=\"Person\"></TransactionPerson>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[4]}>\r\n                                                            <TransactionAccount OnSave={handleSaveParty} partyType={TransactionsPartyTypes.ACCOUNT_NOT_CLIENT} transRef={transRef} name=\"TransactionAccount-NC\" label=\"Transaction Account\"></TransactionAccount>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                    <CCol className=\"col-sm-12\">\r\n                                                        <CCollapse show={collapseMulti[5]}>\r\n                                                            <TransactionEntity OnSave={handleSaveParty} partyType={TransactionsPartyTypes.ENTITY_NOT_CLIENT} transRef={transRef} name=\"TransactionEntity-NC\" label=\"Transaction Entity\"></TransactionEntity>\r\n                                                        </CCollapse>\r\n                                                    </CCol>\r\n                                                </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default TransactionParty;","import CIcon from '@coreui/icons-react';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CRow\r\n} from '@coreui/react';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RetrieveTransactionFromReport } from '../../../redux/goaml-utils/goaml-utils';\r\nimport { SetReportType } from '../../../redux/report-type/report-type.actions';\r\nimport { selectReportType } from '../../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../../form-inputs/form-actions.component';\r\nimport TransactionInfo from '../transaction-info/transaction-info.components';\r\nimport TransactionItem from '../transaction-item/transaction-item.components';\r\nimport TransactionParty from '../transaction-party/transaction-party.component';\r\nimport TransactionsPartyTypes from '../transaction-party/transaction-party.types';\r\n\r\n\r\nconst TransactionTemplate = ({ name, reportType, setReportType, ...otherProps }) => {\r\n\r\n    let [collapsed, setCollapsed] = React.useState(false)\r\n    let [showElements, setShowElements] = React.useState(true)\r\n    let [transitState, setTransitState] = React.useState({\r\n        transRef: null,\r\n        fromMyClientParty: { \"Item\": null, \"Info\": null },\r\n        fromNotMyClientParty: { \"Item\": null, \"Info\": null },\r\n        toMyClientParty: { \"Item\": null, \"Info\": null },\r\n        toNotMyClientParty: { \"Item\": null, \"Info\": null }\r\n    })\r\n\r\n    const handleTransInfoSaveClick = (reportTxns, transaction) => {\r\n        setTransitState({ ...transitState, transRef: transaction.internal_ref_number })\r\n        setReportType({ ...reportType, transaction: reportTxns });\r\n    }\r\n\r\n    const handleSaveFromParty = (txnRef, partyType, txnParty) => {\r\n        if (transitState.transRef == null) {\r\n            alert(\"Please save Transaction Overview First\");\r\n            return;\r\n        }\r\n        let filteredParties = [];\r\n        const reportTxn = RetrieveTransactionFromReport(reportType, txnRef);\r\n        switch (partyType) {\r\n            case TransactionsPartyTypes.MY_CLIENT:\r\n                setTransitState({ ...transitState, fromMyClientParty: { ...transitState.fromMyClientParty, Info: txnParty } })\r\n                filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from_my_client\"));\r\n                filteredParties.push({ \"t_from_my_client\": { ...txnParty.partyInfo, ...transitState.fromMyClientParty.Item } });\r\n                reportTxn.Items = filteredParties;\r\n                break;\r\n            case TransactionsPartyTypes.NOT_MY_CLIENT:\r\n                setTransitState({ ...transitState, fromNotMyClientParty: { ...transitState.fromNotMyClientParty, Info: txnParty } })\r\n                filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from\"));\r\n                filteredParties.push({ \"t_from\": { ...txnParty.partyInfo, ...transitState.fromNotMyClientParty.Item } });\r\n                reportTxn.Items = filteredParties;\r\n                break;\r\n            case TransactionsPartyTypes.PERSON_CLIENT:\r\n                if (transitState.fromMyClientParty.Info == null) {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.fromMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.fromMyClientParty.Info.partyType == \"Person\") {\r\n                        const fromPerson = { \"from_person\": txnParty };\r\n                        setTransitState({ ...transitState, fromMyClientParty: { ...transitState.fromMyClientParty, Item: fromPerson } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from_my_client\"));\r\n                        filteredParties.push({ \"t_from_my_client\": { ...transitState.fromMyClientParty.Info.partyInfo, ...fromPerson } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ENTITY_CLIENT:\r\n                if (transitState.fromMyClientParty.Info == null) {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.fromMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.fromMyClientParty.Info.partyType == \"Entity\") {\r\n                        const fromEntity = { \"from_entity\": txnParty };\r\n                        setTransitState({ ...transitState, fromMyClientParty: { ...transitState.fromMyClientParty, Item: fromEntity } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from_my_client\"));\r\n                        filteredParties.push({ \"t_from_my_client\": { ...transitState.fromMyClientParty.Info.partyInfo, ...fromEntity } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.PERSON_NOT_CLIENT:\r\n                if (transitState.fromMyClientParty.Info == null) {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.fromNotMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.fromNotMyClientParty.Info.partyType == \"Person\") {\r\n                        const fromPerson = { \"from_person\": txnParty };\r\n                        setTransitState({ ...transitState, fromNotMyClientParty: { ...transitState.fromNotMyClientParty, Item: fromPerson } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from\"));\r\n                        filteredParties.push({ \"t_from\": { ...transitState.fromNotMyClientParty.Info.partyInfo, ...fromPerson } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ENTITY_NOT_CLIENT:\r\n                if (transitState.fromMyClientParty.Info == null) {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.fromNotMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.fromNotMyClientParty.Info.partyType == \"Entity\") {\r\n                        const from_entity = { \"from_entity\": txnParty };\r\n                        setTransitState({ ...transitState, fromNotMyClientParty: { ...transitState.fromNotMyClientParty, Item: from_entity } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_from\"));\r\n                        filteredParties.push({ \"t_from\": { ...transitState.fromNotMyClientParty.Info.partyInfo, ...from_entity } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save From Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ACCOUNT_CLIENT:\r\n\r\n                break;\r\n            case TransactionsPartyTypes.ACCOUNT_NOT_CLIENT:\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let reportTxns = reportType.Items.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === txnRef\r\n                ? reportTxn\r\n                : reportTransaction)\r\n        setReportType({ ...reportType, transaction: reportTxns });\r\n    }\r\n\r\n    const handleSaveToParty = (txnRef, partyType, txnParty) => {\r\n        if (transitState.transRef == null) {\r\n            alert(\"Please save Transaction Overview First\");\r\n            return;\r\n        }\r\n        let filteredParties = [];\r\n        const reportTxn = RetrieveTransactionFromReport(reportType, txnRef);\r\n        switch (partyType) {\r\n            case TransactionsPartyTypes.MY_CLIENT:\r\n                setTransitState({ ...transitState, toMyClientParty: { ...transitState.toMyClientParty, Info: txnParty } })\r\n                filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to_my_client\"));\r\n                filteredParties.push({ \"t_to_my_client\": { ...txnParty.partyInfo, ...transitState.toMyClientParty.Item } });\r\n                reportTxn.Items = filteredParties;\r\n                break;\r\n            case TransactionsPartyTypes.NOT_MY_CLIENT:\r\n                setTransitState({ ...transitState, toNotMyClientParty: { ...transitState.toNotMyClientParty, Info: txnParty } })\r\n                filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to\"));\r\n                filteredParties.push({ \"t_to\": { ...txnParty.partyInfo, ...transitState.toNotMyClientParty.Item } });\r\n                reportTxn.Items = filteredParties;\r\n                break;\r\n\r\n            case TransactionsPartyTypes.PERSON_CLIENT:\r\n                if (transitState.toMyClientParty.Info == null) {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.toMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.toMyClientParty.Info.partyType == \"Person\") {\r\n                        const toPerson = { \"to_person\": txnParty };\r\n                        setTransitState({ ...transitState, toMyClientParty: { ...transitState.toMyClientParty, Item: toPerson } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to_my_client\"));\r\n                        filteredParties.push({ \"t_to_my_client\": { ...transitState.toMyClientParty.Info.partyInfo, ...toPerson } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ENTITY_CLIENT:\r\n                if (transitState.toMyClientParty.Info == null) {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.toMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.toMyClientParty.Info.partyType == \"Entity\") {\r\n                        const toEntity = { \"to_entity\": txnParty };\r\n                        setTransitState({ ...transitState, toMyClientParty: { ...transitState.toMyClientParty, Item: toEntity } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to_my_client\"));\r\n                        filteredParties.push({ \"t_to_my_client\": { ...transitState.toMyClientParty.Info.partyInfo, ...toEntity } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.PERSON_NOT_CLIENT:\r\n                if (transitState.toNotMyClientParty.Info == null) {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.toNotMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.toNotMyClientParty.Info.partyType == \"Person\") {\r\n                        const toPerson = { \"to_person\": txnParty };\r\n                        setTransitState({ ...transitState, toNotMyClientParty: { ...transitState.toNotMyClientParty, Item: toPerson } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to\"));\r\n                        filteredParties.push({ \"t_to\": { ...transitState.toNotMyClientParty.Info.partyInfo, ...toPerson } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ENTITY_NOT_CLIENT:\r\n                if (transitState.toNotMyClientParty.Info == null) {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    return;\r\n                }\r\n                if (transitState.toNotMyClientParty.Info.hasOwnProperty(\"partyType\")) {\r\n                    if (transitState.toNotMyClientParty.Info.partyType == \"Entity\") {\r\n                        const toEntity = { \"to_entity\": txnParty };\r\n                        setTransitState({ ...transitState, toNotMyClientParty: { ...transitState.toNotMyClientParty, Item: toEntity } })\r\n                        filteredParties = reportTxn.Items.filter(item => !item.hasOwnProperty(\"t_to\"));\r\n                        filteredParties.push({ \"t_to\": { ...transitState.toNotMyClientParty.Info.partyInfo, ...toEntity } });\r\n                        reportTxn.Items = filteredParties;\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Please save To Party Overview First\");\r\n                    break;\r\n                }\r\n                break;\r\n            case TransactionsPartyTypes.ACCOUNT_CLIENT:\r\n\r\n                break;\r\n            case TransactionsPartyTypes.ACCOUNT_NOT_CLIENT:\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        let reportTxns = reportType.Items.map(reportTransaction =>\r\n            reportTransaction.internal_ref_number === txnRef\r\n                ? reportTxn\r\n                : reportTransaction)\r\n        setReportType({ ...reportType, transaction: reportTxns });\r\n    }\r\n\r\n    const handleTransItemSaveClick = (reportTxns, transaction) => {\r\n        if (transitState.transRef == null) {\r\n            alert(\"Please save From Transaction Overview First\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSaveClick = () => {\r\n        if (transitState.transRef == null) {\r\n            alert(\"Please save From Transaction Overview First\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            {name}\r\n                            <div className=\"card-header-actions\">\r\n                                <CButton\r\n                                    color=\"link\"\r\n                                    className=\"card-header-action btn-minimize\"\r\n                                    onClick={() => setCollapsed(!collapsed)}\r\n                                >\r\n                                    <CIcon name={collapsed ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\r\n                                </CButton>\r\n                            </div>\r\n                        </CCardHeader>\r\n                        <CCollapse show={collapsed} timeout={1000}>\r\n                            <CCardBody>\r\n                                <CForm className=\"form-horizontal\">\r\n                                    <CFormGroup row>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionInfo handleSaveInfoClick={handleTransInfoSaveClick} transRef={transitState.transRef} label=\"Transaction Overview\" name=\"TransactionOverview\" />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionParty handleSaveParty={handleSaveFromParty} transRef={transitState.transRef} label=\"From Party\" name=\"FromParty\" displayPartyType={TransactionsPartyTypes.FROM} />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionParty handleSaveParty={handleSaveToParty} transRef={transitState.transRef} label=\"To Party\" name=\"ToParty\" displayPartyType={TransactionsPartyTypes.TO} />\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\">\r\n                                            <TransactionItem handleSaveItem={handleTransItemSaveClick} transRef={transitState.transRef} label=\"Transaction Item\" name=\"goods_services\"></TransactionItem>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <FormActions saveText=\"Submit Transaction\" handleSaveClick={handleSaveClick} handleCancelClick={handleCancelClick}></FormActions>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCollapse>\r\n                    </CCard>\r\n                </CFade>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setReportType: reportType => dispatch(SetReportType(reportType))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionTemplate);","import React from 'react';\r\nimport TransactionTable from '../../goaml-tables/table-transaction.component'\r\nimport TransactionTemplate from '../template-transaction/template-transaction.component'\r\nimport {\r\n    CLabel,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CFade,\r\n    CRow,\r\n    CNav,\r\n    CNavItem,\r\n    CNavLink,\r\n    CTabContent,\r\n    CTabPane,\r\n    CTabs,\r\n  } from '@coreui/react'\r\n\r\nconst ReportTransactions = ({ name, label, ...otherProps }) => {\r\n    \r\n    let [showElements, setShowElements] = React.useState(true)\r\n    const tab1Title = `Add ${name}`;\r\n    const tab2Title = `${name} Table`;\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\">\r\n                {label ? (\r\n                    <CLabel htmlFor={name}>{label}</CLabel>\r\n                ) : null}\r\n                <div className=\"row\">\r\n                    <CCol xs=\"12\">\r\n                        <CTabs activeTab=\"Tab1\">\r\n                            <CNav variant=\"tabs\">\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab1\">\r\n                                    {tab1Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                                <CNavItem>\r\n                                <CNavLink data-tab=\"Tab2\">\r\n                                    {tab2Title}\r\n                                </CNavLink>\r\n                                </CNavItem>\r\n                            </CNav>\r\n                            <CTabContent>\r\n                                <CTabPane data-tab=\"Tab1\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <TransactionTemplate name=\"Add a Transaction\"></TransactionTemplate>\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                                <CTabPane data-tab=\"Tab2\">\r\n                                    <CFade timeout={300} in={showElements} unmountOnExit={true}>\r\n                                        <CCard>\r\n                                            <CCardBody>\r\n                                            <CRow>\r\n                                                <CCol className=\"col-sm-12\">\r\n                                                    <TransactionTable name={name} />\r\n                                                </CCol>\r\n                                            </CRow>\r\n                                            </CCardBody>\r\n                                        </CCard>\r\n                                    </CFade>\r\n                                </CTabPane>\r\n                            </CTabContent>\r\n                        </CTabs>\r\n                    </CCol>\r\n                </div>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n}\r\n\r\nexport default ReportTransactions;","var endScopeObj = {};\r\nvar optionsObj = {\r\n    rootName: 'name of the root', // defaults to 'root'\r\n    declaration: 'auto' || '<a custom declaration>', // defaults to undefined\r\n    indentation: 'number', // defaults to 0\r\n    doctype: 'auto', // defaults to undefined\r\n    attributes: false || true // defaults to true\r\n}\r\n\r\nexport const obj2xml = function OBJtoXML(obj) {\r\n    var xml = '';\r\n    for (var prop in obj) {\r\n        xml += obj[prop] instanceof Array ? '' : \"<\" + prop + \">\";\r\n        if (obj[prop] instanceof Array) {\r\n            for (var array in obj[prop]) {\r\n                xml += \"<\" + prop + \">\";\r\n                xml += OBJtoXML(new Object(obj[prop][array]));\r\n                xml += \"</\" + prop + \">\";\r\n            }\r\n        } else if (typeof obj[prop] == \"object\") {\r\n            xml += OBJtoXML(new Object(obj[prop]));\r\n        } else {\r\n            xml += obj[prop];\r\n        }\r\n        xml += obj[prop] instanceof Array ? '' : \"</\" + prop + \">\";\r\n    }\r\n    var xml = xml.replace(/<\\/?[0-9]{1,}>/g, '');\r\n    return xml\r\n}\r\n\r\nexport const obj2xml_inverse = function (obj, opt) {\r\n    if (!opt) opt = {\r\n        rootName: 'report',\r\n        attributes: false\r\n    };\r\n    var rootName = opt.rootName || 'root';\r\n    var declaration = opt.declaration === 'auto' ? '<?xml version=\"1.0\" encoding=\"utf-8\"?>' : opt.declaration;\r\n    var indentation = opt.indentation || 0;\r\n    var generateDtd = (opt.doctype === 'auto' || opt.doctype === 'generate') && declaration;\r\n    var useAttributes = opt.attributes === false ? false : true;\r\n    var scope_indent = 0;\r\n    if (generateDtd) {\r\n        var dtdAttr = {};\r\n        var dtdElem = {};\r\n    }\r\n    var ret = [];\r\n    var tagContent, isArr, curs, _t, _ti, key, innerKey, name, queue = [obj, rootName];\r\n    while (queue.length > 0) {\r\n        name = queue.pop();\r\n        curs = queue.pop();\r\n        if (generateDtd)\r\n            dtdElem[name] = dtdElem[name] || {};\r\n        if (curs === endScopeObj) {\r\n            scope_indent--;\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('</', name, '>');\r\n            continue;\r\n        }\r\n        if (typeof curs === 'object') {\r\n            queue.push(endScopeObj);\r\n            queue.push(name);\r\n            tagContent = [name];\r\n            isArr = Array.isArray(curs);\r\n            if (isArr && generateDtd) {\r\n                dtdElem[name][name + 'Item*'] = true;\r\n            }\r\n            for (key in curs) {\r\n                if (curs.hasOwnProperty(key)) {\r\n                    if (isArr) {\r\n                        queue.push(curs[key]);\r\n                        queue.push(name + 'Item');\r\n                    } else if (typeof curs[key] == 'object' || useAttributes === false) {\r\n                        queue.push(curs[key]);\r\n                        queue.push(key);\r\n                        if (generateDtd)\r\n                            dtdElem[name][key] = true;\r\n                    } else {\r\n                        if (generateDtd) {\r\n                            dtdAttr[name] = dtdAttr[name] || {};\r\n                            dtdAttr[name][key] = true;\r\n                        }\r\n                        tagContent.push(key + '=' + '\"' + curs[key] + '\"');\r\n                    }\r\n                }\r\n            }\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('<', tagContent.join(' '), '>');\r\n            scope_indent++;\r\n        } else {\r\n            if (generateDtd)\r\n                dtdElem[name]['#PCDATA'] = true;\r\n            if (indentation > 0) ret.push('\\n', ' '.repeat(indentation * scope_indent));\r\n            ret.push('<');\r\n            ret.push(name);\r\n            ret.push('>');\r\n            ret.push(curs);\r\n            ret.push('</');\r\n            ret.push(name);\r\n            ret.push('>');\r\n        }\r\n    }\r\n    if (generateDtd) {\r\n        var dtd = ['<!DOCTYPE ', rootName, ' ['];\r\n        for (key in dtdAttr) {\r\n            if (dtdAttr.hasOwnProperty(key)) {\r\n                for (innerKey in dtdAttr[key]) {\r\n                    if (dtdAttr[key].hasOwnProperty(innerKey)) {\r\n                        if (indentation > 0) dtd.push('\\n');\r\n                        dtd.push('<!ATTLIST ', key, ' ', innerKey, ' CDATA #IMPLIED>');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (key in dtdElem) {\r\n            if (dtdElem.hasOwnProperty(key)) {\r\n                innerKey = null;\r\n                _t = ['<!ELEMENT ', key, ' ('];\r\n                _ti = [];\r\n                for (innerKey in dtdElem[key]) {\r\n                    if (dtdElem[key].hasOwnProperty(innerKey)) {\r\n                        _ti.push(innerKey);\r\n                    }\r\n                }\r\n                if (indentation > 0) dtd.push('\\n');\r\n                if (innerKey === null) // no children\r\n                    dtd.push('<!ELEMENT ', key, ' EMPTY>');\r\n                else {\r\n                    _t.push(_ti.join(', '));\r\n                    _t.push(')>');\r\n                    dtd.push.apply(dtd, _t);\r\n                }\r\n            }\r\n        }\r\n        dtd.push(']>');\r\n        ret.unshift.apply(ret, dtd);\r\n    } else if (declaration)\r\n        ret.unshift(opt.doctype ? opt.doctype : '<!DOCTYPE ' + rootName + '>');\r\n    if (declaration) ret.unshift(declaration);\r\n    return ret.join('');\r\n};\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { selectReportType } from '../../redux/report-type/report-type.selectors';\r\nimport FormActions from '../form-inputs/form-actions.component';\r\nimport { obj2xml } from './converter-json-xml'\r\nimport {downloadObjectAsXml, downloadXmlAsFile } from './report-downloader'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CRow,\r\n    CCol\r\n} from '@coreui/react';\r\n\r\nconst ReportGenerator = ({ name, label, reportType }) => {\r\n\r\n    const generateXMLReport = () => {\r\n        const report = \"<report>\" + obj2xml(reportType) + \"</report>\"; \r\n        downloadObjectAsXml(report, \"report\");\r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        console.log(\"Hello: \", reportType);\r\n    }\r\n\r\n    return (\r\n        <CCard>\r\n            <CCardBody>\r\n                <CRow>\r\n                    <CCol className=\"col-sm-12\">\r\n                        <FormActions saveText=\"Generate XML Report\" handleSaveClick={generateXMLReport} handleCancelClick={handleCancelClick}></FormActions>\r\n                    </CCol>\r\n                </CRow>\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reportType: selectReportType(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ReportGenerator)","export const downloadObjectAsXml = (exportObj, exportName) => {\r\n    //This will not work without limits, though. You can only download about 1MB of data. \r\n    //For example, var storageObj = []; for (var i=0; i<1000000; ++i) storageObj.push('aaa'); \r\n    //gives \"download Failed - Network error\" in Chrome 61\r\n    \r\n    var dataStr = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(exportObj);\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".xml\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n}\r\n\r\nexport const downloadXmlAsFile = (xmltext, filename) => {\r\n    // This doesn't work in mac firefox and opens the tab with content instead of downloading in mac safari\r\n    var pom = document.createElement('a');\r\n\r\n    var filename = `${filename}.xml`;\r\n    var pom = document.createElement('a');\r\n    var bb = new Blob([xmltext], { type: 'text/plain' });\r\n\r\n    pom.setAttribute('href', window.URL.createObjectURL(bb));\r\n    pom.setAttribute('download', filename);\r\n\r\n    pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\r\n    pom.draggable = true;\r\n    pom.classList.add('dragout');\r\n\r\n    pom.click();\r\n}","import React from 'react';\r\nimport ReportType from '../../components/goaml-sections/report-type/report-type.component'\r\nimport ReportPerson from '../../components/goaml-sections/report-person/report-person.component'\r\nimport ReportLocation from '../../components/goaml-sections/report-location/report-location.component'\r\nimport ReportIndicator from '../../components/goaml-sections/report-indicator/report-indicator.component'\r\nimport ReportTransactions from '../../components/goaml-sections/report-transactions/report-transactions.component'\r\nimport ReportGenerator from '../../components/goaml-core/report-generator.component'\r\n\r\nconst GoAmlPage = () => (\r\n    <div>\r\n        <ReportType name=\"Report Type\"></ReportType>\r\n        <ReportPerson></ReportPerson>\r\n        <ReportLocation></ReportLocation>\r\n        <ReportIndicator name=\"Report Indicator\"></ReportIndicator>\r\n        <ReportTransactions name=\"Transaction\" label=\"Report Transaction\"></ReportTransactions>\r\n        <ReportGenerator name=\"Report Generator\" label=\"Generate GoAML Report\"></ReportGenerator>\r\n    </div>\r\n)\r\n\r\nexport default GoAmlPage;"],"sourceRoot":""}